<?xml version="1.0" encoding="UTF-8" ?>

<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.1 plus MathML 2.0//EN"
"http://www.w3.org/TR/MathML2/dtd/xhtml-math11-f.dtd" [
<!ENTITY mathml "http://www.w3.org/1998/Math/MathML">
]>

<html xmlns="http://www.w3.org/1999/xhtml"
      xmlns:xlink="http://www.w3.org/1999/xlink" >


  <head>
    <title>Section13.1</title>
    <link rel="stylesheet" type="text/css" href="graphicstyle.css" />
    <script type="text/javascript" src="bookax1.js" />
  </head>

  <body>
<a href="book-contents.xhtml" style="margin-right: 10px;">Book Contents</a><a href="section-13.0.xhtml" style="margin-right: 10px;">Previous Section 13.0 Domains</a><a href="section-13.2.xhtml" style="margin-right: 10px;">Next Section 13.2 Definitions</a>
<a href="book-index.xhtml">Book Index</a><div class="section"  id="sec-13.1">
<h2 class="sectiontitle">13.1  Domains vs. Packages</h2>


<a name="ugPackagesDoms" class="label"/>


<p>Packages are special cases of domains.
What is the difference between a package and a domain that is not a
package?
By definition, there is only one difference: a domain that is not a package
has the symbol <span class="teletype">  $</span> appearing
somewhere among the types of its exported operations.
The <span class="teletype">  $</span> denotes <span class="italic">this domain.</span> If the <span class="teletype">  $</span>
appears before the <span class="teletype"> -></span> in the type of a signature, it means
the operation takes an element from the domain as an argument.
If it appears after the <span class="teletype"> -></span>, then the operation returns an
element of the domain.
</p>


<p>If no exported operations mention <span class="teletype">  $</span>, then evidently there is
nothing of interest to do with the objects of the domain.  You might
then say that a package is a <span class="italic">boring</span> domain!  But, as you saw in
Chapter <a href="section-11.0.xhtml#ugPackages" class="ref" >ugPackages</a>, packages are a
very useful notion indeed.  The exported operations of a package
depend solely on the parameters to the package constructor and other
explicit domains.
</p>


<p>To summarize, domain constructors are versatile structures that serve two
distinct practical purposes:
Those like <span class="teletype"> Polynomial</span> and <span class="teletype"> List</span>
describe classes of computational objects;
others, like <span class="teletype"> SortPackage</span>, describe packages of useful
operations.
As in the last chapter, we focus here on the first kind.
</p>




</div><a href="book-contents.xhtml" style="margin-right: 10px;">Book Contents</a>
<a href="section-13.0.xhtml" style="margin-right: 10px;">Previous Section 13.0 Domains</a><a href="section-13.2.xhtml" style="margin-right: 10px;">Next Section 13.2 Definitions</a>
<a href="book-index.xhtml">Book Index</a></body>
</html>