<?xml version="1.0" encoding="UTF-8" ?>

<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.1 plus MathML 2.0//EN"
"http://www.w3.org/TR/MathML2/dtd/xhtml-math11-f.dtd" [
<!ENTITY mathml "http://www.w3.org/1998/Math/MathML">
]>

<html xmlns="http://www.w3.org/1999/xhtml"
      xmlns:xlink="http://www.w3.org/1999/xlink" >


  <head>
    <title>Section12.0</title>
    <link rel="stylesheet" type="text/css" href="graphicstyle.css" />
    <script type="text/javascript" src="bookax1.js" />
  </head>

  <body>
<a href="book-contents.xhtml" style="margin-right: 10px;">Book Contents</a><a href="section-11.10.xhtml" style="margin-right: 10px;">Previous Section 11.10  How Packages Work</a><a href="section-12.1.xhtml" style="margin-right: 10px;">Next Section 12.1 Definitions</a>
<a href="book-index.xhtml">Book Index</a><div class="section"  id="sec-12.0">
<h2 class="sectiontitle">12.0 Categories</h2>
<a name="ugCategories" class="label"/>

<p>This chapter unravels the mysteries of categories---what
<span class="index">category</span><a name="chapter-12-0"/>
they are, how they are related to domains and packages,
<span class="index">category:constructor</span><a name="chapter-12-1"/>
how they are defined in FriCAS, and how you can extend the
<span class="index">constructor:category</span><a name="chapter-12-2"/>
system to include new categories of your own.
</p>


<p>We assume that you have read the introductory material on domains
and categories in <a href="section-2.1.xhtml#ugTypesBasicDomainCons" class="ref" >ugTypesBasicDomainCons</a> .
There you learned that the notion of packages covered in the
previous chapter are special cases of domains.
While this is in fact the case, it is useful here to regard domains
as distinct from packages.
</p>


<p>Think of a domain as a datatype, a collection of objects (the
objects of the domain).
From your <span class="italic">sneak preview</span> in the previous chapter, you might
conclude that categories are simply named clusters of operations
exported by domains.
As it turns out, categories have a much deeper meaning.
Categories are fundamental to the design of FriCAS.
They control the interactions between domains and algorithmic
packages, and, in fact, between all the components of FriCAS.
</p>


<p>Categories form hierarchies as shown on the inside cover pages of
this book.
The inside front-cover pages illustrate the basic
algebraic hierarchy of the FriCAS programming language.
The inside back-cover pages show the hierarchy for data
structures.
</p>


<p>Think of the category structures of FriCAS as a foundation
for a city on which superstructures (domains) are built.
The algebraic hierarchy, for example, serves as a foundation for
constructive mathematical algorithms embedded in the domains of
FriCAS.
Once in place, domains can be constructed, either independently or
from one another.
</p>


<p>Superstructures are built for quality---domains are compiled into
machine code for run-time efficiency.
You can extend the foundation in directions beyond the space
directly beneath the superstructures, then extend selected
superstructures to cover the space.
Because of the compilation strategy, changing components of the
foundation generally means that the existing superstructures
(domains) built on the changed parts of the foundation
(categories) have to be rebuilt---that is, recompiled.
</p>


<p>Before delving into some of the interesting facts about categories, let's see
how you define them in FriCAS.
</p>

</div><a href="book-contents.xhtml" style="margin-right: 10px;">Book Contents</a><a href="section-11.10.xhtml" style="margin-right: 10px;">Previous Section 11.10  How Packages Work</a><a href="section-12.1.xhtml" style="margin-right: 10px;">Next Section 12.1 Definitions</a>
<a href="book-index.xhtml">Book Index</a></body>
</html>