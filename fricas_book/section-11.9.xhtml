<?xml version="1.0" encoding="UTF-8" ?>

<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.1 plus MathML 2.0//EN"
"http://www.w3.org/TR/MathML2/dtd/xhtml-math11-f.dtd" [
<!ENTITY mathml "http://www.w3.org/1998/Math/MathML">
]>

<html xmlns="http://www.w3.org/1999/xhtml"
      xmlns:xlink="http://www.w3.org/1999/xlink" >


  <head>
    <title>Section11.9</title>
    <link rel="stylesheet" type="text/css" href="graphicstyle.css" />
    <script type="text/javascript" src="bookax1.js" />
  </head>

  <body>
<a href="book-contents.xhtml" style="margin-right: 10px;">Book Contents</a><a href="section-11.8.xhtml" style="margin-right: 10px;">Previous Section 11.8 Conditionals</a><a href="section-11.10.xhtml" style="margin-right: 10px;">Next Section 11.10 How Packages Work</a>
<a href="book-index.xhtml">Book Index</a><div class="section"  id="sec-11.9">
<h2 class="sectiontitle">11.9  Testing</h2>


<a name="ugPackagesCompiling" class="label"/>



<p>Once you have written the package, embed it in a file, for example, <span style="font-weight: bold;">
sortpak.spad</span>.
<span class="index">testing</span><a name="chapter-11-22"/>
Be sure to include an <span style="font-weight: bold;"> )abbrev</span> command at the top of the file:
</p>



<div class="verbatim"><br />
)abbrev&nbsp;package&nbsp;SORTPAK&nbsp;SortPackage<br />
</div>


<p>Now compile the file (using <span class="teletype">)compile sortpak.spad</span>).
</p>


<p>Expose the constructor.
You are then ready to begin testing.
</p>




<div id="spadComm11-7" class="spadComm" >
<form id="formComm11-7" action="javascript:makeRequest('11-7');" >
<input id="comm11-7" type="text" class="command" style="width: 10em;" value=")expose SORTPAK" />
</form>
<span id="commSav11-7" class="commSav" >)expose SORTPAK</span>
<div id="mathAns11-7" ></div>
</div>



<p>Define a list.
</p>




<div id="spadComm11-8" class="spadComm" >
<form id="formComm11-8" action="javascript:makeRequest('11-8');" >
<input id="comm11-8" type="text" class="command" style="width: 16em;" value="l := [1,7,4,2,11,-7,3,2]" />
</form>
<span id="commSav11-8" class="commSav" >l := [1,7,4,2,11,-7,3,2]</span>
<div id="mathAns11-8" ></div>
</div>



<p>Since the integers are an ordered set,
a one-argument operation will do.
</p>




<div id="spadComm11-9" class="spadComm" >
<form id="formComm11-9" action="javascript:makeRequest('11-9');" >
<input id="comm11-9" type="text" class="command" style="width: 10em;" value="bubbleSort!(l)" />
</form>
<span id="commSav11-9" class="commSav" >bubbleSort!(l)</span>
<div id="mathAns11-9" ></div>
</div>



<p>Re-sort it using <span class="italic">greater than.</span>
</p>




<div id="spadComm11-10" class="spadComm" >
<form id="formComm11-10" action="javascript:makeRequest('11-10');" >
<input id="comm11-10" type="text" class="command" style="width: 20em;" value="bubbleSort!(l,(x,y) +-> x > y)" />
</form>
<span id="commSav11-10" class="commSav" >bubbleSort!(l,(x,y) +-> x > y)</span>
<div id="mathAns11-10" ></div>
</div>



<p>Now sort it again using <span class="teletype">&lt;</span> on integers.
</p>




<div id="spadComm11-11" class="spadComm" >
<form id="formComm11-11" action="javascript:makeRequest('11-11');" >
<input id="comm11-11" type="text" class="command" style="width: 18em;" value="bubbleSort!(l, &lt; $Integer)" />
</form>
<span id="commSav11-11" class="commSav" >bubbleSort!(l, &lt; $Integer)</span>
<div id="mathAns11-11" ></div>
</div>



<p>A string is an aggregate of characters so we can sort them as well.
</p>




<div id="spadComm11-12" class="spadComm" >
<form id="formComm11-12" action="javascript:makeRequest('11-12');" >
<input id="comm11-12" type="text" class="command" style="width: 24em;" value='bubbleSort! "Mathematical Sciences"' />
</form>
<span id="commSav11-12" class="commSav" >bubbleSort! "Mathematical Sciences"</span>
<div id="mathAns11-12" ></div>
</div>



<p>Is <span class="teletype">&lt;</span> defined on booleans?
</p>




<div id="spadComm11-13" class="spadComm" >
<form id="formComm11-13" action="javascript:makeRequest('11-13');" >
<input id="comm11-13" type="text" class="command" style="width: 8em;" value="false &lt; true" />
</form>
<span id="commSav11-13" class="commSav" >false &lt; true</span>
<div id="mathAns11-13" ></div>
</div>



<p>Good! Create a bit string representing ten consecutive
boolean values <span class="teletype">true</span>.
</p>




<div id="spadComm11-14" class="spadComm" >
<form id="formComm11-14" action="javascript:makeRequest('11-14');" >
<input id="comm11-14" type="text" class="command" style="width: 16em;" value="u : Bits := new(10,true)" />
</form>
<span id="commSav11-14" class="commSav" >u : Bits := new(10,true)</span>
<div id="mathAns11-14" ></div>
</div>



<p>Set bits 3 through 5 to <span class="teletype">false</span>, then display the result.
</p>




<div id="spadComm11-15" class="spadComm" >
<form id="formComm11-15" action="javascript:makeRequest('11-15');" >
<input id="comm11-15" type="text" class="command" style="width: 13em;" value="u(3..5) := false; u" />
</form>
<span id="commSav11-15" class="commSav" >u(3..5) := false; u</span>
<div id="mathAns11-15" ></div>
</div>



<p>Now sort these booleans.
</p>




<div id="spadComm11-16" class="spadComm" >
<form id="formComm11-16" action="javascript:makeRequest('11-16');" >
<input id="comm11-16" type="text" class="command" style="width: 9em;" value="bubbleSort! u" />
</form>
<span id="commSav11-16" class="commSav" >bubbleSort! u</span>
<div id="mathAns11-16" ></div>
</div>



<p>Create an <span class="italic">eq-table</span>, a
table having integers as keys
and strings as values.
</p>




<div id="spadComm11-17" class="spadComm" >
<form id="formComm11-17" action="javascript:makeRequest('11-17');" >
<input id="comm11-17" type="text" class="command" style="width: 26em;" value="t : EqTable(Integer,String) := table()" />
</form>
<span id="commSav11-17" class="commSav" >t : EqTable(Integer,String) := table()</span>
<div id="mathAns11-17" ></div>
</div>



<p>Give the table a first entry.
</p>




<div id="spadComm11-18" class="spadComm" >
<form id="formComm11-18" action="javascript:makeRequest('11-18');" >
<input id="comm11-18" type="text" class="command" style="width: 10em;" value='t.1 := "robert"' />
</form>
<span id="commSav11-18" class="commSav" >t.1 := "robert"</span>
<div id="mathAns11-18" ></div>
</div>



<p>And a second.
</p>




<div id="spadComm11-19" class="spadComm" >
<form id="formComm11-19" action="javascript:makeRequest('11-19');" >
<input id="comm11-19" type="text" class="command" style="width: 11em;" value='t.2 := "richard"' />
</form>
<span id="commSav11-19" class="commSav" >t.2 := "richard"</span>
<div id="mathAns11-19" ></div>
</div>



<p>What does the table look like?
</p>




<div id="spadComm11-20" class="spadComm" >
<form id="formComm11-20" action="javascript:makeRequest('11-20');" >
<input id="comm11-20" type="text" class="command" style="width: 1em;" value="t" />
</form>
<span id="commSav11-20" class="commSav" >t</span>
<div id="mathAns11-20" ></div>
</div>



<p>Now sort it.
</p>




<div id="spadComm11-21" class="spadComm" >
<form id="formComm11-21" action="javascript:makeRequest('11-21');" >
<input id="comm11-21" type="text" class="command" style="width: 9em;" value="bubbleSort! t" />
</form>
<span id="commSav11-21" class="commSav" >bubbleSort! t</span>
<div id="mathAns11-21" ></div>
</div>





</div><a href="book-contents.xhtml" style="margin-right: 10px;">Book Contents</a>
<a href="section-11.8.xhtml" style="margin-right: 10px;">Previous Section 11.8 Conditionals</a><a href="section-11.10.xhtml" style="margin-right: 10px;">Next Section 11.10 How Packages Work</a>
<a href="book-index.xhtml">Book Index</a></body>
</html>