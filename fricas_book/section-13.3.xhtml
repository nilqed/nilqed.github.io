<?xml version="1.0" encoding="UTF-8" ?>

<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.1 plus MathML 2.0//EN"
"http://www.w3.org/TR/MathML2/dtd/xhtml-math11-f.dtd" [
<!ENTITY mathml "http://www.w3.org/1998/Math/MathML">
]>

<html xmlns="http://www.w3.org/1999/xhtml"
      xmlns:xlink="http://www.w3.org/1999/xlink" >


  <head>
    <title>Section13.3</title>
    <link rel="stylesheet" type="text/css" href="graphicstyle.css" />
    <script type="text/javascript" src="bookax1.js" />
  </head>

  <body>
<a href="book-contents.xhtml" style="margin-right: 10px;">Book Contents</a><a href="section-13.2.xhtml" style="margin-right: 10px;">Previous Section 13.2 Definitions</a><a href="section-13.4.xhtml" style="margin-right: 10px;">Next Section 13.4 A Demo</a>
<a href="book-index.xhtml">Book Index</a><div class="section"  id="sec-13.3">
<h2 class="sectiontitle">13.3  Category Assertions</h2>


<a name="ugDomainsAssertions" class="label"/>



<p>The <span class="italic"> Category Assertions</span> part of your domain constructor
definition lists those categories of which all domains created by the
constructor are unconditionally members.  The word <span class="italic">unconditionally</span>
means that membership in a category does not depend on the values of
the parameters to the domain constructor.  This part thus defines the
link between the domains and the category hierarchies given on the
inside covers of this book.  As described in
<a href="section-12.8.xhtml#ugCategoriesCorrectness" class="ref" >ugCategoriesCorrectness</a> it is this link that makes it
possible for you to pass objects of the domains as arguments to other
operations in FriCAS.
</p>


<p>Every <span class="teletype"> QuadraticForm</span> domain is declared
to be unconditionally a member of category <span class="teletype"> AbelianGroup</span>.
An abelian group is a collection of elements closed under
addition.
Every object <span class="italic"> x</span> of an abelian group has an additive inverse
<span class="italic"> y</span> such that <math xmlns="&mathml;" mathsize="big"><mstyle><mrow><mi>x</mi><mo>+</mo><mi>y</mi><mo>=</mo><mn>0</mn></mrow></mstyle></math>.
The exports of an abelian group include <math xmlns="&mathml;" mathsize="big"><mstyle><mn>0</mn></mstyle></math>,
<span class="teletype"> +</span>, <span class="teletype"> -</span>, and scalar multiplication by an integer.
After asserting that <span class="teletype"> QuadraticForm</span> domains are abelian
groups, it is possible to pass quadratic forms to algorithms that
only assume arguments to have these abelian group
properties.
</p>


<p>In <a href="section-12.11.xhtml#ugCategoriesConditionals" class="ref" >ugCategoriesConditionals</a> you saw that <span class="teletype">
Fraction(R)</span>, a member of <span class="teletype"> QuotientFieldCategory(R)</span>, is a member
of <span class="teletype"> OrderedSet</span> if <math xmlns="&mathml;" mathsize="big"><mstyle><mi>R</mi></mstyle></math> is a member of <span class="teletype"> OrderedSet</span>.  Likewise,
from the <span class="teletype"> Exports</span> part of the definition of <span class="teletype"> ModMonic(R, S)</span>,
</p>




<div class="verbatim"><br />
UnivariatePolynomialCategory(R)&nbsp;with<br />
&nbsp;&nbsp;if&nbsp;R&nbsp;has&nbsp;Finite&nbsp;then&nbsp;Finite<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;...<br />
</div>


<p>you see that <span class="teletype"> ModMonic(R, S)</span> is a member of
<span class="teletype"> Finite</span> if <math xmlns="&mathml;" mathsize="big"><mstyle><mi>R</mi></mstyle></math> is.
</p>


<p>The <span class="teletype"> Exports</span> part of a domain definition is
the same kind of
expression that can appear to the right of an
<span class="teletype"> ==</span> in a category definition.
If a domain constructor is unconditionally a member of two or more
categories, a <math xmlns="&mathml;" mathsize="big"><mstyle><mi>Join</mi></mstyle></math> form is used.
<span class="index">Join</span><a name="chapter-13-1"/>
The <span class="teletype"> Exports</span> part of the definition of
<span class="teletype"> FlexibleArray(S)</span> reads, for example:
</p>



<div class="verbatim"><br />
Join(ExtensibleLinearAggregate(S),&nbsp;OneDimensionalArrayAggregate(S))&nbsp;with...<br />
</div>





</div><a href="book-contents.xhtml" style="margin-right: 10px;">Book Contents</a>
<a href="section-13.2.xhtml" style="margin-right: 10px;">Previous Section 13.2 Definitions</a><a href="section-13.4.xhtml" style="margin-right: 10px;">Next Section 13.4 A Demo</a>
<a href="book-index.xhtml">Book Index</a></body>
</html>