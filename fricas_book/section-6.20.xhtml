<?xml version="1.0" encoding="UTF-8" ?>

<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.1 plus MathML 2.0//EN"
"http://www.w3.org/TR/MathML2/dtd/xhtml-math11-f.dtd" [
<!ENTITY mathml "http://www.w3.org/1998/Math/MathML">
]>

<html xmlns="http://www.w3.org/1999/xhtml"
      xmlns:xlink="http://www.w3.org/1999/xlink" >


  <head>
    <title>Section6.20</title>
    <link rel="stylesheet" type="text/css" href="graphicstyle.css" />
    <script type="text/javascript" src="bookax1.js" />
  </head>

  <body>
<a href="book-contents.xhtml" style="margin-right: 10px;">Book Contents</a><a href="section-6.19.xhtml" style="margin-right: 10px;">Previous Section 6.19 Example: A Famous Triangle</a><a href="section-6.21.xhtml" style="margin-right: 10px;">Next Section 6.21 Rules and Pattern Matching</a>
<a href="book-index.xhtml">Book Index</a><div class="section"  id="sec-6.20">
<h2 class="sectiontitle">6.20  Example: Testing for Palindromes</h2>


<a name="ugUserPal" class="label"/>


<p>In this section we define a function <span style="font-weight: bold;"> pal?</span> that tests whether its
<span class="index">palindrome</span><a name="chapter-6-68"/> argument is a <span class="italic">palindrome</span>, that is, something
that reads the same backwards and forwards.  For example, the string
``Madam I'm Adam'' is a palindrome (excluding blanks and punctuation)
and so is the number <math xmlns="&mathml;" mathsize="big"><mstyle><mn>123454321</mn></mstyle></math>.  The definition works for any
datatype that has <math xmlns="&mathml;" mathsize="big"><mstyle><mi>n</mi></mstyle></math> components that are accessed by the indices
<math xmlns="&mathml;" mathsize="big"><mstyle><mrow><mn>1</mn><mo>&#x2026;</mo><mi>n</mi></mrow></mstyle></math>.
</p>


<p>Here is the definition for <span style="font-weight: bold;"> pal?</span>.  It is simply a call to an
auxiliary function called <span style="font-weight: bold;"> palAux?</span>.  We are following the
convention of ending a function's name with <span class="teletype">?</span> if the function
returns a <span class="teletype">Boolean</span> value.
</p>



<div id="spadComm6-192" class="spadComm" >
<form id="formComm6-192" action="javascript:makeRequest('6-192');" >
<input id="comm6-192" type="text" class="command" style="width: 18em;" value="pal? s ==  palAux?(s,1,#s)" />
</form>
<span id="commSav6-192" class="commSav" >pal? s ==  palAux?(s,1,#s)</span>
<div id="mathAns6-192" ></div>
</div>




<div class="returnType">
Type: Void
</div>



<p>Here is <span style="font-weight: bold;"> palAux?</span>.  It works by comparing elements that are
equidistant from the start and end of the object.
</p>



<div class="verbatim"><br />
palAux?(s,i,j)&nbsp;==<br />
&nbsp;&nbsp;j&nbsp;&gt;&nbsp;i&nbsp;=&gt;<br />
&nbsp;&nbsp;&nbsp;&nbsp;(s.i&nbsp;=&nbsp;s.j)&nbsp;and&nbsp;palAux?(s,i+1,i-1)<br />
&nbsp;&nbsp;true<br />
</div>




<div class="returnType">
Type: Void
</div>



<p>Try <span style="font-weight: bold;"> pal?</span> on some examples.  First, a string.
</p>



<div id="spadComm6-193" class="spadComm" >
<form id="formComm6-193" action="javascript:makeRequest('6-193');" >
<input id="comm6-193" type="text" class="command" style="width: 9em;" value='pal? "Oxford"' />
</form>
<span id="commSav6-193" class="commSav" >pal? "Oxford"</span>
<div id="mathAns6-193" ></div>
</div>




<div class="verbatim"><br />
&nbsp;&nbsp;&nbsp;Compiling&nbsp;function&nbsp;palAux?&nbsp;with&nbsp;type&nbsp;(String,Integer,Integer)&nbsp;-&gt;&nbsp;<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Boolean&nbsp;<br />
&nbsp;&nbsp;&nbsp;Compiling&nbsp;function&nbsp;pal?&nbsp;with&nbsp;type&nbsp;String&nbsp;-&gt;&nbsp;Boolean&nbsp;<br />
</div>


<div class="math">
<table>
<tr><td>
<math xmlns="&mathml;" mathsize="big" display="block"><mstyle><mrow><mtext mathvariant='monospace'>false</mtext></mrow></mstyle></math>
</td></tr>
</table>
</div>




<div class="returnType">
Type: Boolean
</div>



<p>A list of polynomials.
</p>



<div id="spadComm6-194" class="spadComm" >
<form id="formComm6-194" action="javascript:makeRequest('6-194');" >
<input id="comm6-194" type="text" class="command" style="width: 16em;" value="pal? [4,a,x-1,0,x-1,a,4]" />
</form>
<span id="commSav6-194" class="commSav" >pal? [4,a,x-1,0,x-1,a,4]</span>
<div id="mathAns6-194" ></div>
</div>




<div class="verbatim"><br />
&nbsp;&nbsp;&nbsp;Compiling&nbsp;function&nbsp;palAux?&nbsp;with&nbsp;type&nbsp;(List&nbsp;Polynomial&nbsp;Integer,<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Integer,Integer)&nbsp;-&gt;&nbsp;Boolean&nbsp;<br />
&nbsp;&nbsp;&nbsp;Compiling&nbsp;function&nbsp;pal?&nbsp;with&nbsp;type&nbsp;List&nbsp;Polynomial&nbsp;Integer&nbsp;-&gt;&nbsp;Boolean<br />
</div>


<div class="math">
<table>
<tr><td>
<math xmlns="&mathml;" mathsize="big" display="block"><mstyle><mrow><mtext mathvariant='monospace'>true</mtext></mrow></mstyle></math>
</td></tr>
</table>
</div>




<div class="returnType">
Type: Boolean
</div>



<p>A list of integers from the example in the last section. 
</p>



<div id="spadComm6-195" class="spadComm" >
<form id="formComm6-195" action="javascript:makeRequest('6-195');" >
<input id="comm6-195" type="text" class="command" style="width: 16em;" value="pal? [1,6,15,20,15,6,1]" />
</form>
<span id="commSav6-195" class="commSav" >pal? [1,6,15,20,15,6,1]</span>
<div id="mathAns6-195" ></div>
</div>




<div class="verbatim"><br />
&nbsp;&nbsp;&nbsp;Compiling&nbsp;function&nbsp;palAux?&nbsp;with&nbsp;type&nbsp;(List&nbsp;PositiveInteger,Integer,<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Integer)&nbsp;-&gt;&nbsp;Boolean&nbsp;<br />
&nbsp;&nbsp;&nbsp;Compiling&nbsp;function&nbsp;pal?&nbsp;with&nbsp;type&nbsp;List&nbsp;PositiveInteger&nbsp;-&gt;&nbsp;Boolean&nbsp;<br />
</div>


<div class="math">
<table>
<tr><td>
<math xmlns="&mathml;" mathsize="big" display="block"><mstyle><mrow><mtext mathvariant='monospace'>true</mtext></mrow></mstyle></math>
</td></tr>
</table>
</div>




<div class="returnType">
Type: Boolean
</div>



<p>To use <span style="font-weight: bold;"> pal?</span> on an integer, first convert it to a string.
</p>



<div id="spadComm6-196" class="spadComm" >
<form id="formComm6-196" action="javascript:makeRequest('6-196');" >
<input id="comm6-196" type="text" class="command" style="width: 12em;" value="pal?(1441::String)" />
</form>
<span id="commSav6-196" class="commSav" >pal?(1441::String)</span>
<div id="mathAns6-196" ></div>
</div>


<div class="math">
<table>
<tr><td>
<math xmlns="&mathml;" mathsize="big" display="block"><mstyle><mrow><mtext mathvariant='monospace'>true</mtext></mrow></mstyle></math>
</td></tr>
</table>
</div>




<div class="returnType">
Type: Boolean
</div>



<p>Compute an infinite stream of decimal numbers, each of which is an
obvious palindrome.
</p>



<div id="spadComm6-197" class="spadComm" >
<form id="formComm6-197" action="javascript:makeRequest('6-197');" >
<input id="comm6-197" type="text" class="command" style="width: 36em;" value="ones := [reduce(+,[10^j for j in 0..i]) for i in 1..]" />
</form>
<span id="commSav6-197" class="commSav" >ones := [reduce(+,[10^j for j in 0..i]) for i in 1..]</span>
<div id="mathAns6-197" ></div>
</div>


<div class="math">
<table>
<tr><td>
<math xmlns="&mathml;" mathsize="big" display="block"><mstyle><mrow><mtable><mtr><mtd><mo>[</mo><mn>11</mn><mo>,</mo><mn>111</mn><mo>,</mo><mn>1111</mn><mo>,</mo><mn>11111</mn><mo>,</mo><mn>111111</mn><mo>,</mo><mn>1111111</mn><mo>,</mo><mo>.</mo></mtd></mtr><mtr><mtd></mtd></mtr><mtr><mtd><mo>.</mo><mn>11111111</mn><mo>,</mo><mn>111111111</mn><mo>,</mo><mn>1111111111</mn><mo>,</mo><mn>11111111111</mn><mo>,</mo><mo>&#x2026;</mo><mo>]</mo></mtd></mtr></mtable></mrow></mstyle></math>
</td></tr>
</table>
</div>




<div class="returnType">
Type: Stream PositiveInteger
</div>





<div id="spadComm6-198" class="spadComm" >
<form id="formComm6-198" action="javascript:makeRequest('6-198');" >
<input id="comm6-198" type="text" class="command" style="width: 16em;" value=")set streams calculate 9" />
</form>
<span id="commSav6-198" class="commSav" >)set streams calculate 9</span>
<div id="mathAns6-198" ></div>
</div>



<p>How about their squares?
</p>



<div id="spadComm6-199" class="spadComm" >
<form id="formComm6-199" action="javascript:makeRequest('6-199');" >
<input id="comm6-199" type="text" class="command" style="width: 21em;" value="squares := [x^2 for x in ones]" />
</form>
<span id="commSav6-199" class="commSav" >squares := [x^2 for x in ones]</span>
<div id="mathAns6-199" ></div>
</div>


<div class="math">
<table>
<tr><td>
<math xmlns="&mathml;" mathsize="big" display="block"><mstyle><mrow><mtable><mtr><mtd><mo>[</mo><mn>121</mn><mo>,</mo><mn>12321</mn><mo>,</mo><mn>1234321</mn><mo>,</mo><mn>123454321</mn><mo>,</mo><mn>12345654321</mn><mo>,</mo><mn>1234567654321</mn><mo>,</mo><mo>.</mo></mtd></mtr><mtr><mtd></mtd></mtr><mtr><mtd><mn>123456787654321</mn><mo>,</mo><mn>12345678987654321</mn><mo>,</mo><mn>1234567900987654321</mn><mo>,</mo></mtd></mtr><mtr><mtd></mtd></mtr><mtr><mtd><mo>.</mo><mn>123456790120987654321</mn><mo>,</mo><mo>&#x2026;</mo><mo>]</mo></mtd></mtr></mtable></mrow></mstyle></math>
</td></tr>
</table>
</div>




<div class="returnType">
Type: Stream PositiveInteger
</div>



<p>Well, let's test them all.
</p>



<div id="spadComm6-200" class="spadComm" >
<form id="formComm6-200" action="javascript:makeRequest('6-200');" >
<input id="comm6-200" type="text" class="command" style="width: 23em;" value="[pal?(x::String) for x in squares]" />
</form>
<span id="commSav6-200" class="commSav" >[pal?(x::String) for x in squares]</span>
<div id="mathAns6-200" ></div>
</div>


<div class="math">
<table>
<tr><td>
<math xmlns="&mathml;" mathsize="big" display="block"><mstyle><mrow><mo>[</mo><mrow><mtext mathvariant='monospace'>true</mtext></mrow><mo>,</mo><mrow><mtext mathvariant='monospace'>true</mtext></mrow><mo>,</mo><mrow><mtext mathvariant='monospace'>true</mtext></mrow><mo>,</mo><mrow><mtext mathvariant='monospace'>true</mtext></mrow><mo>,</mo><mrow><mtext mathvariant='monospace'>true</mtext></mrow><mo>,</mo><mrow><mtext mathvariant='monospace'>true</mtext></mrow><mo>,</mo><mrow><mtext mathvariant='monospace'>true</mtext></mrow><mo>,</mo><mrow><mtext mathvariant='monospace'>true</mtext></mrow><mo>,</mo><mrow><mtext mathvariant='monospace'>true</mtext></mrow><mo>,</mo><mrow><mtext mathvariant='monospace'>true</mtext></mrow><mo>,</mo><mo>&#x2026;</mo><mo>]</mo></mrow></mstyle></math>
</td></tr>
</table>
</div>




<div class="returnType">
Type: Stream Boolean
</div>





<div id="spadComm6-201" class="spadComm" >
<form id="formComm6-201" action="javascript:makeRequest('6-201');" >
<input id="comm6-201" type="text" class="command" style="width: 16em;" value=")set streams calculate 7" />
</form>
<span id="commSav6-201" class="commSav" >)set streams calculate 7</span>
<div id="mathAns6-201" ></div>
</div>





</div><a href="book-contents.xhtml" style="margin-right: 10px;">Book Contents</a>
<a href="section-6.19.xhtml" style="margin-right: 10px;">Previous Section 6.19 Example: A Famous Triangle</a><a href="section-6.21.xhtml" style="margin-right: 10px;">Next Section 6.21 Rules and Pattern Matching</a>
<a href="book-index.xhtml">Book Index</a></body>
</html>