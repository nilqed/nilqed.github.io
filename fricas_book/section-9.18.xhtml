<?xml version="1.0" encoding="UTF-8" ?>

<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.1 plus MathML 2.0//EN"
"http://www.w3.org/TR/MathML2/dtd/xhtml-math11-f.dtd" [
<!ENTITY mathml "http://www.w3.org/1998/Math/MathML">
]>

<html xmlns="http://www.w3.org/1999/xhtml"
      xmlns:xlink="http://www.w3.org/1999/xlink" >


  <head>
    <title>Section9.18</title>
    <link rel="stylesheet" type="text/css" href="graphicstyle.css" />
    <script type="text/javascript" src="bookax1.js" />
  </head>

  <body>
<a href="book-contents.xhtml" style="margin-right: 10px;">Book Contents</a><a href="section-9.17.xhtml" style="margin-right: 10px;">Previous Section 9.17 DoubleFloat</a><a href="section-9.19.xhtml" style="margin-right: 10px;">Next Section 9.19 Equation</a>
<a href="book-index.xhtml">Book Index</a><div class="section"  id="sec-9.18">
<h2 class="sectiontitle">9.18  EqTable</h2>

<p> 
<a name="EqTableXmpPage" class="label"/>
</p>



<p>The <span class="teletype">EqTable</span> domain provides tables where the keys are compared
using <span class="spadfunFrom" >eq?</span><span class="index">eq?</span><a name="chapter-9-6"/><span class="index">EqTable</span><a name="chapter-9-7"/>.  Keys are considered equal only if
they are the same instance of a structure.  This is useful if the keys
are themselves updatable structures.  Otherwise, all operations are
the same as for type <span class="teletype">Table</span>.  See 
<a href="section-9.18.xhtml#EqTableXmpPage" class="ref" >TableXmpPage</a>  for general
information about tables.
</p>


<p>The operation <span class="spadfunFrom" >table</span><span class="index">table</span><a name="chapter-9-8"/><span class="index">EqTable</span><a name="chapter-9-9"/> is here used to create a table
where the keys are lists of integers.
</p>




<div id="spadComm9-107" class="spadComm" >
<form id="formComm9-107" action="javascript:makeRequest('9-107');" >
<input id="comm9-107" type="text" class="command" style="width: 30em;" value="e: EqTable(List Integer, Integer) := table() " />
</form>
<span id="commSav9-107" class="commSav" >e: EqTable(List Integer, Integer) := table() </span>
<div id="mathAns9-107" ></div>
</div>


<div class="math">
<table>
<tr><td>
<math xmlns="&mathml;" mathsize="big" display="block"><mstyle><mrow><mi>table</mi><mo>(</mo><mo>)</mo></mrow></mstyle></math>
</td></tr>
</table>
</div>




<div class="returnType">
Type: EqTable(List Integer,Integer)
</div>



<p>These two lists are equal according to <span class="spadopFrom" title="List">=</span>, but not
according to <span class="spadfunFrom" >eq?</span><span class="index">eq?</span><a name="chapter-9-10"/><span class="index">List</span><a name="chapter-9-11"/>.
</p>




<div id="spadComm9-108" class="spadComm" >
<form id="formComm9-108" action="javascript:makeRequest('9-108');" >
<input id="comm9-108" type="text" class="command" style="width: 10em;" value="l1 := [1,2,3] " />
</form>
<span id="commSav9-108" class="commSav" >l1 := [1,2,3] </span>
<div id="mathAns9-108" ></div>
</div>


<div class="math">
<table>
<tr><td>
<math xmlns="&mathml;" mathsize="big" display="block"><mstyle><mrow><mo>[</mo><mn>1</mn><mo>,</mo><mn>2</mn><mo>,</mo><mn>3</mn><mo>]</mo></mrow></mstyle></math>
</td></tr>
</table>
</div>




<div class="returnType">
Type: List PositiveInteger
</div>





<div id="spadComm9-109" class="spadComm" >
<form id="formComm9-109" action="javascript:makeRequest('9-109');" >
<input id="comm9-109" type="text" class="command" style="width: 10em;" value="l2 := [1,2,3] " />
</form>
<span id="commSav9-109" class="commSav" >l2 := [1,2,3] </span>
<div id="mathAns9-109" ></div>
</div>


<div class="math">
<table>
<tr><td>
<math xmlns="&mathml;" mathsize="big" display="block"><mstyle><mrow><mo>[</mo><mn>1</mn><mo>,</mo><mn>2</mn><mo>,</mo><mn>3</mn><mo>]</mo></mrow></mstyle></math>
</td></tr>
</table>
</div>




<div class="returnType">
Type: List PositiveInteger
</div>



<p>Because the two lists are not <span class="spadfunFrom" >eq?</span><span class="index">eq?</span><a name="chapter-9-12"/><span class="index">List</span><a name="chapter-9-13"/>, separate values
can be stored under each.
</p>




<div id="spadComm9-110" class="spadComm" >
<form id="formComm9-110" action="javascript:makeRequest('9-110');" >
<input id="comm9-110" type="text" class="command" style="width: 10em;" value="e.l1 := 111    " />
</form>
<span id="commSav9-110" class="commSav" >e.l1 := 111    </span>
<div id="mathAns9-110" ></div>
</div>


<div class="math">
<table>
<tr><td>
<math xmlns="&mathml;" mathsize="big" display="block"><mstyle><mn>111</mn></mstyle></math>
</td></tr>
</table>
</div>




<div class="returnType">
Type: PositiveInteger
</div>





<div id="spadComm9-111" class="spadComm" >
<form id="formComm9-111" action="javascript:makeRequest('9-111');" >
<input id="comm9-111" type="text" class="command" style="width: 10em;" value="e.l2 := 222    " />
</form>
<span id="commSav9-111" class="commSav" >e.l2 := 222    </span>
<div id="mathAns9-111" ></div>
</div>


<div class="math">
<table>
<tr><td>
<math xmlns="&mathml;" mathsize="big" display="block"><mstyle><mn>222</mn></mstyle></math>
</td></tr>
</table>
</div>




<div class="returnType">
Type: PositiveInteger
</div>





<div id="spadComm9-112" class="spadComm" >
<form id="formComm9-112" action="javascript:makeRequest('9-112');" >
<input id="comm9-112" type="text" class="command" style="width: 3em;" value="e.l1" />
</form>
<span id="commSav9-112" class="commSav" >e.l1</span>
<div id="mathAns9-112" ></div>
</div>


<div class="math">
<table>
<tr><td>
<math xmlns="&mathml;" mathsize="big" display="block"><mstyle><mn>111</mn></mstyle></math>
</td></tr>
</table>
</div>




<div class="returnType">
Type: PositiveInteger
</div>





</div><a href="book-contents.xhtml" style="margin-right: 10px;">Book Contents</a>
<a href="section-9.17.xhtml" style="margin-right: 10px;">Previous Section 9.17 DoubleFloat</a><a href="section-9.19.xhtml" style="margin-right: 10px;">Next Section 9.19 Equation</a>
<a href="book-index.xhtml">Book Index</a></body>
</html>