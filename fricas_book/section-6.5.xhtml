<?xml version="1.0" encoding="UTF-8" ?>

<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.1 plus MathML 2.0//EN"
"http://www.w3.org/TR/MathML2/dtd/xhtml-math11-f.dtd" [
<!ENTITY mathml "http://www.w3.org/1998/Math/MathML">
]>

<html xmlns="http://www.w3.org/1999/xhtml"
      xmlns:xlink="http://www.w3.org/1999/xlink" >


  <head>
    <title>Section6.5</title>
    <link rel="stylesheet" type="text/css" href="graphicstyle.css" />
    <script type="text/javascript" src="bookax1.js" />
  </head>

  <body>
<a href="book-contents.xhtml" style="margin-right: 10px;">Book Contents</a><a href="section-6.4.xhtml" style="margin-right: 10px;">Previous Section 6.4 Declaring the Type of Functions</a><a href="section-6.6.xhtml" style="margin-right: 10px;">Next Section 6.6 Declared vs. Undeclared Functions</a>
<a href="book-index.xhtml">Book Index</a><div class="section"  id="sec-6.5">
<h2 class="sectiontitle">6.5  One-Line Functions</h2>


<a name="ugUserOne" class="label"/>


<p>As you use FriCAS, you will find that you will write many short
functions <span class="index">function:one-line definition</span><a name="chapter-6-11"/> to codify sequences of
operations that you often perform.  In this section we write some
simple one-line functions.
</p>


<p>This is a simple recursive factorial function for positive integers.
</p>



<div id="spadComm6-26" class="spadComm" >
<form id="formComm6-26" action="javascript:makeRequest('6-26');" >
<input id="comm6-26" type="text" class="command" style="width: 28em;" value="fac n == if n &lt; 3 then n else n * fac(n-1)" />
</form>
<span id="commSav6-26" class="commSav" >fac n == if n &lt; 3 then n else n * fac(n-1)</span>
<div id="mathAns6-26" ></div>
</div>




<div class="returnType">
Type: Void
</div>





<div id="spadComm6-27" class="spadComm" >
<form id="formComm6-27" action="javascript:makeRequest('6-27');" >
<input id="comm6-27" type="text" class="command" style="width: 4em;" value="fac 10" />
</form>
<span id="commSav6-27" class="commSav" >fac 10</span>
<div id="mathAns6-27" ></div>
</div>


<div class="math">
<table>
<tr><td>
<math xmlns="&mathml;" mathsize="big" display="block"><mstyle><mn>3628800</mn></mstyle></math>
</td></tr>
</table>
</div>




<div class="returnType">
Type: PositiveInteger
</div>



<p>This function computes <math xmlns="&mathml;" mathsize="big"><mstyle><mrow><mn>1</mn><mo>+</mo><mn>1</mn><mo>/</mo><mn>2</mn><mo>+</mo><mn>1</mn><mo>/</mo><mn>3</mn><mo>+</mo><mo>.</mo><mo>.</mo><mo>.</mo><mo>+</mo><mn>1</mn><mo>/</mo><mi>n</mi></mrow></mstyle></math>.
</p>



<div id="spadComm6-28" class="spadComm" >
<form id="formComm6-28" action="javascript:makeRequest('6-28');" >
<input id="comm6-28" type="text" class="command" style="width: 24em;" value="s n == reduce(+,[1/i for i in 1..n])" />
</form>
<span id="commSav6-28" class="commSav" >s n == reduce(+,[1/i for i in 1..n])</span>
<div id="mathAns6-28" ></div>
</div>




<div class="returnType">
Type: Void
</div>





<div id="spadComm6-29" class="spadComm" >
<form id="formComm6-29" action="javascript:makeRequest('6-29');" >
<input id="comm6-29" type="text" class="command" style="width: 3em;" value="s 50" />
</form>
<span id="commSav6-29" class="commSav" >s 50</span>
<div id="mathAns6-29" ></div>
</div>


<div class="math">
<table>
<tr><td>
<math xmlns="&mathml;" mathsize="big" display="block"><mstyle><mfrac><mn>13943237577224054960759</mn><mn>3099044504245996706400</mn></mfrac></mstyle></math>
</td></tr>
</table>
</div>




<div class="returnType">
Type: Fraction Integer
</div>



<p>This function computes a Mersenne number, several of which are prime.
<span class="index">Mersenne number</span><a name="chapter-6-12"/>
</p>



<div id="spadComm6-30" class="spadComm" >
<form id="formComm6-30" action="javascript:makeRequest('6-30');" >
<input id="comm6-30" type="text" class="command" style="width: 15em;" value="mersenne i == 2^i - 1" />
</form>
<span id="commSav6-30" class="commSav" >mersenne i == 2^i - 1</span>
<div id="mathAns6-30" ></div>
</div>




<div class="returnType">
Type: Void
</div>



<p>If you type <span class="teletype">mersenne</span>, FriCAS shows you the function definition.
</p>



<div id="spadComm6-31" class="spadComm" >
<form id="formComm6-31" action="javascript:makeRequest('6-31');" >
<input id="comm6-31" type="text" class="command" style="width: 6em;" value="mersenne" />
</form>
<span id="commSav6-31" class="commSav" >mersenne</span>
<div id="mathAns6-31" ></div>
</div>


<div class="math">
<table>
<tr><td>
<math xmlns="&mathml;" mathsize="big" display="block">
<mi>mersenne</mi><mspace width='0.5em'/><mi>i</mi><mspace width='0.5em'/><mo>==</mo><mspace width='0.5em'/><mrow><mrow><msup><mrow><mn>2</mn></mrow><mrow><mi>i</mi></mrow></msup></mrow><mo>-</mo><mn>1</mn></mrow>
</math>
</td></tr>
</table>
</div>




<div class="returnType">
Type: FunctionCalled mersenne
</div>



<p>Generate a stream of Mersenne numbers.
</p>



<div id="spadComm6-32" class="spadComm" >
<form id="formComm6-32" action="javascript:makeRequest('6-32');" >
<input id="comm6-32" type="text" class="command" style="width: 17em;" value="[mersenne i for i in 1..]" />
</form>
<span id="commSav6-32" class="commSav" >[mersenne i for i in 1..]</span>
<div id="mathAns6-32" ></div>
</div>


<div class="math">
<table>
<tr><td>
<math xmlns="&mathml;" mathsize="big" display="block"><mstyle><mrow><mo>[</mo><mn>1</mn><mo>,</mo><mn>3</mn><mo>,</mo><mn>7</mn><mo>,</mo><mn>15</mn><mo>,</mo><mn>31</mn><mo>,</mo><mn>63</mn><mo>,</mo><mn>127</mn><mo>,</mo><mn>255</mn><mo>,</mo><mn>511</mn><mo>,</mo><mn>1023</mn><mo>,</mo><mo>&#x2026;</mo><mo>]</mo></mrow></mstyle></math>
</td></tr>
</table>
</div>




<div class="returnType">
Type: Stream Integer
</div>



<p>Create a stream of those values of <math xmlns="&mathml;" mathsize="big"><mstyle><mi>i</mi></mstyle></math> such that <span class="teletype">mersenne(i)</span> is prime.
</p>



<div id="spadComm6-33" class="spadComm" >
<form id="formComm6-33" action="javascript:makeRequest('6-33');" >
<input id="comm6-33" type="text" class="command" style="width: 37em;" value="mersenneIndex := [n for n in 1.. | prime?(mersenne(n))]" />
</form>
<span id="commSav6-33" class="commSav" >mersenneIndex := [n for n in 1.. | prime?(mersenne(n))]</span>
<div id="mathAns6-33" ></div>
</div>




<div class="verbatim"><br />
&nbsp;&nbsp;&nbsp;Compiling&nbsp;function&nbsp;mersenne&nbsp;with&nbsp;type&nbsp;PositiveInteger&nbsp;-&gt;&nbsp;Integer&nbsp;<br />
</div>


<div class="math">
<table>
<tr><td>
<math xmlns="&mathml;" mathsize="big" display="block"><mstyle><mrow><mo>[</mo><mn>2</mn><mo>,</mo><mn>3</mn><mo>,</mo><mn>5</mn><mo>,</mo><mn>7</mn><mo>,</mo><mn>13</mn><mo>,</mo><mn>17</mn><mo>,</mo><mn>19</mn><mo>,</mo><mn>31</mn><mo>,</mo><mn>61</mn><mo>,</mo><mn>89</mn><mo>,</mo><mo>&#x2026;</mo><mo>]</mo></mrow></mstyle></math>
</td></tr>
</table>
</div>




<div class="returnType">
Type: Stream PositiveInteger
</div>



<p>Finally, write a function that returns the <math xmlns="&mathml;" mathsize="big"><mstyle><mi>n</mi></mstyle></math>-th Mersenne prime.
</p>



<div id="spadComm6-34" class="spadComm" >
<form id="formComm6-34" action="javascript:makeRequest('6-34');" >
<input id="comm6-34" type="text" class="command" style="width: 30em;" value="mersennePrime n == mersenne mersenneIndex(n)" />
</form>
<span id="commSav6-34" class="commSav" >mersennePrime n == mersenne mersenneIndex(n)</span>
<div id="mathAns6-34" ></div>
</div>




<div class="returnType">
Type: Void
</div>





<div id="spadComm6-35" class="spadComm" >
<form id="formComm6-35" action="javascript:makeRequest('6-35');" >
<input id="comm6-35" type="text" class="command" style="width: 10em;" value="mersennePrime 5" />
</form>
<span id="commSav6-35" class="commSav" >mersennePrime 5</span>
<div id="mathAns6-35" ></div>
</div>


<div class="math">
<table>
<tr><td>
<math xmlns="&mathml;" mathsize="big" display="block"><mstyle><mn>8191</mn></mstyle></math>
</td></tr>
</table>
</div>




<div class="returnType">
Type: PositiveInteger
</div>





</div><a href="book-contents.xhtml" style="margin-right: 10px;">Book Contents</a>
<a href="section-6.4.xhtml" style="margin-right: 10px;">Previous Section 6.4 Declaring the Type of Functions</a><a href="section-6.6.xhtml" style="margin-right: 10px;">Next Section 6.6 Declared vs. Undeclared Functions</a>
<a href="book-index.xhtml">Book Index</a></body>
</html>