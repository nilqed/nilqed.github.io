<?xml version="1.0" encoding="UTF-8" ?>

<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.1 plus MathML 2.0//EN"
"http://www.w3.org/TR/MathML2/dtd/xhtml-math11-f.dtd" [
<!ENTITY mathml "http://www.w3.org/1998/Math/MathML">
]>

<html xmlns="http://www.w3.org/1999/xhtml"
      xmlns:xlink="http://www.w3.org/1999/xlink" >


  <head>
    <title>Section9.32</title>
    <link rel="stylesheet" type="text/css" href="graphicstyle.css" />
    <script type="text/javascript" src="bookax1.js" />
  </head>

  <body>
<a href="book-contents.xhtml" style="margin-right: 10px;">Book Contents</a><a href="section-9.31.xhtml" style="margin-right: 10px;">Previous Section 9.31 GroebnerFactorizationPackage</a><a href="section-9.33.xhtml" style="margin-right: 10px;">Next Section 9.33 HexadecimalExpansion</a>
<a href="book-index.xhtml">Book Index</a><div class="section"  id="sec-9.32">
<h2 class="sectiontitle">9.32  Heap</h2>


<a name="HeapXmpPage" class="label"/>


<p>The domain <span class="teletype">Heap(S)</span> implements a priority queue of objects of
type <span class="teletype">S</span> such that the operation <span class="teletype">extract!</span> removes and
returns the maximum element.  The implementation represents heaps as
flexible arrays (see 
<a href="section-9.26.xhtml#FlexibleArrayXmpPage" class="ref" >FlexibleArrayXmpPage</a> ).  
The representation and algorithms give complexity of  <math xmlns="&mathml;" mathsize="big"><mstyle><mrow><mi>O</mi><mo>(</mo><mo>log</mo><mo>(</mo><mi>n</mi><mo>)</mo><mo>)</mo></mrow></mstyle></math> 
for insertion and extractions, and  <math xmlns="&mathml;" mathsize="big"><mstyle><mrow><mi>O</mi><mo>(</mo><mi>n</mi><mo>)</mo></mrow></mstyle></math> for construction.
</p>


<p>Create a heap of six elements.
</p>




<div id="spadComm9-76" class="spadComm" >
<form id="formComm9-76" action="javascript:makeRequest('9-76');" >
<input id="comm9-76" type="text" class="command" style="width: 18em;" value="h := heap [-4,9,11,2,7,-7]" />
</form>
<span id="commSav9-76" class="commSav" >h := heap [-4,9,11,2,7,-7]</span>
<div id="mathAns9-76" ></div>
</div>


<div class="math">
<table>
<tr><td>
<math xmlns="&mathml;" mathsize="big" display="block"><mstyle><mrow><mo>[</mo><mn>11</mn><mo>,</mo><mn>7</mn><mo>,</mo><mn>9</mn><mo>,</mo><mo>-</mo><mn>4</mn><mo>,</mo><mn>2</mn><mo>,</mo><mo>-</mo><mn>7</mn><mo>]</mo></mrow></mstyle></math>
</td></tr>
</table>
</div>




<div class="returnType">
Type: Heap Integer
</div>



<p>Use <span class="teletype">insert!</span> to add an element.
</p>




<div id="spadComm9-77" class="spadComm" >
<form id="formComm9-77" action="javascript:makeRequest('9-77');" >
<input id="comm9-77" type="text" class="command" style="width: 8em;" value="insert!(3,h)" />
</form>
<span id="commSav9-77" class="commSav" >insert!(3,h)</span>
<div id="mathAns9-77" ></div>
</div>


<div class="math">
<table>
<tr><td>
<math xmlns="&mathml;" mathsize="big" display="block"><mstyle><mrow><mo>[</mo><mn>11</mn><mo>,</mo><mn>7</mn><mo>,</mo><mn>9</mn><mo>,</mo><mo>-</mo><mn>4</mn><mo>,</mo><mn>2</mn><mo>,</mo><mo>-</mo><mn>7</mn><mo>,</mo><mn>3</mn><mo>]</mo></mrow></mstyle></math>
</td></tr>
</table>
</div>




<div class="returnType">
Type: Heap Integer
</div>



<p>The operation <span class="teletype">extract!</span> removes and returns the maximum element.
</p>




<div id="spadComm9-78" class="spadComm" >
<form id="formComm9-78" action="javascript:makeRequest('9-78');" >
<input id="comm9-78" type="text" class="command" style="width: 7em;" value="extract! h" />
</form>
<span id="commSav9-78" class="commSav" >extract! h</span>
<div id="mathAns9-78" ></div>
</div>


<div class="math">
<table>
<tr><td>
<math xmlns="&mathml;" mathsize="big" display="block"><mstyle><mn>11</mn></mstyle></math>
</td></tr>
</table>
</div>




<div class="returnType">
Type: PositiveInteger
</div>



<p>The internal structure of <span class="teletype">h</span> has been appropriately adjusted.
</p>




<div id="spadComm9-79" class="spadComm" >
<form id="formComm9-79" action="javascript:makeRequest('9-79');" >
<input id="comm9-79" type="text" class="command" style="width: 1em;" value="h" />
</form>
<span id="commSav9-79" class="commSav" >h</span>
<div id="mathAns9-79" ></div>
</div>


<div class="math">
<table>
<tr><td>
<math xmlns="&mathml;" mathsize="big" display="block"><mstyle><mrow><mo>[</mo><mn>9</mn><mo>,</mo><mn>7</mn><mo>,</mo><mn>3</mn><mo>,</mo><mo>-</mo><mn>4</mn><mo>,</mo><mn>2</mn><mo>,</mo><mo>-</mo><mn>7</mn><mo>]</mo></mrow></mstyle></math>
</td></tr>
</table>
</div>




<div class="returnType">
Type: Heap Integer
</div>



<p>Now <span class="teletype">extract!</span> elements repeatedly until none are left, collecting
the elements in a list.
</p>




<div id="spadComm9-80" class="spadComm" >
<form id="formComm9-80" action="javascript:makeRequest('9-80');" >
<input id="comm9-80" type="text" class="command" style="width: 22em;" value="[extract!(h) while not empty?(h)]" />
</form>
<span id="commSav9-80" class="commSav" >[extract!(h) while not empty?(h)]</span>
<div id="mathAns9-80" ></div>
</div>


<div class="math">
<table>
<tr><td>
<math xmlns="&mathml;" mathsize="big" display="block"><mstyle><mrow><mo>[</mo><mn>9</mn><mo>,</mo><mn>7</mn><mo>,</mo><mn>3</mn><mo>,</mo><mn>2</mn><mo>,</mo><mo>-</mo><mn>4</mn><mo>,</mo><mo>-</mo><mn>7</mn><mo>]</mo></mrow></mstyle></math>
</td></tr>
</table>
</div>




<div class="returnType">
Type: List Integer
</div>



<p>Another way to produce the same result is by defining a <span class="teletype">heapsort</span>
function.
</p>




<div id="spadComm9-81" class="spadComm" >
<form id="formComm9-81" action="javascript:makeRequest('9-81');" >
<input id="comm9-81" type="text" class="command" style="width: 41em;" value="heapsort(x) == (empty? x => []; cons(extract!(x),heapsort x))" />
</form>
<span id="commSav9-81" class="commSav" >heapsort(x) == (empty? x => []; cons(extract!(x),heapsort x))</span>
<div id="mathAns9-81" ></div>
</div>




<div class="returnType">
Void
</div>



<p>Create another sample heap.
</p>




<div id="spadComm9-82" class="spadComm" >
<form id="formComm9-82" action="javascript:makeRequest('9-82');" >
<input id="comm9-82" type="text" class="command" style="width: 21em;" value="h1 := heap [17,-4,9,-11,2,7,-7]" />
</form>
<span id="commSav9-82" class="commSav" >h1 := heap [17,-4,9,-11,2,7,-7]</span>
<div id="mathAns9-82" ></div>
</div>


<div class="math">
<table>
<tr><td>
<math xmlns="&mathml;" mathsize="big" display="block"><mstyle><mrow><mo>[</mo><mn>17</mn><mo>,</mo><mn>2</mn><mo>,</mo><mn>9</mn><mo>,</mo><mo>-</mo><mn>11</mn><mo>,</mo><mo>-</mo><mn>4</mn><mo>,</mo><mn>7</mn><mo>,</mo><mo>-</mo><mn>7</mn><mo>]</mo></mrow></mstyle></math>
</td></tr>
</table>
</div>




<div class="returnType">
Type: Heap Integer
</div>



<p>Apply <span class="teletype">heapsort</span> to present elements in order.
</p>




<div id="spadComm9-83" class="spadComm" >
<form id="formComm9-83" action="javascript:makeRequest('9-83');" >
<input id="comm9-83" type="text" class="command" style="width: 8em;" value="heapsort h1" />
</form>
<span id="commSav9-83" class="commSav" >heapsort h1</span>
<div id="mathAns9-83" ></div>
</div>


<div class="math">
<table>
<tr><td>
<math xmlns="&mathml;" mathsize="big" display="block"><mstyle><mrow><mo>[</mo><mn>17</mn><mo>,</mo><mn>9</mn><mo>,</mo><mn>7</mn><mo>,</mo><mn>2</mn><mo>,</mo><mo>-</mo><mn>4</mn><mo>,</mo><mo>-</mo><mn>7</mn><mo>,</mo><mo>-</mo><mn>11</mn><mo>]</mo></mrow></mstyle></math>
</td></tr>
</table>
</div>




<div class="returnType">
Type: List Integer
</div>





</div><a href="book-contents.xhtml" style="margin-right: 10px;">Book Contents</a>
<a href="section-9.31.xhtml" style="margin-right: 10px;">Previous Section 9.31 GroebnerFactorizationPackage</a><a href="section-9.33.xhtml" style="margin-right: 10px;">Next Section 9.33 HexadecimalExpansion</a>
<a href="book-index.xhtml">Book Index</a></body>
</html>