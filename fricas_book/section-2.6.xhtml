<?xml version="1.0" encoding="UTF-8" ?>

<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.1 plus MathML 2.0//EN"
"http://www.w3.org/TR/MathML2/dtd/xhtml-math11-f.dtd" [
<!ENTITY mathml "http://www.w3.org/1998/Math/MathML">
]>

<html xmlns="http://www.w3.org/1999/xhtml"
      xmlns:xlink="http://www.w3.org/1999/xlink" >


  <head>
    <title>Section2.6</title>
    <link rel="stylesheet" type="text/css" href="graphicstyle.css" />
    <script type="text/javascript" src="bookax1.js" />
  </head>

  <body>
<a href="book-contents.xhtml" style="margin-right: 10px;">Book Contents</a><a href="section-2.5.xhtml" style="margin-right: 10px;">Previous Section 2.5 Unions</a><a href="section-2.7.xhtml" style="margin-right: 10px;">Next Section 2.7 Conversion</a>
<a href="book-index.xhtml">Book Index</a><div class="section"  id="sec-2.6">
<h2 class="sectiontitle">2.6  The <span class="italic">Any</span> Domain</h2>


<a name="ugTypesAnyNone" class="label"/>


<p>With the exception of objects of type <span class="teletype">Record</span>, all FriCAS data
structures are homogenous, that is, they hold objects all of the same
type.  <span class="index">Any</span><a name="chapter-2-46"/> If you need to get around this, you can use type
<span class="teletype">Any</span>.  Using <span class="teletype">Any</span>, for example, you can create lists whose
elements are integers, rational numbers, strings, and even other
lists.
</p>


<p>Declare <math xmlns="&mathml;" mathsize="big"><mstyle><mi>u</mi></mstyle></math> to have type <span class="teletype">Any</span>.
</p>



<div id="spadComm2-81" class="spadComm" >
<form id="formComm2-81" action="javascript:makeRequest('2-81');" >
<input id="comm2-81" type="text" class="command" style="width: 4em;" value="u: Any" />
</form>
<span id="commSav2-81" class="commSav" >u: Any</span>
<div id="mathAns2-81" ></div>
</div>




<div class="returnType">
Type: Void
</div>



<p>Assign a list of mixed type values to <math xmlns="&mathml;" mathsize="big"><mstyle><mi>u</mi></mstyle></math>
</p>



<div id="spadComm2-82" class="spadComm" >
<form id="formComm2-82" action="javascript:makeRequest('2-82');" >
<input id="comm2-82" type="text" class="command" style="width: 22em;" value='u := [1, 7.2, 3/2, x^2, "wally"]' />
</form>
<span id="commSav2-82" class="commSav" >u := [1, 7.2, 3/2, x^2, "wally"]</span>
<div id="mathAns2-82" ></div>
</div>


<div class="math">
<table>
<tr><td>
<math xmlns="&mathml;" mathsize="big" display="block"><mstyle><mrow><mo>[</mo><mn>1</mn><mo>,</mo><mrow><mn>7</mn><mo>.</mo><mn>2</mn></mrow><mo>,</mo><mfrac><mn>3</mn><mn>2</mn></mfrac><mo>,</mo><mrow><msup><mi>x</mi><mn>2</mn></msup></mrow><mo>,</mo><mtext><mrow><mtext mathvariant='monospace'>"wally"</mtext></mrow></mtext><mo>]</mo></mrow></mstyle></math>
</td></tr>
</table>
</div>




<div class="returnType">
Type: List Any
</div>



<p>When we ask for the elements, FriCAS displays these types.
</p>



<div id="spadComm2-83" class="spadComm" >
<form id="formComm2-83" action="javascript:makeRequest('2-83');" >
<input id="comm2-83" type="text" class="command" style="width: 2em;" value="u.1" />
</form>
<span id="commSav2-83" class="commSav" >u.1</span>
<div id="mathAns2-83" ></div>
</div>


<div class="math">
<table>
<tr><td>
<math xmlns="&mathml;" mathsize="big" display="block"><mstyle><mn>1</mn></mstyle></math>
</td></tr>
</table>
</div>




<div class="returnType">
Type: PositiveInteger
</div>



<p>Actually, these objects belong to <span class="teletype">Any</span> but FriCAS
automatically converts them to their natural types for you.
</p>



<div id="spadComm2-84" class="spadComm" >
<form id="formComm2-84" action="javascript:makeRequest('2-84');" >
<input id="comm2-84" type="text" class="command" style="width: 2em;" value="u.3" />
</form>
<span id="commSav2-84" class="commSav" >u.3</span>
<div id="mathAns2-84" ></div>
</div>


<div class="math">
<table>
<tr><td>
<math xmlns="&mathml;" mathsize="big" display="block"><mstyle><mfrac><mn>3</mn><mn>2</mn></mfrac></mstyle></math>
</td></tr>
</table>
</div>




<div class="returnType">
Type: Fraction Integer
</div>



<p>Since type <span class="teletype">Any</span> can be anything, it can only belong to type 
<span class="teletype">Type</span>.  Therefore it cannot be used in algebraic domains.
</p>



<div id="spadComm2-85" class="spadComm" >
<form id="formComm2-85" action="javascript:makeRequest('2-85');" >
<input id="comm2-85" type="text" class="command" style="width: 10em;" value="v : Matrix(Any)" />
</form>
<span id="commSav2-85" class="commSav" >v : Matrix(Any)</span>
<div id="mathAns2-85" ></div>
</div>




<div class="verbatim"><br />
&nbsp;&nbsp;&nbsp;Matrix&nbsp;Any&nbsp;is&nbsp;not&nbsp;a&nbsp;valid&nbsp;type.<br />
</div>



<p>Perhaps you are wondering how FriCAS internally represents objects of
type <span class="teletype">Any</span>.  An object of type <span class="teletype">Any</span> consists not only of a data
part representing its normal value, but also a type part (a 
<span class="italic">badge</span>) giving <span class="index">badge</span><a name="chapter-2-47"/> its type.  For example, the value <math xmlns="&mathml;" mathsize="big"><mstyle><mn>1</mn></mstyle></math> of
type <span class="teletype">PositiveInteger</span> as an object of type <span class="teletype">Any</span> internally
looks like <math xmlns="&mathml;" mathsize="big"><mstyle><mrow><mo>[</mo><mn>1</mn><mo>,</mo><mrow><mtext mathvariant='monospace'>PositiveInteger()</mtext></mrow><mo>]</mo></mrow></mstyle></math>.
</p>


<p>When should you use <span class="teletype">Any</span> instead of a <span class="teletype">Union</span> type?  For a
<span class="teletype">Union</span>, you must know in advance exactly which types you are
going to
allow.  For <span class="teletype">Any</span>, anything that comes along can be accommodated.
</p>




</div><a href="book-contents.xhtml" style="margin-right: 10px;">Book Contents</a>
<a href="section-2.5.xhtml" style="margin-right: 10px;">Previous Section 2.5 Unions</a><a href="section-2.7.xhtml" style="margin-right: 10px;">Next Section 2.7 Conversion</a>
<a href="book-index.xhtml">Book Index</a></body>
</html>