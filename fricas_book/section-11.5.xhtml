<?xml version="1.0" encoding="UTF-8" ?>

<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.1 plus MathML 2.0//EN"
"http://www.w3.org/TR/MathML2/dtd/xhtml-math11-f.dtd" [
<!ENTITY mathml "http://www.w3.org/1998/Math/MathML">
]>

<html xmlns="http://www.w3.org/1999/xhtml"
      xmlns:xlink="http://www.w3.org/1999/xlink" >


  <head>
    <title>Section11.5</title>
    <link rel="stylesheet" type="text/css" href="graphicstyle.css" />
    <script type="text/javascript" src="bookax1.js" />
  </head>

  <body>
<a href="book-contents.xhtml" style="margin-right: 10px;">Book Contents</a><a href="section-11.4.xhtml" style="margin-right: 10px;">Previous Section 11.4 Capsules</a><a href="section-11.6.xhtml" style="margin-right: 10px;">Next Section 11.6 Compiling Packages</a>
<a href="book-index.xhtml">Book Index</a><div class="section"  id="sec-11.5">
<h2 class="sectiontitle">11.5  Input Files vs. Packages</h2>


<a name="ugPackagesInputFiles" class="label"/>



<p>A good question at this point would be <span class="italic">Is writing a package more difficult than
writing an input file?</span>
</p>


<p>The programs in input files are designed for flexibility and ease-of-use.
FriCAS can usually work out all of your types as it reads your program
and does the computations you request.
Let's say that you define a one-argument function without giving its type.
When you first apply the function to a value, this
value is understood by FriCAS as identifying the type for the
argument parameter.
Most of the time FriCAS goes through the body of your function and
figures out the target type that you have in mind.
FriCAS sometimes fails to get it right.
Then---and only then---do you need a declaration to tell FriCAS what
type you want.
</p>


<p>Input files are usually written to be read by FriCAS---and by you.
<span class="index">file:input:vs. package</span><a name="chapter-11-12"/>
Without suitable documentation and declarations, your input files
<span class="index">package:vs. input file</span><a name="chapter-11-13"/>
are likely incomprehensible to a colleague---and to you some
months later!
</p>


<p>Packages are designed for legibility, as well as
run-time efficiency.
There are few new concepts you need to learn to write
packages. Rather, you just have to be explicit about types
and type conversions.
The types of all functions are pre-declared so that FriCAS---and the reader---
knows precisely what types of arguments can be passed to and from
the functions (certainly you don't want a colleague to guess or to
have to work this out from context!).
The types of local variables are also declared.
Type conversions are explicit, never automatic.<span class="footnote">There
is one exception to this rule: conversions from a subdomain to a
domain are automatic.
After all, the objects both have the domain as a common type.</span>
</p>


<p>In summary, packages are more tedious to write than input files.
When writing input files, you can casually go ahead, giving some
facts now, leaving others for later.
Writing packages requires forethought, care and discipline.
</p>




</div><a href="book-contents.xhtml" style="margin-right: 10px;">Book Contents</a>
<a href="section-11.4.xhtml" style="margin-right: 10px;">Previous Section 11.4 Capsules</a><a href="section-11.6.xhtml" style="margin-right: 10px;">Next Section 11.6 Compiling Packages</a>
<a href="book-index.xhtml">Book Index</a></body>
</html>