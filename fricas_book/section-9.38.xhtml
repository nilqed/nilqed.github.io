<?xml version="1.0" encoding="UTF-8" ?>

<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.1 plus MathML 2.0//EN"
"http://www.w3.org/TR/MathML2/dtd/xhtml-math11-f.dtd" [
<!ENTITY mathml "http://www.w3.org/1998/Math/MathML">
]>

<html xmlns="http://www.w3.org/1999/xhtml"
      xmlns:xlink="http://www.w3.org/1999/xlink" >


  <head>
    <title>Section9.38</title>
    <link rel="stylesheet" type="text/css" href="graphicstyle.css" />
    <script type="text/javascript" src="bookax1.js" />
  </head>

  <body>
<a href="book-contents.xhtml" style="margin-right: 10px;">Book Contents</a><a href="section-9.37.xhtml" style="margin-right: 10px;">Previous Section 9.37  Kernel</a><a href="section-9.39.xhtml" style="margin-right: 10px;">Next Section 9.39 LexTriangularPackage</a>
<a href="book-index.xhtml">Book Index</a><div class="section"  id="sec-9.38">
<h2 class="sectiontitle">9.38  KeyedAccessFile</h2>


<a name="KeyedAccessFileXmpPage" class="label"/>


<p>The domain <span class="teletype">KeyedAccessFile(S)</span> provides files which can be used
as associative tables.  Data values are stored in these files and can
be retrieved according to their keys.  The keys must be strings so
this type behaves very much like the <span class="teletype">StringTable(S)</span> domain.  The
difference is that keyed access files reside in secondary storage
while string tables are kept in memory.  For more information on
table-oriented operations, see the description of <span class="teletype">Table</span>.
</p>


<p>Before a keyed access file can be used, it must first be opened.
A new file can be created by opening it for output.
</p>




<div id="spadComm9-1" class="spadComm" >
<form id="formComm9-1" action="javascript:makeRequest('9-1');" >
<input id="comm9-1" type="text" class="command" style="width: 46em;" value='ey: KeyedAccessFile(Integer) := open("/tmp/editor.year", "output")  ' />
</form>
<span id="commSav9-1" class="commSav" >ey: KeyedAccessFile(Integer) := open("/tmp/editor.year", "output")  </span>
<div id="mathAns9-1" ></div>
</div>


<div class="math">
<table>
<tr><td>
<math xmlns="&mathml;" mathsize="big" display="block"><mstyle><mrow><mtext><mrow><mtext mathvariant='monospace'>"/tmp/editor.year"</mtext></mrow></mtext></mrow></mstyle></math>
</td></tr>
</table>
</div>




<div class="returnType">
Type: KeyedAccessFile Integer
</div>



<p>Just as for vectors, tables or lists, values are saved in a keyed access file
by setting elements.
</p>




<div id="spadComm9-2" class="spadComm" >
<form id="formComm9-2" action="javascript:makeRequest('9-2');" >
<input id="comm9-2" type="text" class="command" style="width: 15em;" value='ey."Char"     := 1986 ' />
</form>
<span id="commSav9-2" class="commSav" >ey."Char"     := 1986 </span>
<div id="mathAns9-2" ></div>
</div>


<div class="math">
<table>
<tr><td>
<math xmlns="&mathml;" mathsize="big" display="block"><mstyle><mn>1986</mn></mstyle></math>
</td></tr>
</table>
</div>




<div class="returnType">
Type: PositiveInteger
</div>





<div id="spadComm9-3" class="spadComm" >
<form id="formComm9-3" action="javascript:makeRequest('9-3');" >
<input id="comm9-3" type="text" class="command" style="width: 15em;" value='ey."Caviness" := 1985 ' />
</form>
<span id="commSav9-3" class="commSav" >ey."Caviness" := 1985 </span>
<div id="mathAns9-3" ></div>
</div>


<div class="math">
<table>
<tr><td>
<math xmlns="&mathml;" mathsize="big" display="block"><mstyle><mn>1985</mn></mstyle></math>
</td></tr>
</table>
</div>




<div class="returnType">
Type: PositiveInteger
</div>





<div id="spadComm9-4" class="spadComm" >
<form id="formComm9-4" action="javascript:makeRequest('9-4');" >
<input id="comm9-4" type="text" class="command" style="width: 15em;" value='ey."Fitch"    := 1984 ' />
</form>
<span id="commSav9-4" class="commSav" >ey."Fitch"    := 1984 </span>
<div id="mathAns9-4" ></div>
</div>


<div class="math">
<table>
<tr><td>
<math xmlns="&mathml;" mathsize="big" display="block"><mstyle><mn>1984</mn></mstyle></math>
</td></tr>
</table>
</div>




<div class="returnType">
Type: PositiveInteger
</div>



<p>Values are retrieved using application, in any of its syntactic forms.
</p>




<div id="spadComm9-5" class="spadComm" >
<form id="formComm9-5" action="javascript:makeRequest('9-5');" >
<input id="comm9-5" type="text" class="command" style="width: 6em;" value='ey."Char"' />
</form>
<span id="commSav9-5" class="commSav" >ey."Char"</span>
<div id="mathAns9-5" ></div>
</div>


<div class="math">
<table>
<tr><td>
<math xmlns="&mathml;" mathsize="big" display="block"><mstyle><mn>1986</mn></mstyle></math>
</td></tr>
</table>
</div>




<div class="returnType">
Type: PositiveInteger
</div>





<div id="spadComm9-6" class="spadComm" >
<form id="formComm9-6" action="javascript:makeRequest('9-6');" >
<input id="comm9-6" type="text" class="command" style="width: 7em;" value='ey("Char")' />
</form>
<span id="commSav9-6" class="commSav" >ey("Char")</span>
<div id="mathAns9-6" ></div>
</div>


<div class="math">
<table>
<tr><td>
<math xmlns="&mathml;" mathsize="big" display="block"><mstyle><mn>1986</mn></mstyle></math>
</td></tr>
</table>
</div>




<div class="returnType">
Type: PositiveInteger
</div>





<div id="spadComm9-7" class="spadComm" >
<form id="formComm9-7" action="javascript:makeRequest('9-7');" >
<input id="comm9-7" type="text" class="command" style="width: 6em;" value='ey "Char"' />
</form>
<span id="commSav9-7" class="commSav" >ey "Char"</span>
<div id="mathAns9-7" ></div>
</div>


<div class="math">
<table>
<tr><td>
<math xmlns="&mathml;" mathsize="big" display="block"><mstyle><mn>1986</mn></mstyle></math>
</td></tr>
</table>
</div>




<div class="returnType">
Type: PositiveInteger
</div>



<p>Attempting to retrieve a non-existent element in this way causes an error.
If it is not known whether a key exists, you should use the
<span class="spadfunFrom" >search</span><span class="index">search</span><a name="chapter-9-0"/><span class="index">KeyedAccessFile</span><a name="chapter-9-1"/> operation.
</p>




<div id="spadComm9-8" class="spadComm" >
<form id="formComm9-8" action="javascript:makeRequest('9-8');" >
<input id="comm9-8" type="text" class="command" style="width: 14em;" value='search("Char", ey)   ' />
</form>
<span id="commSav9-8" class="commSav" >search("Char", ey)   </span>
<div id="mathAns9-8" ></div>
</div>


<div class="math">
<table>
<tr><td>
<math xmlns="&mathml;" mathsize="big" display="block"><mstyle><mn>1986</mn></mstyle></math>
</td></tr>
</table>
</div>




<div class="returnType">
Type: Union(Integer,...)
</div>





<div id="spadComm9-9" class="spadComm" >
<form id="formComm9-9" action="javascript:makeRequest('9-9');" >
<input id="comm9-9" type="text" class="command" style="width: 13em;" value='search("Smith", ey)' />
</form>
<span id="commSav9-9" class="commSav" >search("Smith", ey)</span>
<div id="mathAns9-9" ></div>
</div>


<div class="math">
<table>
<tr><td>
<math xmlns="&mathml;" mathsize="big" display="block"><mstyle><mrow><mtext><mrow><mtext mathvariant='monospace'>"failed"</mtext></mrow></mtext></mrow></mstyle></math>
</td></tr>
</table>
</div>




<div class="returnType">
Type: Union("failed",...)
</div>



<p>When an entry is no longer needed, it can be removed from the file.
</p>




<div id="spadComm9-10" class="spadComm" >
<form id="formComm9-10" action="javascript:makeRequest('9-10');" >
<input id="comm9-10" type="text" class="command" style="width: 14em;" value='remove!("Char", ey)  ' />
</form>
<span id="commSav9-10" class="commSav" >remove!("Char", ey)  </span>
<div id="mathAns9-10" ></div>
</div>


<div class="math">
<table>
<tr><td>
<math xmlns="&mathml;" mathsize="big" display="block"><mstyle><mn>1986</mn></mstyle></math>
</td></tr>
</table>
</div>




<div class="returnType">
Type: Union(Integer,...)
</div>



<p>The <span class="spadfunFrom" >keys</span><span class="index">keys</span><a name="chapter-9-2"/><span class="index">KeyedAccessFile</span><a name="chapter-9-3"/> operation returns a list of all the
keys for a given file.
</p>




<div id="spadComm9-11" class="spadComm" >
<form id="formComm9-11" action="javascript:makeRequest('9-11');" >
<input id="comm9-11" type="text" class="command" style="width: 6em;" value="keys ey  " />
</form>
<span id="commSav9-11" class="commSav" >keys ey  </span>
<div id="mathAns9-11" ></div>
</div>


<div class="math">
<table>
<tr><td>
<math xmlns="&mathml;" mathsize="big" display="block"><mstyle><mrow><mo><mo>[</mo></mo><mtext><mrow><mtext mathvariant='monospace'>"Fitch"</mtext></mrow></mtext><mo>,</mo><mtext><mrow><mtext mathvariant='monospace'>"Caviness"</mtext></mrow></mtext><mo><mo>]</mo></mo></mrow></mstyle></math>
</td></tr>
</table>
</div>




<div class="returnType">
Type: List String
</div>



<p>The <span class="spadfunFrom" > #</span><span class="index"> #</span><a name="chapter-9-4"/><span class="index">KeyedAccessFile</span><a name="chapter-9-5"/> operation gives the
number of entries.
</p>




<div id="spadComm9-12" class="spadComm" >
<form id="formComm9-12" action="javascript:makeRequest('9-12');" >
<input id="comm9-12" type="text" class="command" style="width: 3em;" value=" #ey" />
</form>
<span id="commSav9-12" class="commSav" > #ey</span>
<div id="mathAns9-12" ></div>
</div>


<div class="math">
<table>
<tr><td>
<math xmlns="&mathml;" mathsize="big" display="block"><mstyle><mn>2</mn></mstyle></math>
</td></tr>
</table>
</div>




<div class="returnType">
Type: PositiveInteger
</div>



<p>The table view of keyed access files provides safe operations.  That
is, if the FriCAS program is terminated between file operations, the
file is left in a consistent, current state.  This means, however,
that the operations are somewhat costly.  For example, after each
update the file is closed.
</p>


<p>Here we add several more items to the file, then check its contents.
</p>




<div id="spadComm9-13" class="spadComm" >
<form id="formComm9-13" action="javascript:makeRequest('9-13');" >
<input id="comm9-13" type="text" class="command" style="width: 29em;" value="KE := Record(key: String, entry: Integer)  " />
</form>
<span id="commSav9-13" class="commSav" >KE := Record(key: String, entry: Integer)  </span>
<div id="mathAns9-13" ></div>
</div>


<div class="math">
<table>
<tr><td>
<math xmlns="&mathml;" mathsize="big" display="block"><mstyle><mrow><mtext><mrow><mtext>Record(key:String,entry:Integer)</mtext></mrow></mtext></mrow></mstyle></math>
</td></tr>
</table>
</div>




<div class="returnType">
Type: Domain
</div>





<div id="spadComm9-14" class="spadComm" >
<form id="formComm9-14" action="javascript:makeRequest('9-14');" >
<input id="comm9-14" type="text" class="command" style="width: 16em;" value='reopen!(ey, "output")  ' />
</form>
<span id="commSav9-14" class="commSav" >reopen!(ey, "output")  </span>
<div id="mathAns9-14" ></div>
</div>


<div class="math">
<table>
<tr><td>
<math xmlns="&mathml;" mathsize="big" display="block"><mstyle><mrow><mtext><mrow><mtext mathvariant='monospace'>"/tmp/editor.year"</mtext></mrow></mtext></mrow></mstyle></math>
</td></tr>
</table>
</div>




<div class="returnType">
Type: KeyedAccessFile Integer
</div>



<p>If many items are to be added to a file at the same time, then
it is more efficient to use the <span class="spadfunFrom" >write</span><span class="index">write</span><a name="chapter-9-6"/><span class="index">KeyedAccessFile</span><a name="chapter-9-7"/> operation.
</p>




<div id="spadComm9-15" class="spadComm" >
<form id="formComm9-15" action="javascript:makeRequest('9-15');" >
<input id="comm9-15" type="text" class="command" style="width: 25em;" value='write!(ey, ["van Hulzen", 1983]$KE)  ' />
</form>
<span id="commSav9-15" class="commSav" >write!(ey, ["van Hulzen", 1983]$KE)  </span>
<div id="mathAns9-15" ></div>
</div>


<div class="math">
<table>
<tr><td>
<math xmlns="&mathml;" mathsize="big" display="block"><mstyle><mrow><mo><mo>[</mo></mo><mrow><mi>key</mi><mo>=</mo><mtext><mrow><mtext mathvariant='monospace'>"vanHulzen"</mtext></mrow></mtext></mrow><mo>,</mo><mrow><mi>entry</mi><mo>=</mo><mn>1983</mn></mrow><mo><mo>]</mo></mo></mrow></mstyle></math>
</td></tr>
</table>
</div>




<div class="returnType">
Type: Record(key: String,entry: Integer)
</div>





<div id="spadComm9-16" class="spadComm" >
<form id="formComm9-16" action="javascript:makeRequest('9-16');" >
<input id="comm9-16" type="text" class="command" style="width: 21em;" value='write!(ey, ["Calmet", 1982]$KE)' />
</form>
<span id="commSav9-16" class="commSav" >write!(ey, ["Calmet", 1982]$KE)</span>
<div id="mathAns9-16" ></div>
</div>


<div class="math">
<table>
<tr><td>
<math xmlns="&mathml;" mathsize="big" display="block"><mstyle><mrow><mo><mo>[</mo></mo><mrow><mi>key</mi><mo>=</mo><mtext><mrow><mtext mathvariant='monospace'>"Calmet"</mtext></mrow></mtext></mrow><mo>,</mo><mrow><mi>entry</mi><mo>=</mo><mn>1982</mn></mrow><mo><mo>]</mo></mo></mrow></mstyle></math>
</td></tr>
</table>
</div>




<div class="returnType">
Type: Record(key: String,entry: Integer)
</div>





<div id="spadComm9-17" class="spadComm" >
<form id="formComm9-17" action="javascript:makeRequest('9-17');" >
<input id="comm9-17" type="text" class="command" style="width: 20em;" value='write!(ey, ["Wang", 1981]$KE)' />
</form>
<span id="commSav9-17" class="commSav" >write!(ey, ["Wang", 1981]$KE)</span>
<div id="mathAns9-17" ></div>
</div>


<div class="math">
<table>
<tr><td>
<math xmlns="&mathml;" mathsize="big" display="block"><mstyle><mrow><mo><mo>[</mo></mo><mrow><mi>key</mi><mo>=</mo><mtext><mrow><mtext mathvariant='monospace'>"Wang"</mtext></mrow></mtext></mrow><mo>,</mo><mrow><mi>entry</mi><mo>=</mo><mn>1981</mn></mrow><mo><mo>]</mo></mo></mrow></mstyle></math>
</td></tr>
</table>
</div>




<div class="returnType">
Type: Record(key: String,entry: Integer)
</div>





<div id="spadComm9-18" class="spadComm" >
<form id="formComm9-18" action="javascript:makeRequest('9-18');" >
<input id="comm9-18" type="text" class="command" style="width: 6em;" value="close! ey" />
</form>
<span id="commSav9-18" class="commSav" >close! ey</span>
<div id="mathAns9-18" ></div>
</div>


<div class="math">
<table>
<tr><td>
<math xmlns="&mathml;" mathsize="big" display="block"><mstyle><mrow><mtext><mrow><mtext mathvariant='monospace'>"/tmp/editor.year"</mtext></mrow></mtext></mrow></mstyle></math>
</td></tr>
</table>
</div>




<div class="returnType">
Type: KeyedAccessFile Integer
</div>



<p>The <span class="spadfunFrom" >read</span><span class="index">read</span><a name="chapter-9-8"/><span class="index">KeyedAccessFile</span><a name="chapter-9-9"/> operation is also available
from the file view, but it returns elements in a random order.  It is
generally clearer and more efficient to use the
<span class="spadfunFrom" >keys</span><span class="index">keys</span><a name="chapter-9-10"/><span class="index">KeyedAccessFile</span><a name="chapter-9-11"/> operation and to extract elements
by key.
</p>




<div id="spadComm9-19" class="spadComm" >
<form id="formComm9-19" action="javascript:makeRequest('9-19');" >
<input id="comm9-19" type="text" class="command" style="width: 5em;" value="keys ey" />
</form>
<span id="commSav9-19" class="commSav" >keys ey</span>
<div id="mathAns9-19" ></div>
</div>


<div class="math">
<table>
<tr><td>
<math xmlns="&mathml;" mathsize="big" display="block"><mstyle><mrow><mo><mo>[</mo></mo><mtext><mrow><mtext mathvariant='monospace'>"Wang"</mtext></mrow></mtext><mo>,</mo><mtext><mrow><mtext mathvariant='monospace'>"Calmet"</mtext></mrow></mtext><mo>,</mo><mtext><mrow><mtext mathvariant='monospace'>"vanHulzen"</mtext></mrow></mtext><mo>,</mo><mtext><mrow><mtext mathvariant='monospace'>"Fitch"</mtext></mrow></mtext><mo>,</mo><mtext><mrow><mtext mathvariant='monospace'>"Caviness"</mtext></mrow></mtext><mo><mo>]</mo></mo></mrow></mstyle></math>
</td></tr>
</table>
</div>




<div class="returnType">
Type: List String
</div>





<div id="spadComm9-20" class="spadComm" >
<form id="formComm9-20" action="javascript:makeRequest('9-20');" >
<input id="comm9-20" type="text" class="command" style="width: 7em;" value="members ey" />
</form>
<span id="commSav9-20" class="commSav" >members ey</span>
<div id="mathAns9-20" ></div>
</div>


<div class="math">
<table>
<tr><td>
<math xmlns="&mathml;" mathsize="big" display="block"><mstyle><mrow><mo><mo>[</mo></mo><mn>1981</mn><mo>,</mo><mn>1982</mn><mo>,</mo><mn>1983</mn><mo>,</mo><mn>1984</mn><mo>,</mo><mn>1985</mn><mo><mo>]</mo></mo></mrow></mstyle></math>
</td></tr>
</table>
</div>




<div class="returnType">
Type: List Integer
</div>





<div id="spadComm9-21" class="spadComm" >
<form id="formComm9-21" action="javascript:makeRequest('9-21');" >
<input id="comm9-21" type="text" class="command" style="width: 20em;" value=")system rm -r /tmp/editor.year" />
</form>
<span id="commSav9-21" class="commSav" >)system rm -r /tmp/editor.year</span>
<div id="mathAns9-21" ></div>
</div>



<p>For more information on related topics, see 
<a href="section-9.24.xhtml#FileXmpPage" class="ref" >FileXmpPage</a> ,
<a href="section-9.81.xhtml#TextFileXmpPage" class="ref" >TextFileXmpPage</a> , and 
<a href="section-9.41.xhtml#LibraryXmpPage" class="ref" >LibraryXmpPage</a> .
</p>




</div><a href="book-contents.xhtml" style="margin-right: 10px;">Book Contents</a><a href="section-9.37.xhtml" style="margin-right: 10px;">Previous Section 9.37  Kernel</a><a href="section-9.39.xhtml" style="margin-right: 10px;">Next Section 9.39 LexTriangularPackage</a>
<a href="book-index.xhtml">Book Index</a></body>
</html>