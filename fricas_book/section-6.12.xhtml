<?xml version="1.0" encoding="UTF-8" ?>

<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.1 plus MathML 2.0//EN"
"http://www.w3.org/TR/MathML2/dtd/xhtml-math11-f.dtd" [
<!ENTITY mathml "http://www.w3.org/1998/Math/MathML">
]>

<html xmlns="http://www.w3.org/1999/xhtml"
      xmlns:xlink="http://www.w3.org/1999/xlink" >


  <head>
    <title>Section6.12</title>
    <link rel="stylesheet" type="text/css" href="graphicstyle.css" />
    <script type="text/javascript" src="bookax1.js" />
  </head>

  <body>
<a href="book-contents.xhtml" style="margin-right: 10px;">Book Contents</a><a href="section-6.11.xhtml" style="margin-right: 10px;">Previous Section 6.11 Piece-Wise Function Definitions</a><a href="section-6.13.xhtml" style="margin-right: 10px;">Next Section 6.13 Recurrence Relations</a>
<a href="book-index.xhtml">Book Index</a><div class="section"  id="sec-6.12">
<h2 class="sectiontitle">6.12  Caching Previously Computed Results</h2>


<a name="ugUserCache" class="label"/>


<p>By default, FriCAS does not save the values of any function.
<span class="index">function:caching values</span><a name="chapter-6-30"/> You can cause it to save values and
not to recompute unnecessarily <span class="index">remembering function values</span><a name="chapter-6-31"/> by
using <span class="teletype">)set functions cache</span>.  <span class="index">set functions cache</span><a name="chapter-6-32"/> This
should be used before the functions are defined or, at least, before
they are executed.  The word following <span class="italic">cache</span> should be <math xmlns="&mathml;" mathsize="big"><mstyle><mn>0</mn></mstyle></math> to turn
off caching, a positive integer <math xmlns="&mathml;" mathsize="big"><mstyle><mi>n</mi></mstyle></math> to save the last <math xmlns="&mathml;" mathsize="big"><mstyle><mi>n</mi></mstyle></math> computed
values or <span class="italic">all</span> to save all computed values.  If you then give a
list of names of functions, the caching only affects those functions.
Use no list of names or <span class="italic">all</span> when you want to define the default
behavior for functions not specifically mentioned in other 
<span class="teletype">)set functions cache</span> statements.  If you give no list of names, all
functions will have the caching behavior.  If you explicitly turn on
caching for one or more names, you must explicitly turn off caching
for those names when you want to stop saving their values.
</p>


<p>This causes the functions <span style="font-weight: bold;"> f</span> and <span style="font-weight: bold;"> g</span> to have the last three
computed values saved.
</p>



<div id="spadComm6-92" class="spadComm" >
<form id="formComm6-92" action="javascript:makeRequest('6-92');" >
<input id="comm6-92" type="text" class="command" style="width: 18em;" value=")set functions cache 3 f g" />
</form>
<span id="commSav6-92" class="commSav" >)set functions cache 3 f g</span>
<div id="mathAns6-92" ></div>
</div>




<div class="verbatim"><br />
&nbsp;&nbsp;&nbsp;function&nbsp;f&nbsp;will&nbsp;cache&nbsp;the&nbsp;last&nbsp;3&nbsp;values.<br />
&nbsp;&nbsp;&nbsp;function&nbsp;g&nbsp;will&nbsp;cache&nbsp;the&nbsp;last&nbsp;3&nbsp;values.<br />
</div>



<p>This is a sample definition for <span style="font-weight: bold;"> f</span>.
</p>



<div id="spadComm6-93" class="spadComm" >
<form id="formComm6-93" action="javascript:makeRequest('6-93');" >
<input id="comm6-93" type="text" class="command" style="width: 15em;" value="f x == factorial(2^x)" />
</form>
<span id="commSav6-93" class="commSav" >f x == factorial(2^x)</span>
<div id="mathAns6-93" ></div>
</div>




<div class="returnType">
Type: Void
</div>



<p>A message is displayed stating what <span style="font-weight: bold;"> f</span> will cache.
</p>



<div id="spadComm6-94" class="spadComm" >
<form id="formComm6-94" action="javascript:makeRequest('6-94');" >
<input id="comm6-94" type="text" class="command" style="width: 3em;" value="f(4)" />
</form>
<span id="commSav6-94" class="commSav" >f(4)</span>
<div id="mathAns6-94" ></div>
</div>




<div class="verbatim"><br />
&nbsp;&nbsp;&nbsp;Compiling&nbsp;function&nbsp;f&nbsp;with&nbsp;type&nbsp;PositiveInteger&nbsp;-&gt;&nbsp;Integer&nbsp;<br />
&nbsp;&nbsp;&nbsp;f&nbsp;will&nbsp;cache&nbsp;3&nbsp;most&nbsp;recently&nbsp;computed&nbsp;value(s).<br />
<br />
+++&nbsp;|*1;f;1;G82322|&nbsp;redefined<br />
</div>


<div class="math">
<table>
<tr><td>
<math xmlns="&mathml;" mathsize="big" display="block"><mstyle><mn>20922789888000</mn></mstyle></math>
</td></tr>
</table>
</div>




<div class="returnType">
Type: PositiveInteger
</div>



<p>This causes all other functions to have all computed values saved by default.
</p>



<div id="spadComm6-95" class="spadComm" >
<form id="formComm6-95" action="javascript:makeRequest('6-95');" >
<input id="comm6-95" type="text" class="command" style="width: 16em;" value=")set functions cache all" />
</form>
<span id="commSav6-95" class="commSav" >)set functions cache all</span>
<div id="mathAns6-95" ></div>
</div>




<div class="verbatim"><br />
&nbsp;&nbsp;&nbsp;In&nbsp;general,&nbsp;interpreter&nbsp;functions&nbsp;will&nbsp;cache&nbsp;all&nbsp;values.<br />
</div>



<p>This causes all functions that have not been specifically cached in some way
to have no computed values saved.
</p>



<div id="spadComm6-96" class="spadComm" >
<form id="formComm6-96" action="javascript:makeRequest('6-96');" >
<input id="comm6-96" type="text" class="command" style="width: 15em;" value=")set functions cache 0" />
</form>
<span id="commSav6-96" class="commSav" >)set functions cache 0</span>
<div id="mathAns6-96" ></div>
</div>




<div class="verbatim"><br />
&nbsp;In&nbsp;general,&nbsp;functions&nbsp;will&nbsp;cache&nbsp;no&nbsp;returned&nbsp;values.<br />
</div>



<p>We also make <span style="font-weight: bold;"> f</span> and <span style="font-weight: bold;"> g</span> uncached.
</p>



<div id="spadComm6-97" class="spadComm" >
<form id="formComm6-97" action="javascript:makeRequest('6-97');" >
<input id="comm6-97" type="text" class="command" style="width: 18em;" value=")set functions cache 0 f g" />
</form>
<span id="commSav6-97" class="commSav" >)set functions cache 0 f g</span>
<div id="mathAns6-97" ></div>
</div>




<div class="verbatim"><br />
&nbsp;&nbsp;&nbsp;Caching&nbsp;for&nbsp;function&nbsp;f&nbsp;is&nbsp;turned&nbsp;off<br />
&nbsp;&nbsp;&nbsp;Caching&nbsp;for&nbsp;function&nbsp;g&nbsp;is&nbsp;turned&nbsp;off<br />
</div>





<div class="boxed2">


<div class="boxed">



<p>Be careful about caching functions that have side effects.  Such a
function might destructively modify the elements of an array or issue
a <span style="font-weight: bold;"> draw</span> command, for example.  A function that you expect to
execute every time it is called should not be cached.  Also, it is
highly unlikely that a function with no arguments should be cached.<br/>
</p>



</div>
</div>



<p>You should also be careful about caching functions that depend on free
variables.  See <a href="section-6.16.xhtml#ugUserFreeLocal" class="ref" >ugUserFreeLocal</a>  for an example.
</p>




</div><a href="book-contents.xhtml" style="margin-right: 10px;">Book Contents</a>
<a href="section-6.11.xhtml" style="margin-right: 10px;">Previous Section 6.11 Piece-Wise Function Definitions</a><a href="section-6.13.xhtml" style="margin-right: 10px;">Next Section 6.13 Recurrence Relations</a>
<a href="book-index.xhtml">Book Index</a></body>
</html>