<?xml version="1.0" encoding="UTF-8" ?>

<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.1 plus MathML 2.0//EN"
"http://www.w3.org/TR/MathML2/dtd/xhtml-math11-f.dtd" [
<!ENTITY mathml "http://www.w3.org/1998/Math/MathML">
]>

<html xmlns="http://www.w3.org/1999/xhtml"
      xmlns:xlink="http://www.w3.org/1999/xlink" >


  <head>
    <title>Section6.6</title>
    <link rel="stylesheet" type="text/css" href="graphicstyle.css" />
    <script type="text/javascript" src="bookax1.js" />
  </head>

  <body>
<a href="book-contents.xhtml" style="margin-right: 10px;">Book Contents</a><a href="section-6.5.xhtml" style="margin-right: 10px;">Previous Section 6.5 One-Line Functions</a><a href="section-6.7.xhtml" style="margin-right: 10px;">Next Section 6.7 Functions vs. Operations</a>
<a href="book-index.xhtml">Book Index</a><div class="section"  id="sec-6.6">
<h2 class="sectiontitle">6.6  Declared vs. Undeclared Functions</h2>


<a name="ugUserDecUndec" class="label"/>


<p>If you declare the type of a function, you can apply it to any data
that can be converted to the source type of the function.
</p>


<p>Define <span style="font-weight: bold;"> f</span> with type {\sf Integer <math xmlns="&mathml;" mathsize="big"><mstyle><mo>&#x2192;</mo></mstyle></math> Integer}.
</p>



<div id="spadComm6-36" class="spadComm" >
<form id="formComm6-36" action="javascript:makeRequest('6-36');" >
<input id="comm6-36" type="text" class="command" style="width: 21em;" value="f(x: Integer): Integer == x + 1" />
</form>
<span id="commSav6-36" class="commSav" >f(x: Integer): Integer == x + 1</span>
<div id="mathAns6-36" ></div>
</div>




<div class="verbatim"><br />
&nbsp;&nbsp;&nbsp;Function&nbsp;declaration&nbsp;f&nbsp;:&nbsp;Integer&nbsp;-&gt;&nbsp;Integer&nbsp;has&nbsp;been&nbsp;added&nbsp;to&nbsp;<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;workspace.<br />
</div>




<div class="returnType">
Type: Void
</div>



<p>The function <span style="font-weight: bold;"> f</span> can be applied to integers, ...
</p>



<div id="spadComm6-37" class="spadComm" >
<form id="formComm6-37" action="javascript:makeRequest('6-37');" >
<input id="comm6-37" type="text" class="command" style="width: 2em;" value="f 9" />
</form>
<span id="commSav6-37" class="commSav" >f 9</span>
<div id="mathAns6-37" ></div>
</div>




<div class="verbatim"><br />
&nbsp;&nbsp;&nbsp;Compiling&nbsp;function&nbsp;f&nbsp;with&nbsp;type&nbsp;Integer&nbsp;-&gt;&nbsp;Integer&nbsp;<br />
</div>


<div class="math">
<table>
<tr><td>
<math xmlns="&mathml;" mathsize="big" display="block"><mstyle><mn>10</mn></mstyle></math>
</td></tr>
</table>
</div>




<div class="returnType">
Type: PositiveInteger
</div>



<p>and to values that convert to integers, ...
</p>



<div id="spadComm6-38" class="spadComm" >
<form id="formComm6-38" action="javascript:makeRequest('6-38');" >
<input id="comm6-38" type="text" class="command" style="width: 5em;" value="f(-2.0)" />
</form>
<span id="commSav6-38" class="commSav" >f(-2.0)</span>
<div id="mathAns6-38" ></div>
</div>


<div class="math">
<table>
<tr><td>
<math xmlns="&mathml;" mathsize="big" display="block"><mstyle><mrow><mo>-</mo><mn>1</mn></mrow></mstyle></math>
</td></tr>
</table>
</div>




<div class="returnType">
Type: Integer
</div>



<p>but not to values that cannot be converted to integers.
</p>



<div id="spadComm6-39" class="spadComm" >
<form id="formComm6-39" action="javascript:makeRequest('6-39');" >
<input id="comm6-39" type="text" class="command" style="width: 4em;" value="f(2/3)" />
</form>
<span id="commSav6-39" class="commSav" >f(2/3)</span>
<div id="mathAns6-39" ></div>
</div>




<div class="verbatim"><br />
&nbsp;&nbsp;&nbsp;Conversion&nbsp;failed&nbsp;in&nbsp;the&nbsp;compiled&nbsp;user&nbsp;function&nbsp;f&nbsp;.<br />
&nbsp;<br />
&nbsp;&nbsp;&nbsp;Cannot&nbsp;convert&nbsp;from&nbsp;type&nbsp;Fraction&nbsp;Integer&nbsp;to&nbsp;Integer&nbsp;for&nbsp;value<br />
&nbsp;&nbsp;&nbsp;2<br />
&nbsp;&nbsp;&nbsp;-<br />
&nbsp;&nbsp;&nbsp;3<br />
</div>



<p>To make the function over a wide range of types, do not declare its type.
Give the same definition with no declaration.
</p>



<div id="spadComm6-40" class="spadComm" >
<form id="formComm6-40" action="javascript:makeRequest('6-40');" >
<input id="comm6-40" type="text" class="command" style="width: 8em;" value="g x == x + 1" />
</form>
<span id="commSav6-40" class="commSav" >g x == x + 1</span>
<div id="mathAns6-40" ></div>
</div>




<div class="returnType">
Type: Void
</div>



<p>If <math xmlns="&mathml;" mathsize="big"><mstyle><mrow><mi>x</mi><mo>+</mo><mn>1</mn></mrow></mstyle></math> makes sense, you can apply <span style="font-weight: bold;"> g</span> to <math xmlns="&mathml;" mathsize="big"><mstyle><mi>x</mi></mstyle></math>.
</p>



<div id="spadComm6-41" class="spadComm" >
<form id="formComm6-41" action="javascript:makeRequest('6-41');" >
<input id="comm6-41" type="text" class="command" style="width: 2em;" value="g 9" />
</form>
<span id="commSav6-41" class="commSav" >g 9</span>
<div id="mathAns6-41" ></div>
</div>




<div class="verbatim"><br />
&nbsp;&nbsp;&nbsp;Compiling&nbsp;function&nbsp;g&nbsp;with&nbsp;type&nbsp;PositiveInteger&nbsp;-&gt;&nbsp;PositiveInteger&nbsp;<br />
</div>


<div class="math">
<table>
<tr><td>
<math xmlns="&mathml;" mathsize="big" display="block"><mstyle><mn>10</mn></mstyle></math>
</td></tr>
</table>
</div>




<div class="returnType">
Type: PositiveInteger
</div>



<p>A version of <span style="font-weight: bold;"> g</span> with different argument types get compiled for
each new kind of argument used.
</p>



<div id="spadComm6-42" class="spadComm" >
<form id="formComm6-42" action="javascript:makeRequest('6-42');" >
<input id="comm6-42" type="text" class="command" style="width: 4em;" value="g(2/3)" />
</form>
<span id="commSav6-42" class="commSav" >g(2/3)</span>
<div id="mathAns6-42" ></div>
</div>




<div class="verbatim"><br />
&nbsp;&nbsp;&nbsp;Compiling&nbsp;function&nbsp;g&nbsp;with&nbsp;type&nbsp;Fraction&nbsp;Integer&nbsp;-&gt;&nbsp;Fraction&nbsp;Integer&nbsp;<br />
</div>


<div class="math">
<table>
<tr><td>
<math xmlns="&mathml;" mathsize="big" display="block"><mstyle><mfrac><mn>5</mn><mn>3</mn></mfrac></mstyle></math>
</td></tr>
</table>
</div>




<div class="returnType">
Type: Fraction Integer
</div>



<p>Here <math xmlns="&mathml;" mathsize="big"><mstyle><mrow><mi>x</mi><mo>+</mo><mn>1</mn></mrow></mstyle></math> for <math xmlns="&mathml;" mathsize="big"><mstyle><mrow><mi>x</mi><mo>=</mo><mo>"</mo><mi>axiom</mi><mo>"</mo></mrow></mstyle></math> makes no sense.
</p>



<div id="spadComm6-43" class="spadComm" >
<form id="formComm6-43" action="javascript:makeRequest('6-43');" >
<input id="comm6-43" type="text" class="command" style="width: 7em;" value='g("axiom")' />
</form>
<span id="commSav6-43" class="commSav" >g("axiom")</span>
<div id="mathAns6-43" ></div>
</div>




<div class="verbatim"><br />
&nbsp;&nbsp;&nbsp;There&nbsp;are&nbsp;11&nbsp;exposed&nbsp;and&nbsp;5&nbsp;unexposed&nbsp;library&nbsp;operations&nbsp;named&nbsp;+&nbsp;<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;having&nbsp;2&nbsp;argument(s)&nbsp;but&nbsp;none&nbsp;was&nbsp;determined&nbsp;to&nbsp;be&nbsp;applicable.&nbsp;<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Use&nbsp;HyperDoc&nbsp;Browse,&nbsp;or&nbsp;issue<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;)display&nbsp;op&nbsp;+<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;to&nbsp;learn&nbsp;more&nbsp;about&nbsp;the&nbsp;available&nbsp;operations.&nbsp;Perhaps&nbsp;<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;package-calling&nbsp;the&nbsp;operation&nbsp;or&nbsp;using&nbsp;coercions&nbsp;on&nbsp;the&nbsp;arguments<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;will&nbsp;allow&nbsp;you&nbsp;to&nbsp;apply&nbsp;the&nbsp;operation.<br />
&nbsp;&nbsp;&nbsp;Cannot&nbsp;find&nbsp;a&nbsp;definition&nbsp;or&nbsp;applicable&nbsp;library&nbsp;operation&nbsp;named&nbsp;+&nbsp;<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;with&nbsp;argument&nbsp;type(s)&nbsp;<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;String<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;PositiveInteger<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Perhaps&nbsp;you&nbsp;should&nbsp;use&nbsp;"@"&nbsp;to&nbsp;indicate&nbsp;the&nbsp;required&nbsp;return&nbsp;type,&nbsp;<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;or&nbsp;"$"&nbsp;to&nbsp;specify&nbsp;which&nbsp;version&nbsp;of&nbsp;the&nbsp;function&nbsp;you&nbsp;need.<br />
&nbsp;&nbsp;&nbsp;AXIOM&nbsp;will&nbsp;attempt&nbsp;to&nbsp;step&nbsp;through&nbsp;and&nbsp;interpret&nbsp;the&nbsp;code.<br />
&nbsp;&nbsp;&nbsp;There&nbsp;are&nbsp;11&nbsp;exposed&nbsp;and&nbsp;5&nbsp;unexposed&nbsp;library&nbsp;operations&nbsp;named&nbsp;+&nbsp;<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;having&nbsp;2&nbsp;argument(s)&nbsp;but&nbsp;none&nbsp;was&nbsp;determined&nbsp;to&nbsp;be&nbsp;applicable.&nbsp;<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Use&nbsp;HyperDoc&nbsp;Browse,&nbsp;or&nbsp;issue<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;)display&nbsp;op&nbsp;+<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;to&nbsp;learn&nbsp;more&nbsp;about&nbsp;the&nbsp;available&nbsp;operations.&nbsp;Perhaps&nbsp;<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;package-calling&nbsp;the&nbsp;operation&nbsp;or&nbsp;using&nbsp;coercions&nbsp;on&nbsp;the&nbsp;arguments<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;will&nbsp;allow&nbsp;you&nbsp;to&nbsp;apply&nbsp;the&nbsp;operation.<br />
&nbsp;<br />
&nbsp;&nbsp;&nbsp;Cannot&nbsp;find&nbsp;a&nbsp;definition&nbsp;or&nbsp;applicable&nbsp;library&nbsp;operation&nbsp;named&nbsp;+&nbsp;<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;with&nbsp;argument&nbsp;type(s)&nbsp;<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;String<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;PositiveInteger<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Perhaps&nbsp;you&nbsp;should&nbsp;use&nbsp;"@"&nbsp;to&nbsp;indicate&nbsp;the&nbsp;required&nbsp;return&nbsp;type,&nbsp;<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;or&nbsp;"$"&nbsp;to&nbsp;specify&nbsp;which&nbsp;version&nbsp;of&nbsp;the&nbsp;function&nbsp;you&nbsp;need.<br />
</div>



<p>As you will see in Chapter <a href="section-12.0.xhtml#ugCategories" class="ref" >ugCategories</a> FriCAS has a formal idea of categories for
what <span class="italic">makes sense.</span>
</p>




</div><a href="book-contents.xhtml" style="margin-right: 10px;">Book Contents</a>
<a href="section-6.5.xhtml" style="margin-right: 10px;">Previous Section 6.5 One-Line Functions</a><a href="section-6.7.xhtml" style="margin-right: 10px;">Next Section 6.7 Functions vs. Operations</a>
<a href="book-index.xhtml">Book Index</a></body>
</html>