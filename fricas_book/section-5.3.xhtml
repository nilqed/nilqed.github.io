<?xml version="1.0" encoding="UTF-8" ?>

<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.1 plus MathML 2.0//EN"
"http://www.w3.org/TR/MathML2/dtd/xhtml-math11-f.dtd" [
<!ENTITY mathml "http://www.w3.org/1998/Math/MathML">
]>

<html xmlns="http://www.w3.org/1999/xhtml"
      xmlns:xlink="http://www.w3.org/1999/xlink" >


  <head>
    <title>Section5.3</title>
    <link rel="stylesheet" type="text/css" href="graphicstyle.css" />
    <script type="text/javascript" src="bookax1.js" />
  </head>

  <body>
<a href="book-contents.xhtml" style="margin-right: 10px;">Book Contents</a><a href="section-5.2.xhtml" style="margin-right: 10px;">Previous Section 5.2 Blocks</a><a href="section-5.4.xhtml" style="margin-right: 10px;">Next Section 5.4 Loops</a>
<a href="book-index.xhtml">Book Index</a><div class="section"  id="sec-5.3">
<h2 class="sectiontitle">5.3  if-then-else</h2>


<a name="ugLangIf" class="label"/>


<p>Like many other programming languages, FriCAS uses the three keywords
<span class="index">if</span><a name="chapter-5-14"/> <span class="teletype">if</span>, <span class="teletype">then</span> <span class="index">then</span><a name="chapter-5-15"/> and <span class="teletype">else</span>
<span class="index">else</span><a name="chapter-5-16"/> to form <span class="index">conditional</span><a name="chapter-5-17"/> conditional expressions.  The
<span class="teletype">else</span> part of the conditional is optional.  The expression
between the <span class="teletype">if</span> and <span class="teletype">then</span> keywords is a <span class="italic">predicate</span>: an
expression that evaluates to or is convertible to either <span class="teletype">true</span> or
<span class="teletype">false</span>, that is, a <span class="teletype">Boolean</span>.  <span class="index">Boolean</span><a name="chapter-5-18"/>
</p>




<div class="boxed2">


<div class="boxed">



<p>The syntax for conditional expressions is
</p>



<div class="center" style="text-align: center;">


<p><span class="teletype">if&nbsp;</span><span class="italic">predicate</span> 
<span class="teletype">then&nbsp;</span> <math xmlns="&mathml;" mathsize="big"><mstyle><mrow><msub><mrow><mtext mathvariant='sans-serif-italic'>expression</mtext></mrow><mn>1</mn></msub></mrow></mstyle></math> 
<span class="teletype">else&nbsp;</span> <math xmlns="&mathml;" mathsize="big"><mstyle><mrow><msub><mrow><mtext mathvariant='sans-serif-italic'>expression</mtext></mrow><mn>2</mn></msub></mrow></mstyle></math>
</p>



</div>


<p>where the <span class="teletype">else</span>  <math xmlns="&mathml;" mathsize="big"><mstyle><mrow><msub><mrow><mtext mathvariant='sans-serif-italic'>expression</mtext></mrow><mn>2</mn></msub></mrow></mstyle></math> part is optional.  The
value returned from a conditional expression is 
 <math xmlns="&mathml;" mathsize="big"><mstyle><mrow><msub><mrow><mtext mathvariant='sans-serif-italic'>expression</mtext></mrow><mn>1</mn></msub></mrow></mstyle></math> if the predicate evaluates to <span class="teletype">true</span> and 
 <math xmlns="&mathml;" mathsize="big"><mstyle><mrow><msub><mrow><mtext mathvariant='sans-serif-italic'>expression</mtext></mrow><mn>2</mn></msub></mrow></mstyle></math> otherwise.  If no <span class="teletype">else</span> clause is given, 
the value is always the unique value of <span class="teletype">Void</span>.<br/>
</p>



</div>
</div>



<p>An <span class="teletype">if-then-else</span> expression always returns a value.  If the 
<span class="teletype">else</span> clause is missing then the entire expression returns the unique
value of <span class="teletype">Void</span>.  If both clauses are present, the type of the
value returned by <span class="teletype">if</span> is obtained by resolving the types of the
values of the two clauses.  See <a href="section-2.10.xhtml#ugTypesResolve" class="ref" >ugTypesResolve</a>  for more information.
</p>


<p>The predicate must evaluate to, or be convertible to, an object of
type <span class="teletype">Boolean</span>: <span class="teletype">true</span> or <span class="teletype">false</span>.  By default, the equal
sign <span class="spadopFrom" title="Equation">=</span> creates <span class="index">equation</span><a name="chapter-5-19"/> an equation.
</p>


<p>This is an equation.  <span class="index">Equation</span><a name="chapter-5-20"/> In particular, it is an object
of type <span class="teletype">Equation Polynomial Integer</span>.
</p>




<div id="spadComm5-20" class="spadComm" >
<form id="formComm5-20" action="javascript:makeRequest('5-20');" >
<input id="comm5-20" type="text" class="command" style="width: 6em;" value="x + 1 = y" />
</form>
<span id="commSav5-20" class="commSav" >x + 1 = y</span>
<div id="mathAns5-20" ></div>
</div>


<div class="math">
<table>
<tr><td>
<math xmlns="&mathml;" mathsize="big" display="block"><mstyle><mrow><mrow><mi>x</mi><mo>+</mo><mn>1</mn></mrow><mo>=</mo><mi>y</mi></mrow></mstyle></math>
</td></tr>
</table>
</div>




<div class="returnType">
Type: Equation Polynomial Integer
</div>



<p>However, for predicates in <span class="teletype">if</span> expressions, FriCAS <span class="index">equality
testing</span><a name="chapter-5-21"/> places a default target type of <span class="teletype">Boolean</span> on the
predicate and equality testing is performed.  <span class="index">Boolean</span><a name="chapter-5-22"/> Thus you
need not qualify the <span class="italic"><span class="teletype">=</span></span> in any way.  In other contexts you
may need to tell FriCAS that you want to test for equality rather than
create an equation.  In those cases, use ``<span class="teletype">@</span>'' and a target type
of <span class="teletype">Boolean</span>.  See section <a href="section-2.9.xhtml#ugTypesPkgCall" class="ref" >ugTypesPkgCall</a>  for more information.
</p>


<p>The compound symbol meaning <span class="italic">not equal</span> in FriCAS is
<span class="index">inequality testing</span><a name="chapter-5-23"/> ``<math xmlns="&mathml;" mathsize="big"><mstyle><mrow><mo>&#x223c;</mo><mo>=</mo></mrow></mstyle></math>''.  <span class="index">_notequal@ <math xmlns="&mathml;" mathsize="big"><mstyle><mrow><mo>&#x223c;</mo><mo>=</mo></mrow></mstyle></math></span><a name="chapter-5-24"/> 
This can be used directly without a package call or a target
specification.  The expression  <math xmlns="&mathml;" mathsize="big"><mstyle><mrow><mi>a</mi><mo>&#x223c;</mo><mo>=</mo><mi>b</mi></mrow></mstyle></math> is directly translated
into <span class="teletype">not</span> <math xmlns="&mathml;" mathsize="big"><mstyle><mrow><mo>(</mo><mi>a</mi><mo>=</mo><mi>b</mi><mo>)</mo></mrow></mstyle></math>.
</p>


<p>Many other functions have return values of type <span class="teletype">Boolean</span>.  These
include <span class="italic"><span class="teletype">&lt;</span></span>, <span class="italic"><span class="teletype">&lt;=</span></span>, <span class="italic"><span class="teletype">></span></span>, <span class="italic"><span class="teletype">>=</span></span>, 
``<span class="teletype"><math xmlns="&mathml;" mathsize="big"><mstyle><mrow><mo>&#x223c;</mo><mo>=</mo></mrow></mstyle></math></span>'' and ``<span style="font-weight: bold;">member?</span>''.  By convention,
operations with names ending in <span class="italic"><span class="teletype">?</span></span>  return <span class="teletype">Boolean</span> values.
</p>


<p>The usual rules for piles are suspended for conditional expressions.
In <span style="font-weight: bold;">.input</span> files, the <span class="teletype">then</span> and <span class="teletype">else</span> keywords can begin in the
same column as the corresponding <span class="teletype">if</span> but may also appear to the
right.  Each of the following styles of writing <span class="teletype">if-then-else</span>
expressions is acceptable:
</p>



<div class="verbatim"><br />
if&nbsp;i&gt;0&nbsp;then&nbsp;output("positive")&nbsp;else&nbsp;output("nonpositive")<br />
<br />
if&nbsp;i&nbsp;&gt;&nbsp;0&nbsp;then&nbsp;output("positive")<br />
&nbsp;&nbsp;else&nbsp;output("nonpositive")<br />
<br />
if&nbsp;i&nbsp;&gt;&nbsp;0&nbsp;then&nbsp;output("positive")<br />
else&nbsp;output("nonpositive")<br />
<br />
if&nbsp;i&nbsp;&gt;&nbsp;0<br />
then&nbsp;output("positive")<br />
else&nbsp;output("nonpositive")<br />
<br />
if&nbsp;i&nbsp;&gt;&nbsp;0<br />
&nbsp;&nbsp;then&nbsp;output("positive")<br />
&nbsp;&nbsp;else&nbsp;output("nonpositive")<br />
</div>



<p>A block can follow the <span class="teletype">then</span> or <span class="teletype">else</span> keywords.  In the following
two assignments to <span class="teletype">a</span>, the <span class="teletype">then</span> and <span class="teletype">else</span> clauses each are
followed by two-line piles.  The value returned in each is the value
of the second line.
</p>



<div class="verbatim"><br />
a&nbsp;:=<br />
&nbsp;&nbsp;if&nbsp;i&nbsp;&gt;&nbsp;0&nbsp;then<br />
&nbsp;&nbsp;&nbsp;&nbsp;j&nbsp;:=&nbsp;sin(i&nbsp;*&nbsp;pi())<br />
&nbsp;&nbsp;&nbsp;&nbsp;exp(j&nbsp;+&nbsp;1/j)<br />
&nbsp;&nbsp;else<br />
&nbsp;&nbsp;&nbsp;&nbsp;j&nbsp;:=&nbsp;cos(i&nbsp;*&nbsp;0.5&nbsp;*&nbsp;pi())<br />
&nbsp;&nbsp;&nbsp;&nbsp;log(abs(j)^5&nbsp;+&nbsp;1)<br />
<br />
a&nbsp;:=<br />
&nbsp;&nbsp;if&nbsp;i&nbsp;&gt;&nbsp;0<br />
&nbsp;&nbsp;&nbsp;&nbsp;then<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;j&nbsp;:=&nbsp;sin(i&nbsp;*&nbsp;pi())<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;exp(j&nbsp;+&nbsp;1/j)<br />
&nbsp;&nbsp;&nbsp;&nbsp;else<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;j&nbsp;:=&nbsp;cos(i&nbsp;*&nbsp;0.5&nbsp;*&nbsp;pi())<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;log(abs(j)^5&nbsp;+&nbsp;1)<br />
</div>



<p>These are both equivalent to the following:
</p>



<div class="verbatim"><br />
a&nbsp;:=<br />
&nbsp;&nbsp;if&nbsp;i&nbsp;&gt;&nbsp;0&nbsp;then&nbsp;(j&nbsp;:=&nbsp;sin(i&nbsp;*&nbsp;pi());&nbsp;exp(j&nbsp;+&nbsp;1/j))<br />
&nbsp;&nbsp;else&nbsp;(j&nbsp;:=&nbsp;cos(i&nbsp;*&nbsp;0.5&nbsp;*&nbsp;pi());&nbsp;log(abs(j)^5&nbsp;+&nbsp;1))<br />
</div>





</div><a href="book-contents.xhtml" style="margin-right: 10px;">Book Contents</a>
<a href="section-5.2.xhtml" style="margin-right: 10px;">Previous Section 5.2 Blocks</a><a href="section-5.4.xhtml" style="margin-right: 10px;">Next Section 5.4 Loops</a>
<a href="book-index.xhtml">Book Index</a></body>
</html>