<?xml version="1.0" encoding="UTF-8" ?>

<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.1 plus MathML 2.0//EN"
"http://www.w3.org/TR/MathML2/dtd/xhtml-math11-f.dtd" [
<!ENTITY mathml "http://www.w3.org/1998/Math/MathML">
]>

<html xmlns="http://www.w3.org/1999/xhtml"
      xmlns:xlink="http://www.w3.org/1999/xlink" >


  <head>
    <title>Section9.63</title>
    <link rel="stylesheet" type="text/css" href="graphicstyle.css" />
    <script type="text/javascript" src="bookax1.js" />
  </head>

  <body>
<a href="book-contents.xhtml" style="margin-right: 10px;">Book Contents</a><a href="section-9.62.xhtml" style="margin-right: 10px;">Previous Section 9.62 Permanent</a><a href="section-9.64.xhtml" style="margin-right: 10px;">Next Section 9.64 Quaternion</a>
<a href="book-index.xhtml">Book Index</a><div class="section"  id="sec-9.63">
<h2 class="sectiontitle">9.63  Polynomial</h2>


<a name="PolynomialXmpPage" class="label"/>


<p>The domain constructor <span class="teletype">Polynomial</span> (abbreviation: <span class="teletype">POLY</span>)
provides polynomials with an arbitrary number of unspecified
variables.
</p>


<p>It is used to create the default polynomial domains in FriCAS.
Here the coefficients are integers.
</p>




<div id="spadComm9-74" class="spadComm" >
<form id="formComm9-74" action="javascript:makeRequest('9-74');" >
<input id="comm9-74" type="text" class="command" style="width: 4em;" value="x + 1" />
</form>
<span id="commSav9-74" class="commSav" >x + 1</span>
<div id="mathAns9-74" ></div>
</div>


<div class="math">
<table>
<tr><td>
<math xmlns="&mathml;" mathsize="big" display="block"><mstyle><mrow><mi>x</mi><mo>+</mo><mn>1</mn></mrow></mstyle></math>
</td></tr>
</table>
</div>




<div class="returnType">
Type: Polynomial Integer
</div>



<p>Here the coefficients have type <span class="teletype">Float</span>.
</p>




<div id="spadComm9-75" class="spadComm" >
<form id="formComm9-75" action="javascript:makeRequest('9-75');" >
<input id="comm9-75" type="text" class="command" style="width: 5em;" value="z - 2.3" />
</form>
<span id="commSav9-75" class="commSav" >z - 2.3</span>
<div id="mathAns9-75" ></div>
</div>


<div class="math">
<table>
<tr><td>
<math xmlns="&mathml;" mathsize="big" display="block"><mstyle><mrow><mi>z</mi><mo>-</mo><mrow><mn>2</mn><mo>.</mo><mn>3</mn></mrow></mrow></mstyle></math>
</td></tr>
</table>
</div>




<div class="returnType">
Type: Polynomial Float
</div>



<p>And here we have a polynomial in two variables with coefficients which
have type <span class="teletype">Fraction Integer</span>.
</p>




<div id="spadComm9-76" class="spadComm" >
<form id="formComm9-76" action="javascript:makeRequest('9-76');" >
<input id="comm9-76" type="text" class="command" style="width: 10em;" value="y^2 - z + 3/4" />
</form>
<span id="commSav9-76" class="commSav" >y^2 - z + 3/4</span>
<div id="mathAns9-76" ></div>
</div>


<div class="math">
<table>
<tr><td>
<math xmlns="&mathml;" mathsize="big" display="block"><mstyle><mrow><mo>-</mo><mi>z</mi><mo>+</mo><mrow><msup><mi>y</mi><mn>2</mn></msup></mrow><mo>+</mo><mfrac><mn>3</mn><mn>4</mn></mfrac></mrow></mstyle></math>
</td></tr>
</table>
</div>




<div class="returnType">
Type: Polynomial Fraction Integer
</div>



<p>The representation of objects of domains created by <span class="teletype">Polynomial</span>
is that of recursive univariate polynomials.<span class="footnote">The term
<span class="teletype">univariate</span> means <span class="italic">one variable.</span> <span class="teletype">multivariate</span> means
<span class="italic">possibly more than one variable.</span></span>
</p>


<p>This recursive structure is sometimes obvious from the display of
a polynomial.
</p>




<div id="spadComm9-77" class="spadComm" >
<form id="formComm9-77" action="javascript:makeRequest('9-77');" >
<input id="comm9-77" type="text" class="command" style="width: 11em;" value="y ^2 + x*y + y " />
</form>
<span id="commSav9-77" class="commSav" >y ^2 + x*y + y </span>
<div id="mathAns9-77" ></div>
</div>


<div class="math">
<table>
<tr><td>
<math xmlns="&mathml;" mathsize="big" display="block"><mstyle><mrow><mrow><msup><mi>y</mi><mn>2</mn></msup></mrow><mo>+</mo><mrow><mrow><mo>(</mo><mi>x</mi><mo>+</mo><mn>1</mn><mo>)</mo></mrow><mspace width="0.5 em" /><mi>y</mi></mrow></mrow></mstyle></math>
</td></tr>
</table>
</div>




<div class="returnType">
Type: Polynomial Integer
</div>



<p>In this example, you see that the polynomial is stored as a polynomial
in <span class="teletype">y</span> with coefficients that are polynomials in <span class="teletype">x</span> with
integer coefficients.  In fact, you really don't need to worry about
the representation unless you are working on an advanced application
where it is critical.  The polynomial types created from <span class="teletype">DistributedMultivariatePolynomial</span> and 
<span class="teletype">NewDistributedMultivariatePolynomial</span> (discussed in
<a href="section-9.16.xhtml#DistributedMultivariatePolynomialXmpPage" class="ref" >DistributedMultivariatePolynomialXmpPage</a> ) are stored and
displayed in a non-recursive manner.
</p>


<p>You see a <span class="italic">flat</span> display of the above polynomial by converting to
one of those types.
</p>




<div id="spadComm9-78" class="spadComm" >
<form id="formComm9-78" action="javascript:makeRequest('9-78');" >
<input id="comm9-78" type="text" class="command" style="width: 14em;" value="% :: DMP([y,x],INT) " />
</form>
<span id="commSav9-78" class="commSav" >% :: DMP([y,x],INT) </span>
<div id="mathAns9-78" ></div>
</div>


<div class="math">
<table>
<tr><td>
<math xmlns="&mathml;" mathsize="big" display="block"><mstyle><mrow><mrow><msup><mi>y</mi><mn>2</mn></msup></mrow><mo>+</mo><mrow><mi>y</mi><mspace width="0.5 em" /><mi>x</mi></mrow><mo>+</mo><mi>y</mi></mrow></mstyle></math>
</td></tr>
</table>
</div>




<div class="returnType">
Type: DistributedMultivariatePolynomial([y,x],Integer)
</div>



<p>We will demonstrate many of the polynomial facilities by using two
polynomials with integer coefficients.
</p>


<p>By default, the interpreter expands polynomial expressions, even if they
are written in a factored format.
</p>




<div id="spadComm9-79" class="spadComm" >
<form id="formComm9-79" action="javascript:makeRequest('9-79');" >
<input id="comm9-79" type="text" class="command" style="width: 15em;" value="p := (y-1)^2 * x * z " />
</form>
<span id="commSav9-79" class="commSav" >p := (y-1)^2 * x * z </span>
<div id="mathAns9-79" ></div>
</div>


<div class="math">
<table>
<tr><td>
<math xmlns="&mathml;" mathsize="big" display="block"><mstyle><mrow><mrow><mo>(</mo><mrow><mi>x</mi><mspace width="0.5 em" /><mrow><msup><mi>y</mi><mn>2</mn></msup></mrow></mrow><mo>-</mo><mrow><mn>2</mn><mspace width="0.5 em" /><mi>x</mi><mspace width="0.5 em" /><mi>y</mi></mrow><mo>+</mo><mi>x</mi><mo>)</mo></mrow><mspace width="0.5 em" /><mi>z</mi></mrow></mstyle></math>
</td></tr>
</table>
</div>




<div class="returnType">
Type: Polynomial Integer
</div>



<p>See <a href="section-9.22.xhtml#FactoredXmpPage" class="ref" >FactoredXmpPage</a>  
to see how to create objects in factored form directly.
</p>




<div id="spadComm9-80" class="spadComm" >
<form id="formComm9-80" action="javascript:makeRequest('9-80');" >
<input id="comm9-80" type="text" class="command" style="width: 16em;" value="q := (y-1) * x * (z+5) " />
</form>
<span id="commSav9-80" class="commSav" >q := (y-1) * x * (z+5) </span>
<div id="mathAns9-80" ></div>
</div>


<div class="math">
<table>
<tr><td>
<math xmlns="&mathml;" mathsize="big" display="block"><mstyle><mrow><mrow><mrow><mo>(</mo><mrow><mi>x</mi><mspace width="0.5 em" /><mi>y</mi></mrow><mo>-</mo><mi>x</mi><mo>)</mo></mrow><mspace width="0.5 em" /><mi>z</mi></mrow><mo>+</mo><mrow><mn>5</mn><mspace width="0.5 em" /><mi>x</mi><mspace width="0.5 em" /><mi>y</mi></mrow><mo>-</mo><mrow><mn>5</mn><mspace width="0.5 em" /><mi>x</mi></mrow></mrow></mstyle></math>
</td></tr>
</table>
</div>




<div class="returnType">
Type: Polynomial Integer
</div>



<p>The fully factored form can be recovered by using
<span class="spadfunFrom" >factor</span><span class="index">factor</span><a name="chapter-9-52"/><span class="index">Polynomial</span><a name="chapter-9-53"/>.
</p>




<div id="spadComm9-81" class="spadComm" >
<form id="formComm9-81" action="javascript:makeRequest('9-81');" >
<input id="comm9-81" type="text" class="command" style="width: 7em;" value="factor(q) " />
</form>
<span id="commSav9-81" class="commSav" >factor(q) </span>
<div id="mathAns9-81" ></div>
</div>


<div class="math">
<table>
<tr><td>
<math xmlns="&mathml;" mathsize="big" display="block"><mstyle><mrow><mi>x</mi><mspace width="0.5 em" /><mrow><mo>(</mo><mi>y</mi><mo>-</mo><mn>1</mn><mo>)</mo></mrow><mspace width="0.5 em" /><mrow><mo>(</mo><mi>z</mi><mo>+</mo><mn>5</mn><mo>)</mo></mrow></mrow></mstyle></math>
</td></tr>
</table>
</div>




<div class="returnType">
Type: Factored Polynomial Integer
</div>



<p>This is the same name used for the operation to factor integers.  Such
reuse of names is called <span class="index">overloading</span><a name="chapter-9-54"/> and makes it much easier
to think of solving problems in general ways.  FriCAS facilities for
factoring polynomials created with <span class="teletype">Polynomial</span> are currently
restricted to the integer and rational number coefficient cases.
There are more complete facilities for factoring univariate
polynomials: see <a href="ugProblemFactorPage" class="ref" >ugProblemFactorPage</a>  in Section <a href="ugProblemFactorNumber" class="ref" >ugProblemFactorNumber</a> 
.
</p>


<p>The standard arithmetic operations are available for polynomials.
</p>




<div id="spadComm9-82" class="spadComm" >
<form id="formComm9-82" action="javascript:makeRequest('9-82');" >
<input id="comm9-82" type="text" class="command" style="width: 6em;" value="p - q^2" />
</form>
<span id="commSav9-82" class="commSav" >p - q^2</span>
<div id="mathAns9-82" ></div>
</div>


<div class="math">
<table>
<tr><td>
<math xmlns="&mathml;" mathsize="big" display="block"><mstyle><mrow><mtable><mtr><mtd><mrow><mrow><mo>(</mo><mo>-</mo><mrow><mrow><msup><mi>x</mi><mn>2</mn></msup></mrow><mspace width="0.5 em" /><mrow><msup><mi>y</mi><mn>2</mn></msup></mrow></mrow><mo>+</mo><mrow><mn>2</mn><mspace width="0.5 em" /><mrow><msup><mi>x</mi><mn>2</mn></msup></mrow><mspace width="0.5 em" /><mi>y</mi></mrow><mo>-</mo><mrow><msup><mi>x</mi><mn>2</mn></msup></mrow><mo>)</mo></mrow><mspace width="0.5 em" /><mrow><msup><mi>z</mi><mn>2</mn></msup></mrow></mrow><mo>+</mo></mtd></mtr><mtr><mtd></mtd></mtr><mtr><mtd><mrow><mrow><mo>(</mo><mrow><mrow><mo>(</mo><mo>-</mo><mrow><mn>10</mn><mspace width="0.5 em" /><mrow><msup><mi>x</mi><mn>2</mn></msup></mrow></mrow><mo>+</mo><mi>x</mi><mo>)</mo></mrow><mspace width="0.5 em" /><mrow><msup><mi>y</mi><mn>2</mn></msup></mrow></mrow><mo>+</mo><mrow><mrow><mo>(</mo><mrow><mn>20</mn><mspace width="0.5 em" /><mrow><msup><mi>x</mi><mn>2</mn></msup></mrow></mrow><mo>-</mo><mrow><mn>2</mn><mspace width="0.5 em" /><mi>x</mi></mrow><mo>)</mo></mrow><mspace width="0.5 em" /><mi>y</mi></mrow><mo>-</mo><mrow><mn>10</mn><mspace width="0.5 em" /><mrow><msup><mi>x</mi><mn>2</mn></msup></mrow></mrow><mo>+</mo><mi>x</mi><mo>)</mo></mrow><mspace width="0.5 em" /><mi>z</mi></mrow><mo>-</mo></mtd></mtr><mtr><mtd></mtd></mtr><mtr><mtd><mrow><mn>25</mn><mspace width="0.5 em" /><mrow><msup><mi>x</mi><mn>2</mn></msup></mrow><mspace width="0.5 em" /><mrow><msup><mi>y</mi><mn>2</mn></msup></mrow></mrow><mo>+</mo><mrow><mn>50</mn><mspace width="0.5 em" /><mrow><msup><mi>x</mi><mn>2</mn></msup></mrow><mspace width="0.5 em" /><mi>y</mi></mrow><mo>-</mo><mrow><mn>25</mn><mspace width="0.5 em" /><mrow><msup><mi>x</mi><mn>2</mn></msup></mrow></mrow></mtd></mtr></mtable></mrow></mstyle></math>
</td></tr>
</table>
</div>




<div class="returnType">
Type: Polynomial Integer
</div>



<p>The operation <span class="spadfunFrom" >gcd</span><span class="index">gcd</span><a name="chapter-9-55"/><span class="index">Polynomial</span><a name="chapter-9-56"/> is used to compute the
greatest common divisor of two polynomials.
</p>




<div id="spadComm9-83" class="spadComm" >
<form id="formComm9-83" action="javascript:makeRequest('9-83');" >
<input id="comm9-83" type="text" class="command" style="width: 6em;" value="gcd(p,q) " />
</form>
<span id="commSav9-83" class="commSav" >gcd(p,q) </span>
<div id="mathAns9-83" ></div>
</div>


<div class="math">
<table>
<tr><td>
<math xmlns="&mathml;" mathsize="big" display="block"><mstyle><mrow><mrow><mi>x</mi><mspace width="0.5 em" /><mi>y</mi></mrow><mo>-</mo><mi>x</mi></mrow></mstyle></math>
</td></tr>
</table>
</div>




<div class="returnType">
Type: Polynomial Integer
</div>



<p>In the case of <span class="teletype">p</span> and <span class="teletype">q</span>, the gcd is obvious from their
definitions.  We factor the gcd to show this relationship better.
</p>




<div id="spadComm9-84" class="spadComm" >
<form id="formComm9-84" action="javascript:makeRequest('9-84');" >
<input id="comm9-84" type="text" class="command" style="width: 7em;" value="factor % " />
</form>
<span id="commSav9-84" class="commSav" >factor % </span>
<div id="mathAns9-84" ></div>
</div>


<div class="math">
<table>
<tr><td>
<math xmlns="&mathml;" mathsize="big" display="block"><mstyle><mrow><mi>x</mi><mspace width="0.5 em" /><mrow><mo>(</mo><mi>y</mi><mo>-</mo><mn>1</mn><mo>)</mo></mrow></mrow></mstyle></math>
</td></tr>
</table>
</div>




<div class="returnType">
Type: Factored Polynomial Integer
</div>



<p>The least common multiple is computed by using <span class="spadfunFrom" >lcm</span><span class="index">lcm</span><a name="chapter-9-57"/><span class="index">Polynomial</span><a name="chapter-9-58"/>.
</p>




<div id="spadComm9-85" class="spadComm" >
<form id="formComm9-85" action="javascript:makeRequest('9-85');" >
<input id="comm9-85" type="text" class="command" style="width: 6em;" value="lcm(p,q) " />
</form>
<span id="commSav9-85" class="commSav" >lcm(p,q) </span>
<div id="mathAns9-85" ></div>
</div>


<div class="math">
<table>
<tr><td>
<math xmlns="&mathml;" mathsize="big" display="block"><mstyle><mrow><mrow><mrow><mo>(</mo><mrow><mi>x</mi><mspace width="0.5 em" /><mrow><msup><mi>y</mi><mn>2</mn></msup></mrow></mrow><mo>-</mo><mrow><mn>2</mn><mspace width="0.5 em" /><mi>x</mi><mspace width="0.5 em" /><mi>y</mi></mrow><mo>+</mo><mi>x</mi><mo>)</mo></mrow><mspace width="0.5 em" /><mrow><msup><mi>z</mi><mn>2</mn></msup></mrow></mrow><mo>+</mo><mrow><mrow><mo>(</mo><mrow><mn>5</mn><mspace width="0.5 em" /><mi>x</mi><mspace width="0.5 em" /><mrow><msup><mi>y</mi><mn>2</mn></msup></mrow></mrow><mo>-</mo><mrow><mn>10</mn><mspace width="0.5 em" /><mi>x</mi><mspace width="0.5 em" /><mi>y</mi></mrow><mo>+</mo><mrow><mn>5</mn><mspace width="0.5 em" /><mi>x</mi></mrow><mo>)</mo></mrow><mspace width="0.5 em" /><mi>z</mi></mrow></mrow></mstyle></math>
</td></tr>
</table>
</div>




<div class="returnType">
Type: Polynomial Integer
</div>



<p>Use <span class="spadfunFrom" >content</span><span class="index">content</span><a name="chapter-9-59"/><span class="index">Polynomial</span><a name="chapter-9-60"/> to compute the greatest common
divisor of the coefficients of the polynomial.
</p>




<div id="spadComm9-86" class="spadComm" >
<form id="formComm9-86" action="javascript:makeRequest('9-86');" >
<input id="comm9-86" type="text" class="command" style="width: 7em;" value="content p " />
</form>
<span id="commSav9-86" class="commSav" >content p </span>
<div id="mathAns9-86" ></div>
</div>


<div class="math">
<table>
<tr><td>
<math xmlns="&mathml;" mathsize="big" display="block"><mstyle><mn>1</mn></mstyle></math>
</td></tr>
</table>
</div>




<div class="returnType">
Type: PositiveInteger
</div>



<p>Many of the operations on polynomials require you to specify a
variable.  For example, <span class="spadfunFrom" >resultant</span><span class="index">resultant</span><a name="chapter-9-61"/><span class="index">Polynomial</span><a name="chapter-9-62"/> requires
you to give the variable in which the polynomials should be expressed.
</p>


<p>This computes the resultant of the values of <span class="teletype">p</span> and <span class="teletype">q</span>,
considering them as polynomials in the variable <span class="teletype">z</span>.  They do not
share a root when thought of as polynomials in <span class="teletype">z</span>.
</p>




<div id="spadComm9-87" class="spadComm" >
<form id="formComm9-87" action="javascript:makeRequest('9-87');" >
<input id="comm9-87" type="text" class="command" style="width: 12em;" value="resultant(p,q,z) " />
</form>
<span id="commSav9-87" class="commSav" >resultant(p,q,z) </span>
<div id="mathAns9-87" ></div>
</div>


<div class="math">
<table>
<tr><td>
<math xmlns="&mathml;" mathsize="big" display="block"><mstyle><mrow><mrow><mn>5</mn><mspace width="0.5 em" /><mrow><msup><mi>x</mi><mn>2</mn></msup></mrow><mspace width="0.5 em" /><mrow><msup><mi>y</mi><mn>3</mn></msup></mrow></mrow><mo>-</mo><mrow><mn>15</mn><mspace width="0.5 em" /><mrow><msup><mi>x</mi><mn>2</mn></msup></mrow><mspace width="0.5 em" /><mrow><msup><mi>y</mi><mn>2</mn></msup></mrow></mrow><mo>+</mo><mrow><mn>15</mn><mspace width="0.5 em" /><mrow><msup><mi>x</mi><mn>2</mn></msup></mrow><mspace width="0.5 em" /><mi>y</mi></mrow><mo>-</mo><mrow><mn>5</mn><mspace width="0.5 em" /><mrow><msup><mi>x</mi><mn>2</mn></msup></mrow></mrow></mrow></mstyle></math>
</td></tr>
</table>
</div>




<div class="returnType">
Type: Polynomial Integer
</div>



<p>This value is <span class="teletype">0</span> because as polynomials in <span class="teletype">x</span> the polynomials
have a common root.
</p>




<div id="spadComm9-88" class="spadComm" >
<form id="formComm9-88" action="javascript:makeRequest('9-88');" >
<input id="comm9-88" type="text" class="command" style="width: 12em;" value="resultant(p,q,x) " />
</form>
<span id="commSav9-88" class="commSav" >resultant(p,q,x) </span>
<div id="mathAns9-88" ></div>
</div>


<div class="math">
<table>
<tr><td>
<math xmlns="&mathml;" mathsize="big" display="block"><mstyle><mn>0</mn></mstyle></math>
</td></tr>
</table>
</div>




<div class="returnType">
Type: Polynomial Integer
</div>



<p>The data type used for the variables created by <span class="teletype">Polynomial</span> is
<span class="teletype">Symbol</span>.  As mentioned above, the representation used by <span class="teletype">Polynomial</span> is recursive and so there is a main variable for
nonconstant polynomials.
</p>


<p>The operation <span class="spadfunFrom" >mainVariable</span><span class="index">mainVariable</span><a name="chapter-9-63"/><span class="index">Polynomial</span><a name="chapter-9-64"/> returns this
variable.  The return type is actually a union of <span class="teletype">Symbol</span> and
<span class="teletype">"failed"</span>.
</p>




<div id="spadComm9-89" class="spadComm" >
<form id="formComm9-89" action="javascript:makeRequest('9-89');" >
<input id="comm9-89" type="text" class="command" style="width: 10em;" value="mainVariable p " />
</form>
<span id="commSav9-89" class="commSav" >mainVariable p </span>
<div id="mathAns9-89" ></div>
</div>


<div class="math">
<table>
<tr><td>
<math xmlns="&mathml;" mathsize="big" display="block"><mstyle><mi>z</mi></mstyle></math>
</td></tr>
</table>
</div>




<div class="returnType">
Type: Union(Symbol,...)
</div>



<p>The latter branch of the union is be used if the polynomial has no
variables, that is, is a constant.
</p>




<div id="spadComm9-90" class="spadComm" >
<form id="formComm9-90" action="javascript:makeRequest('9-90');" >
<input id="comm9-90" type="text" class="command" style="width: 18em;" value="mainVariable(1 :: POLY INT)" />
</form>
<span id="commSav9-90" class="commSav" >mainVariable(1 :: POLY INT)</span>
<div id="mathAns9-90" ></div>
</div>


<div class="math">
<table>
<tr><td>
<math xmlns="&mathml;" mathsize="big" display="block"><mstyle><mrow><mtext><mrow><mtext mathvariant='monospace'>"failed"</mtext></mrow></mtext></mrow></mstyle></math>
</td></tr>
</table>
</div>




<div class="returnType">
Type: Union("failed",...)
</div>



<p>You can also use the predicate <span class="spadfunFrom" >ground?</span><span class="index">ground?</span><a name="chapter-9-65"/><span class="index">Polynomial</span><a name="chapter-9-66"/> to test
whether a polynomial is in fact a member of its ground ring.
</p>




<div id="spadComm9-91" class="spadComm" >
<form id="formComm9-91" action="javascript:makeRequest('9-91');" >
<input id="comm9-91" type="text" class="command" style="width: 7em;" value="ground? p " />
</form>
<span id="commSav9-91" class="commSav" >ground? p </span>
<div id="mathAns9-91" ></div>
</div>


<div class="math">
<table>
<tr><td>
<math xmlns="&mathml;" mathsize="big" display="block"><mstyle><mrow><mtext mathvariant='monospace'>false</mtext></mrow></mstyle></math>
</td></tr>
</table>
</div>




<div class="returnType">
Type: Boolean
</div>





<div id="spadComm9-92" class="spadComm" >
<form id="formComm9-92" action="javascript:makeRequest('9-92');" >
<input id="comm9-92" type="text" class="command" style="width: 15em;" value="ground?(1 :: POLY INT)" />
</form>
<span id="commSav9-92" class="commSav" >ground?(1 :: POLY INT)</span>
<div id="mathAns9-92" ></div>
</div>


<div class="math">
<table>
<tr><td>
<math xmlns="&mathml;" mathsize="big" display="block"><mstyle><mrow><mtext mathvariant='monospace'>true</mtext></mrow></mstyle></math>
</td></tr>
</table>
</div>




<div class="returnType">
Type: Boolean
</div>



<p>The complete list of variables actually used in a particular
polynomial is returned by <span class="spadfunFrom" >variables</span><span class="index">variables</span><a name="chapter-9-67"/><span class="index">Polynomial</span><a name="chapter-9-68"/>.  For
constant polynomials, this list is empty.
</p>




<div id="spadComm9-93" class="spadComm" >
<form id="formComm9-93" action="javascript:makeRequest('9-93');" >
<input id="comm9-93" type="text" class="command" style="width: 8em;" value="variables p " />
</form>
<span id="commSav9-93" class="commSav" >variables p </span>
<div id="mathAns9-93" ></div>
</div>


<div class="math">
<table>
<tr><td>
<math xmlns="&mathml;" mathsize="big" display="block"><mstyle><mrow><mo>[</mo><mi>z</mi><mo>,</mo><mi>y</mi><mo>,</mo><mi>x</mi><mo>]</mo></mrow></mstyle></math>
</td></tr>
</table>
</div>




<div class="returnType">
Type: List Symbol
</div>



<p>The <span class="spadfunFrom" >degree</span><span class="index">degree</span><a name="chapter-9-69"/><span class="index">Polynomial</span><a name="chapter-9-70"/> operation returns the
degree of a polynomial in a specific variable.
</p>




<div id="spadComm9-94" class="spadComm" >
<form id="formComm9-94" action="javascript:makeRequest('9-94');" >
<input id="comm9-94" type="text" class="command" style="width: 8em;" value="degree(p,x) " />
</form>
<span id="commSav9-94" class="commSav" >degree(p,x) </span>
<div id="mathAns9-94" ></div>
</div>


<div class="math">
<table>
<tr><td>
<math xmlns="&mathml;" mathsize="big" display="block"><mstyle><mn>1</mn></mstyle></math>
</td></tr>
</table>
</div>




<div class="returnType">
Type: PositiveInteger
</div>





<div id="spadComm9-95" class="spadComm" >
<form id="formComm9-95" action="javascript:makeRequest('9-95');" >
<input id="comm9-95" type="text" class="command" style="width: 8em;" value="degree(p,y) " />
</form>
<span id="commSav9-95" class="commSav" >degree(p,y) </span>
<div id="mathAns9-95" ></div>
</div>


<div class="math">
<table>
<tr><td>
<math xmlns="&mathml;" mathsize="big" display="block"><mstyle><mn>2</mn></mstyle></math>
</td></tr>
</table>
</div>




<div class="returnType">
Type: PositiveInteger
</div>





<div id="spadComm9-96" class="spadComm" >
<form id="formComm9-96" action="javascript:makeRequest('9-96');" >
<input id="comm9-96" type="text" class="command" style="width: 8em;" value="degree(p,z) " />
</form>
<span id="commSav9-96" class="commSav" >degree(p,z) </span>
<div id="mathAns9-96" ></div>
</div>


<div class="math">
<table>
<tr><td>
<math xmlns="&mathml;" mathsize="big" display="block"><mstyle><mn>1</mn></mstyle></math>
</td></tr>
</table>
</div>




<div class="returnType">
Type: PositiveInteger
</div>



<p>If you give a list of variables for the second argument, a list
of the degrees in those variables is returned.
</p>




<div id="spadComm9-97" class="spadComm" >
<form id="formComm9-97" action="javascript:makeRequest('9-97');" >
<input id="comm9-97" type="text" class="command" style="width: 12em;" value="degree(p,[x,y,z]) " />
</form>
<span id="commSav9-97" class="commSav" >degree(p,[x,y,z]) </span>
<div id="mathAns9-97" ></div>
</div>


<div class="math">
<table>
<tr><td>
<math xmlns="&mathml;" mathsize="big" display="block"><mstyle><mrow><mo>[</mo><mn>1</mn><mo>,</mo><mn>2</mn><mo>,</mo><mn>1</mn><mo>]</mo></mrow></mstyle></math>
</td></tr>
</table>
</div>




<div class="returnType">
Type: List NonNegativeInteger
</div>



<p>The minimum degree of a variable in a polynomial is computed using
<span class="spadfunFrom" >minimumDegree</span><span class="index">minimumDegree</span><a name="chapter-9-71"/><span class="index">Polynomial</span><a name="chapter-9-72"/>.
</p>




<div id="spadComm9-98" class="spadComm" >
<form id="formComm9-98" action="javascript:makeRequest('9-98');" >
<input id="comm9-98" type="text" class="command" style="width: 13em;" value="minimumDegree(p,z) " />
</form>
<span id="commSav9-98" class="commSav" >minimumDegree(p,z) </span>
<div id="mathAns9-98" ></div>
</div>


<div class="math">
<table>
<tr><td>
<math xmlns="&mathml;" mathsize="big" display="block"><mstyle><mn>1</mn></mstyle></math>
</td></tr>
</table>
</div>




<div class="returnType">
Type: PositiveInteger
</div>



<p>The total degree of a polynomial is returned by
<span class="spadfunFrom" >totalDegree</span><span class="index">totalDegree</span><a name="chapter-9-73"/><span class="index">Polynomial</span><a name="chapter-9-74"/>.
</p>




<div id="spadComm9-99" class="spadComm" >
<form id="formComm9-99" action="javascript:makeRequest('9-99');" >
<input id="comm9-99" type="text" class="command" style="width: 10em;" value="totalDegree p " />
</form>
<span id="commSav9-99" class="commSav" >totalDegree p </span>
<div id="mathAns9-99" ></div>
</div>


<div class="math">
<table>
<tr><td>
<math xmlns="&mathml;" mathsize="big" display="block"><mstyle><mn>4</mn></mstyle></math>
</td></tr>
</table>
</div>




<div class="returnType">
Type: PositiveInteger
</div>



<p>It is often convenient to think of a polynomial as a leading monomial plus
the remaining terms.
</p>




<div id="spadComm9-100" class="spadComm" >
<form id="formComm9-100" action="javascript:makeRequest('9-100');" >
<input id="comm9-100" type="text" class="command" style="width: 12em;" value="leadingMonomial p " />
</form>
<span id="commSav9-100" class="commSav" >leadingMonomial p </span>
<div id="mathAns9-100" ></div>
</div>


<div class="math">
<table>
<tr><td>
<math xmlns="&mathml;" mathsize="big" display="block"><mstyle><mrow><mi>x</mi><mspace width="0.5 em" /><mrow><msup><mi>y</mi><mn>2</mn></msup></mrow><mspace width="0.5 em" /><mi>z</mi></mrow></mstyle></math>
</td></tr>
</table>
</div>




<div class="returnType">
Type: Polynomial Integer
</div>



<p>The <span class="spadfunFrom" >reductum</span><span class="index">reductum</span><a name="chapter-9-75"/><span class="index">Polynomial</span><a name="chapter-9-76"/> operation returns a polynomial
consisting of the sum of the monomials after the first.
</p>




<div id="spadComm9-101" class="spadComm" >
<form id="formComm9-101" action="javascript:makeRequest('9-101');" >
<input id="comm9-101" type="text" class="command" style="width: 8em;" value="reductum p " />
</form>
<span id="commSav9-101" class="commSav" >reductum p </span>
<div id="mathAns9-101" ></div>
</div>


<div class="math">
<table>
<tr><td>
<math xmlns="&mathml;" mathsize="big" display="block"><mstyle><mrow><mrow><mo>(</mo><mo>-</mo><mrow><mn>2</mn><mspace width="0.5 em" /><mi>x</mi><mspace width="0.5 em" /><mi>y</mi></mrow><mo>+</mo><mi>x</mi><mo>)</mo></mrow><mspace width="0.5 em" /><mi>z</mi></mrow></mstyle></math>
</td></tr>
</table>
</div>




<div class="returnType">
Type: Polynomial Integer
</div>



<p>These have the obvious relationship that the original polynomial
is equal to the leading monomial plus the reductum.
</p>




<div id="spadComm9-102" class="spadComm" >
<form id="formComm9-102" action="javascript:makeRequest('9-102');" >
<input id="comm9-102" type="text" class="command" style="width: 24em;" value="p - leadingMonomial p - reductum p " />
</form>
<span id="commSav9-102" class="commSav" >p - leadingMonomial p - reductum p </span>
<div id="mathAns9-102" ></div>
</div>


<div class="math">
<table>
<tr><td>
<math xmlns="&mathml;" mathsize="big" display="block"><mstyle><mn>0</mn></mstyle></math>
</td></tr>
</table>
</div>




<div class="returnType">
Type: Polynomial Integer
</div>



<p>The value returned by <span class="spadfunFrom" >leadingMonomial</span><span class="index">leadingMonomial</span><a name="chapter-9-77"/><span class="index">Polynomial</span><a name="chapter-9-78"/>
includes the coefficient of that term.  This is extracted by using
<span class="spadfunFrom" >leadingCoefficient</span><span class="index">leadingCoefficient</span><a name="chapter-9-79"/><span class="index">Polynomial</span><a name="chapter-9-80"/> on the original
polynomial.
</p>




<div id="spadComm9-103" class="spadComm" >
<form id="formComm9-103" action="javascript:makeRequest('9-103');" >
<input id="comm9-103" type="text" class="command" style="width: 14em;" value="leadingCoefficient p " />
</form>
<span id="commSav9-103" class="commSav" >leadingCoefficient p </span>
<div id="mathAns9-103" ></div>
</div>


<div class="math">
<table>
<tr><td>
<math xmlns="&mathml;" mathsize="big" display="block"><mstyle><mn>1</mn></mstyle></math>
</td></tr>
</table>
</div>




<div class="returnType">
Type: PositiveInteger
</div>



<p>The operation <span class="spadfunFrom" >eval</span><span class="index">eval</span><a name="chapter-9-81"/><span class="index">Polynomial</span><a name="chapter-9-82"/> is used to substitute a value
for a variable in a polynomial.
</p>




<div id="spadComm9-104" class="spadComm" >
<form id="formComm9-104" action="javascript:makeRequest('9-104');" >
<input id="comm9-104" type="text" class="command" style="width: 2em;" value="p  " />
</form>
<span id="commSav9-104" class="commSav" >p  </span>
<div id="mathAns9-104" ></div>
</div>


<div class="math">
<table>
<tr><td>
<math xmlns="&mathml;" mathsize="big" display="block"><mstyle><mrow><mrow><mo>(</mo><mrow><mi>x</mi><mspace width="0.5 em" /><mrow><msup><mi>y</mi><mn>2</mn></msup></mrow></mrow><mo>-</mo><mrow><mn>2</mn><mspace width="0.5 em" /><mi>x</mi><mspace width="0.5 em" /><mi>y</mi></mrow><mo>+</mo><mi>x</mi><mo>)</mo></mrow><mspace width="0.5 em" /><mi>z</mi></mrow></mstyle></math>
</td></tr>
</table>
</div>




<div class="returnType">
Type: Polynomial Integer
</div>



<p>This value may be another variable, a constant or a polynomial.
</p>




<div id="spadComm9-105" class="spadComm" >
<form id="formComm9-105" action="javascript:makeRequest('9-105');" >
<input id="comm9-105" type="text" class="command" style="width: 8em;" value="eval(p,x,w) " />
</form>
<span id="commSav9-105" class="commSav" >eval(p,x,w) </span>
<div id="mathAns9-105" ></div>
</div>


<div class="math">
<table>
<tr><td>
<math xmlns="&mathml;" mathsize="big" display="block"><mstyle><mrow><mrow><mo>(</mo><mrow><mi>w</mi><mspace width="0.5 em" /><mrow><msup><mi>y</mi><mn>2</mn></msup></mrow></mrow><mo>-</mo><mrow><mn>2</mn><mspace width="0.5 em" /><mi>w</mi><mspace width="0.5 em" /><mi>y</mi></mrow><mo>+</mo><mi>w</mi><mo>)</mo></mrow><mspace width="0.5 em" /><mi>z</mi></mrow></mstyle></math>
</td></tr>
</table>
</div>




<div class="returnType">
Type: Polynomial Integer
</div>





<div id="spadComm9-106" class="spadComm" >
<form id="formComm9-106" action="javascript:makeRequest('9-106');" >
<input id="comm9-106" type="text" class="command" style="width: 8em;" value="eval(p,x,1) " />
</form>
<span id="commSav9-106" class="commSav" >eval(p,x,1) </span>
<div id="mathAns9-106" ></div>
</div>


<div class="math">
<table>
<tr><td>
<math xmlns="&mathml;" mathsize="big" display="block"><mstyle><mrow><mrow><mo>(</mo><mrow><msup><mi>y</mi><mn>2</mn></msup></mrow><mo>-</mo><mrow><mn>2</mn><mspace width="0.5 em" /><mi>y</mi></mrow><mo>+</mo><mn>1</mn><mo>)</mo></mrow><mspace width="0.5 em" /><mi>z</mi></mrow></mstyle></math>
</td></tr>
</table>
</div>




<div class="returnType">
Type: Polynomial Integer
</div>



<p>Actually, all the things being substituted are just polynomials,
some more trivial than others.
</p>




<div id="spadComm9-107" class="spadComm" >
<form id="formComm9-107" action="javascript:makeRequest('9-107');" >
<input id="comm9-107" type="text" class="command" style="width: 13em;" value="eval(p,x,y^2 - 1) " />
</form>
<span id="commSav9-107" class="commSav" >eval(p,x,y^2 - 1) </span>
<div id="mathAns9-107" ></div>
</div>


<div class="math">
<table>
<tr><td>
<math xmlns="&mathml;" mathsize="big" display="block"><mstyle><mrow><mrow><mo>(</mo><mrow><msup><mi>y</mi><mn>4</mn></msup></mrow><mo>-</mo><mrow><mn>2</mn><mspace width="0.5 em" /><mrow><msup><mi>y</mi><mn>3</mn></msup></mrow></mrow><mo>+</mo><mrow><mn>2</mn><mspace width="0.5 em" /><mi>y</mi></mrow><mo>-</mo><mn>1</mn><mo>)</mo></mrow><mspace width="0.5 em" /><mi>z</mi></mrow></mstyle></math>
</td></tr>
</table>
</div>




<div class="returnType">
Type: Polynomial Integer
</div>



<p>Derivatives are computed using the <span class="spadfunFrom" >D</span><span class="index">D</span><a name="chapter-9-83"/><span class="index">Polynomial</span><a name="chapter-9-84"/> operation.
</p>




<div id="spadComm9-108" class="spadComm" >
<form id="formComm9-108" action="javascript:makeRequest('9-108');" >
<input id="comm9-108" type="text" class="command" style="width: 5em;" value="D(p,x) " />
</form>
<span id="commSav9-108" class="commSav" >D(p,x) </span>
<div id="mathAns9-108" ></div>
</div>


<div class="math">
<table>
<tr><td>
<math xmlns="&mathml;" mathsize="big" display="block"><mstyle><mrow><mrow><mo>(</mo><mrow><msup><mi>y</mi><mn>2</mn></msup></mrow><mo>-</mo><mrow><mn>2</mn><mspace width="0.5 em" /><mi>y</mi></mrow><mo>+</mo><mn>1</mn><mo>)</mo></mrow><mspace width="0.5 em" /><mi>z</mi></mrow></mstyle></math>
</td></tr>
</table>
</div>




<div class="returnType">
Type: Polynomial Integer
</div>



<p>The first argument is the polynomial and the second is the variable.
</p>




<div id="spadComm9-109" class="spadComm" >
<form id="formComm9-109" action="javascript:makeRequest('9-109');" >
<input id="comm9-109" type="text" class="command" style="width: 5em;" value="D(p,y) " />
</form>
<span id="commSav9-109" class="commSav" >D(p,y) </span>
<div id="mathAns9-109" ></div>
</div>


<div class="math">
<table>
<tr><td>
<math xmlns="&mathml;" mathsize="big" display="block"><mstyle><mrow><mrow><mo>(</mo><mrow><mn>2</mn><mspace width="0.5 em" /><mi>x</mi><mspace width="0.5 em" /><mi>y</mi></mrow><mo>-</mo><mrow><mn>2</mn><mspace width="0.5 em" /><mi>x</mi></mrow><mo>)</mo></mrow><mspace width="0.5 em" /><mi>z</mi></mrow></mstyle></math>
</td></tr>
</table>
</div>




<div class="returnType">
Type: Polynomial Integer
</div>



<p>Even if the polynomial has only one variable, you must specify it.
</p>




<div id="spadComm9-110" class="spadComm" >
<form id="formComm9-110" action="javascript:makeRequest('9-110');" >
<input id="comm9-110" type="text" class="command" style="width: 5em;" value="D(p,z) " />
</form>
<span id="commSav9-110" class="commSav" >D(p,z) </span>
<div id="mathAns9-110" ></div>
</div>


<div class="math">
<table>
<tr><td>
<math xmlns="&mathml;" mathsize="big" display="block"><mstyle><mrow><mrow><mi>x</mi><mspace width="0.5 em" /><mrow><msup><mi>y</mi><mn>2</mn></msup></mrow></mrow><mo>-</mo><mrow><mn>2</mn><mspace width="0.5 em" /><mi>x</mi><mspace width="0.5 em" /><mi>y</mi></mrow><mo>+</mo><mi>x</mi></mrow></mstyle></math>
</td></tr>
</table>
</div>




<div class="returnType">
Type: Polynomial Integer
</div>



<p>Integration of polynomials is similar and the
<span class="spadfunFrom" >integrate</span><span class="index">integrate</span><a name="chapter-9-85"/><span class="index">Polynomial</span><a name="chapter-9-86"/> operation is used.
</p>


<p>Integration requires that the coefficients support division.
Consequently, FriCAS converts polynomials over the integers to
polynomials over the rational numbers before integrating them.
</p>




<div id="spadComm9-111" class="spadComm" >
<form id="formComm9-111" action="javascript:makeRequest('9-111');" >
<input id="comm9-111" type="text" class="command" style="width: 10em;" value="integrate(p,y) " />
</form>
<span id="commSav9-111" class="commSav" >integrate(p,y) </span>
<div id="mathAns9-111" ></div>
</div>


<div class="math">
<table>
<tr><td>
<math xmlns="&mathml;" mathsize="big" display="block"><mstyle><mrow><mrow><mo>(</mo><mrow><mfrac><mn>1</mn><mn>3</mn></mfrac><mspace width="0.5 em" /><mi>x</mi><mspace width="0.5 em" /><mrow><msup><mi>y</mi><mn>3</mn></msup></mrow></mrow><mo>-</mo><mrow><mi>x</mi><mspace width="0.5 em" /><mrow><msup><mi>y</mi><mn>2</mn></msup></mrow></mrow><mo>+</mo><mrow><mi>x</mi><mspace width="0.5 em" /><mi>y</mi></mrow><mo>)</mo></mrow><mspace width="0.5 em" /><mi>z</mi></mrow></mstyle></math>
</td></tr>
</table>
</div>




<div class="returnType">
Type: Polynomial Fraction Integer
</div>



<p>It is not possible, in general, to divide two polynomials.  In our
example using polynomials over the integers, the operation
<span class="spadfunFrom" >monicDivide</span><span class="index">monicDivide</span><a name="chapter-9-87"/><span class="index">Polynomial</span><a name="chapter-9-88"/> divides a polynomial by a monic
polynomial (that is, a polynomial with leading coefficient equal to
1).  The result is a record of the quotient and remainder of the
division.
</p>


<p>You must specify the variable in which to express the polynomial.
</p>




<div id="spadComm9-112" class="spadComm" >
<form id="formComm9-112" action="javascript:makeRequest('9-112');" >
<input id="comm9-112" type="text" class="command" style="width: 18em;" value="qr := monicDivide(p,x+1,x) " />
</form>
<span id="commSav9-112" class="commSav" >qr := monicDivide(p,x+1,x) </span>
<div id="mathAns9-112" ></div>
</div>


<div class="math">
<table>
<tr><td>
<math xmlns="&mathml;" mathsize="big" display="block"><mstyle><mrow><mo>[</mo><mrow><mi>quotient</mi><mo>=</mo><mrow><mrow><mo>(</mo><mrow><msup><mi>y</mi><mn>2</mn></msup></mrow><mo>-</mo><mrow><mn>2</mn><mspace width="0.5 em" /><mi>y</mi></mrow><mo>+</mo><mn>1</mn><mo>)</mo></mrow><mspace width="0.5 em" /><mi>z</mi></mrow></mrow><mo>,</mo><mrow><mi>remainder</mi><mo>=</mo><mrow><mrow><mo>(</mo><mo>-</mo><mrow><msup><mi>y</mi><mn>2</mn></msup></mrow><mo>+</mo><mrow><mn>2</mn><mspace width="0.5 em" /><mi>y</mi></mrow><mo>-</mo><mn>1</mn><mo>)</mo></mrow><mspace width="0.5 em" /><mi>z</mi></mrow></mrow><mo>]</mo></mrow></mstyle></math>
</td></tr>
</table>
</div>




<div class="returnType">
Type: Record(quotient: Polynomial Integer,remainder: Polynomial Integer)
</div>



<p>The selectors of the components of the record are <span class="teletype">quotient</span> and
<span class="teletype">remainder</span>.  Issue this to extract the remainder.
</p>




<div id="spadComm9-113" class="spadComm" >
<form id="formComm9-113" action="javascript:makeRequest('9-113');" >
<input id="comm9-113" type="text" class="command" style="width: 9em;" value="qr.remainder " />
</form>
<span id="commSav9-113" class="commSav" >qr.remainder </span>
<div id="mathAns9-113" ></div>
</div>


<div class="math">
<table>
<tr><td>
<math xmlns="&mathml;" mathsize="big" display="block"><mstyle><mrow><mrow><mo>(</mo><mo>-</mo><mrow><msup><mi>y</mi><mn>2</mn></msup></mrow><mo>+</mo><mrow><mn>2</mn><mspace width="0.5 em" /><mi>y</mi></mrow><mo>-</mo><mn>1</mn><mo>)</mo></mrow><mspace width="0.5 em" /><mi>z</mi></mrow></mstyle></math>
</td></tr>
</table>
</div>




<div class="returnType">
Type: Polynomial Integer
</div>



<p>Now that we can extract the components, we can demonstrate the
relationship among them and the arguments to our original expression
<span class="teletype">qr := monicDivide(p,x+1,x)</span>.
</p>




<div id="spadComm9-114" class="spadComm" >
<form id="formComm9-114" action="javascript:makeRequest('9-114');" >
<input id="comm9-114" type="text" class="command" style="width: 28em;" value="p - ((x+1) * qr.quotient + qr.remainder) " />
</form>
<span id="commSav9-114" class="commSav" >p - ((x+1) * qr.quotient + qr.remainder) </span>
<div id="mathAns9-114" ></div>
</div>


<div class="math">
<table>
<tr><td>
<math xmlns="&mathml;" mathsize="big" display="block"><mstyle><mn>0</mn></mstyle></math>
</td></tr>
</table>
</div>




<div class="returnType">
Type: Polynomial Integer
</div>



<p>If the <span class="spadopFrom" title="Fraction">/</span> operator is used with polynomials, a
fraction object is created.  In this example, the result is an object
of type <span class="teletype">Fraction Polynomial Integer</span>.
</p>




<div id="spadComm9-115" class="spadComm" >
<form id="formComm9-115" action="javascript:makeRequest('9-115');" >
<input id="comm9-115" type="text" class="command" style="width: 3em;" value="p/q " />
</form>
<span id="commSav9-115" class="commSav" >p/q </span>
<div id="mathAns9-115" ></div>
</div>


<div class="math">
<table>
<tr><td>
<math xmlns="&mathml;" mathsize="big" display="block"><mstyle><mfrac><mrow><mrow><mo>(</mo><mi>y</mi><mo>-</mo><mn>1</mn><mo>)</mo></mrow><mspace width="0.5 em" /><mi>z</mi></mrow><mrow><mi>z</mi><mo>+</mo><mn>5</mn></mrow></mfrac></mstyle></math>
</td></tr>
</table>
</div>




<div class="returnType">
Type: Fraction Polynomial Integer
</div>



<p>If you use rational numbers as polynomial coefficients, the
resulting object is of type <span class="teletype">Polynomial Fraction Integer</span>.
</p>




<div id="spadComm9-116" class="spadComm" >
<form id="formComm9-116" action="javascript:makeRequest('9-116');" >
<input id="comm9-116" type="text" class="command" style="width: 16em;" value="(2/3) * x^2 - y + 4/5 " />
</form>
<span id="commSav9-116" class="commSav" >(2/3) * x^2 - y + 4/5 </span>
<div id="mathAns9-116" ></div>
</div>


<div class="math">
<table>
<tr><td>
<math xmlns="&mathml;" mathsize="big" display="block"><mstyle><mrow><mo>-</mo><mi>y</mi><mo>+</mo><mrow><mfrac><mn>2</mn><mn>3</mn></mfrac><mspace width="0.5 em" /><mrow><msup><mi>x</mi><mn>2</mn></msup></mrow></mrow><mo>+</mo><mfrac><mn>4</mn><mn>5</mn></mfrac></mrow></mstyle></math>
</td></tr>
</table>
</div>




<div class="returnType">
Type: Polynomial Fraction Integer
</div>



<p>This can be converted to a fraction of polynomials and back again, if
required.
</p>




<div id="spadComm9-117" class="spadComm" >
<form id="formComm9-117" action="javascript:makeRequest('9-117');" >
<input id="comm9-117" type="text" class="command" style="width: 14em;" value="% :: FRAC POLY INT " />
</form>
<span id="commSav9-117" class="commSav" >% :: FRAC POLY INT </span>
<div id="mathAns9-117" ></div>
</div>


<div class="math">
<table>
<tr><td>
<math xmlns="&mathml;" mathsize="big" display="block"><mstyle><mfrac><mrow><mo>-</mo><mrow><mn>15</mn><mspace width="0.5 em" /><mi>y</mi></mrow><mo>+</mo><mrow><mn>10</mn><mspace width="0.5 em" /><mrow><msup><mi>x</mi><mn>2</mn></msup></mrow></mrow><mo>+</mo><mn>12</mn></mrow><mn>15</mn></mfrac></mstyle></math>
</td></tr>
</table>
</div>




<div class="returnType">
Type: Fraction Polynomial Integer
</div>





<div id="spadComm9-118" class="spadComm" >
<form id="formComm9-118" action="javascript:makeRequest('9-118');" >
<input id="comm9-118" type="text" class="command" style="width: 14em;" value="% :: POLY FRAC INT " />
</form>
<span id="commSav9-118" class="commSav" >% :: POLY FRAC INT </span>
<div id="mathAns9-118" ></div>
</div>


<div class="math">
<table>
<tr><td>
<math xmlns="&mathml;" mathsize="big" display="block"><mstyle><mrow><mo>-</mo><mi>y</mi><mo>+</mo><mrow><mfrac><mn>2</mn><mn>3</mn></mfrac><mspace width="0.5 em" /><mrow><msup><mi>x</mi><mn>2</mn></msup></mrow></mrow><mo>+</mo><mfrac><mn>4</mn><mn>5</mn></mfrac></mrow></mstyle></math>
</td></tr>
</table>
</div>




<div class="returnType">
Type: Polynomial Fraction Integer
</div>



<p>To convert the coefficients to floating point, map the <span class="teletype">numeric</span>
operation on the coefficients of the polynomial.
</p>




<div id="spadComm9-119" class="spadComm" >
<form id="formComm9-119" action="javascript:makeRequest('9-119');" >
<input id="comm9-119" type="text" class="command" style="width: 11em;" value="map(numeric,%) " />
</form>
<span id="commSav9-119" class="commSav" >map(numeric,%) </span>
<div id="mathAns9-119" ></div>
</div>


<div class="math">
<table>
<tr><td>
<math xmlns="&mathml;" mathsize="big" display="block"><mstyle><mrow><mo>-</mo><mrow><mrow><mn>1</mn><mo>.</mo><mn>0</mn></mrow><mspace width="0.5 em" /><mi>y</mi></mrow><mo>+</mo><mrow><mrow><mn>0</mn><mo>.</mo><mn>6666666666</mn><mn>6666666667</mn></mrow><mspace width="0.5 em" /><mrow><msup><mi>x</mi><mn>2</mn></msup></mrow></mrow><mo>+</mo><mrow><mn>0</mn><mo>.</mo><mn>8</mn></mrow></mrow></mstyle></math>
</td></tr>
</table>
</div>




<div class="returnType">
Type: Polynomial Float
</div>



<p>For more information on related topics, see
<a href="section-9.83.xhtml#UnivariatePolynomialXmpPage" class="ref" >UnivariatePolynomialXmpPage</a> , 
<a href="section-9.16.xhtml#DistributedMultivariatePolynomialXmpPage" class="ref" >MultivariatePolynomialXmpPage</a> , and
<a href="section-9.16.xhtml#DistributedMultivariatePolynomialXmpPage" class="ref" >DistributedMultivariatePolynomialXmpPage</a> .  You can also issue
the system command <span class="teletype">)show Polynomial</span> to display the full list
of operations defined by <span class="teletype">Polynomial</span>.
</p>




</div><a href="book-contents.xhtml" style="margin-right: 10px;">Book Contents</a>
<a href="section-9.62.xhtml" style="margin-right: 10px;">Previous Section 9.62 Permanent</a><a href="section-9.64.xhtml" style="margin-right: 10px;">Next Section 9.64 Quaternion</a>
<a href="book-index.xhtml">Book Index</a></body>
</html>