<?xml version="1.0" encoding="UTF-8" ?>

<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.1 plus MathML 2.0//EN"
"http://www.w3.org/TR/MathML2/dtd/xhtml-math11-f.dtd" [
<!ENTITY mathml "http://www.w3.org/1998/Math/MathML">
]>

<html xmlns="http://www.w3.org/1999/xhtml"
      xmlns:xlink="http://www.w3.org/1999/xlink" >


  <head>
    <title>Section4.7</title>
    <link rel="stylesheet" type="text/css" href="graphicstyle.css" />
    <script type="text/javascript" src="bookax1.js" />
  </head>

  <body>
<a href="book-contents.xhtml" style="margin-right: 10px;">Book Contents</a><a href="section-4.6.xhtml" style="margin-right: 10px;">Previous Section 4.6 IBM Script Formula Format</a><a href="section-5.0.xhtml" style="margin-right: 10px;">Next Section 5.0 Interactive Language</a><a href="book-index.xhtml">Book Index</a><div class="section"  id="sec-4.7">
<h2 class="sectiontitle">4.7  FORTRAN Format</h2>


<a name="ugInOutFortran" class="label"/>


<p>In addition to turning FORTRAN output on and off and stating where the
<span class="index">output formats:FORTRAN</span><a name="chapter-4-35"/> output should be placed, there are many
options that control the <span class="index">FORTRAN output format</span><a name="chapter-4-36"/> appearance of
the generated code.  In this section we describe some of the basic
options.  Issue <span class="teletype">)set fortran</span> to see a full list with their
current settings.
</p>


<p>The output FORTRAN expression usually begins in column 7.  If the
expression needs more than one line, the ampersand character <span class="teletype">&amp;</span>
is used in column 6.  Since some versions of FORTRAN have restrictions
on the number of lines per statement, FriCAS breaks long expressions
into segments with a maximum of 1320 characters (20 lines of 66
characters) per segment.  <span class="index">set fortran</span><a name="chapter-4-37"/> If you want to change
this, say, to 660 characters, issue the system command 
<span class="index">set fortran explength</span><a name="chapter-4-38"/> <span class="teletype">)set fortran explength 660</span>.  
<span class="index">FORTRAN output format:breaking into multiple statements</span><a name="chapter-4-39"/> 
You can turn off the line breaking by issuing <span class="teletype">)set fortran segment off</span>.
<span class="index">set fortran segment</span><a name="chapter-4-40"/> Various code optimization levels are available.
</p>


<p>FORTRAN output is produced after you issue this.
<span class="index">set output fortran</span><a name="chapter-4-41"/>
</p>



<div id="spadComm4-14" class="spadComm" >
<form id="formComm4-14" action="javascript:makeRequest('4-14');" >
<input id="comm4-14" type="text" class="command" style="width: 15em;" value=")set output fortran on" />
</form>
<span id="commSav4-14" class="commSav" >)set output fortran on</span>
<div id="mathAns4-14" ></div>
</div>



<p>For the initial examples, we set the optimization level to 0, which is the
lowest level.
<span class="index">set fortran optlevel</span><a name="chapter-4-42"/>
</p>



<div id="spadComm4-15" class="spadComm" >
<form id="formComm4-15" action="javascript:makeRequest('4-15');" >
<input id="comm4-15" type="text" class="command" style="width: 16em;" value=")set fortran optlevel 0" />
</form>
<span id="commSav4-15" class="commSav" >)set fortran optlevel 0</span>
<div id="mathAns4-15" ></div>
</div>



<p>The output is usually in columns 7 through 72, although fewer columns
are used in the following examples so that the output
<span class="index">FORTRAN output format:line length</span><a name="chapter-4-43"/>
fits nicely on the page.
</p>



<div id="spadComm4-16" class="spadComm" >
<form id="formComm4-16" action="javascript:makeRequest('4-16');" >
<input id="comm4-16" type="text" class="command" style="width: 18em;" value=")set fortran fortlength 60" />
</form>
<span id="commSav4-16" class="commSav" >)set fortran fortlength 60</span>
<div id="mathAns4-16" ></div>
</div>



<p>By default, the output goes to the screen and is displayed before the
standard FriCAS two-dimensional output.  In this example, an assignment
to the variable  <math xmlns="&mathml;" mathsize="big"><mstyle><mi>R1</mi></mstyle></math> was generated because this is the result of step 1.
</p>



<div id="spadComm4-17" class="spadComm" >
<form id="formComm4-17" action="javascript:makeRequest('4-17');" >
<input id="comm4-17" type="text" class="command" style="width: 6em;" value="(x+y)^3" />
</form>
<span id="commSav4-17" class="commSav" >(x+y)^3</span>
<div id="mathAns4-17" ></div>
</div>




<div class="verbatim"><br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;R1=y^3+3*x*y*y+3*x*x*y+x^3<br />
</div>


<div class="math">
<table>
<tr><td>
<math xmlns="&mathml;" mathsize="big" display="block"><mstyle><mrow><mrow><msup><mi>y</mi><mn>3</mn></msup></mrow><mo>+</mo><mrow><mn>3</mn><mspace width="0.5 em" /><mi>x</mi><mspace width="0.5 em" /><mrow><msup><mi>y</mi><mn>2</mn></msup></mrow></mrow><mo>+</mo><mrow><mn>3</mn><mspace width="0.5 em" /><mrow><msup><mi>x</mi><mn>2</mn></msup></mrow><mspace width="0.5 em" /><mi>y</mi></mrow><mo>+</mo><mrow><msup><mi>x</mi><mn>3</mn></msup></mrow></mrow></mstyle></math>
</td></tr>
</table>
</div>




<div class="returnType">
Type: Polynomial Integer
</div>



<p>Here is an example that illustrates the line breaking.
</p>



<div id="spadComm4-18" class="spadComm" >
<form id="formComm4-18" action="javascript:makeRequest('4-18');" >
<input id="comm4-18" type="text" class="command" style="width: 7em;" value="(x+y+z)^3" />
</form>
<span id="commSav4-18" class="commSav" >(x+y+z)^3</span>
<div id="mathAns4-18" ></div>
</div>




<div class="verbatim"><br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;R2=z^3+(3*y+3*x)*z*z+(3*y*y+6*x*y+3*x*x)*z+y^3+3*x*y<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&amp;*y+3*x*x*y+x^3<br />
</div>


<div class="math">
<table>
<tr><td>
<math xmlns="&mathml;" mathsize="big" display="block"><mstyle><mrow><mrow><msup><mi>z</mi><mn>3</mn></msup></mrow><mo>+</mo><mrow><mrow><mo>(</mo><mrow><mn>3</mn><mspace width="0.5 em" /><mi>y</mi></mrow><mo>+</mo><mrow><mn>3</mn><mspace width="0.5 em" /><mi>x</mi></mrow><mo>)</mo></mrow><mspace width="0.5 em" /><mrow><msup><mi>z</mi><mn>2</mn></msup></mrow></mrow><mo>+</mo><mrow><mrow><mo>(</mo><mrow><mn>3</mn><mspace width="0.5 em" /><mrow><msup><mi>y</mi><mn>2</mn></msup></mrow></mrow><mo>+</mo><mrow><mn>6</mn><mspace width="0.5 em" /><mi>x</mi><mspace width="0.5 em" /><mi>y</mi></mrow><mo>+</mo><mrow><mn>3</mn><mspace width="0.5 em" /><mrow><msup><mi>x</mi><mn>2</mn></msup></mrow></mrow><mo>)</mo></mrow><mspace width="0.5 em" /><mi>z</mi></mrow><mo>+</mo><mrow><msup><mi>y</mi><mn>3</mn></msup></mrow><mo>+</mo><mrow><mn>3</mn><mspace width="0.5 em" /><mi>x</mi><mspace width="0.5 em" /><mrow><msup><mi>y</mi><mn>2</mn></msup></mrow></mrow><mo>+</mo><mrow><mn>3</mn><mspace width="0.5 em" /><mrow><msup><mi>x</mi><mn>2</mn></msup></mrow><mspace width="0.5 em" /><mi>y</mi></mrow><mo>+</mo><mrow><msup><mi>x</mi><mn>3</mn></msup></mrow></mrow></mstyle></math>
</td></tr>
</table>
</div>




<div class="returnType">
Type: Polynomial Integer
</div>



<p>Note in the above examples that integers are generally converted to
<span class="index">FORTRAN output format:integers vs. floats</span><a name="chapter-4-44"/> floating point
numbers, except in exponents.  This is the default behavior but can be
turned off by issuing <span class="teletype">)set fortran ints2floats off</span>.  
<span class="index">set fortran ints2floats</span><a name="chapter-4-45"/> The rules governing when the conversion 
is done are:
</p>



<ol>
<li>
 If an integer is an exponent, convert it to a floating point
number if it is greater than 32767 in absolute value, otherwise leave it
as an integer.
</li>
<li> Convert all other integers in an expression to floating point numbers.
</li>
</ol>


<p>These rules only govern integers in expressions.  Numbers generated by
FriCAS for  <math xmlns="&mathml;" mathsize="big"><mstyle><mi>DIMENSION</mi></mstyle></math> statements are also integers.
</p>


<p>To set the type of generated FORTRAN data, 
<span class="index">FORTRAN output format:data types</span><a name="chapter-4-46"/>
use one of the following:
</p>



<div class="verbatim"><br />
)set&nbsp;fortran&nbsp;defaulttype&nbsp;REAL<br />
)set&nbsp;fortran&nbsp;defaulttype&nbsp;INTEGER<br />
)set&nbsp;fortran&nbsp;defaulttype&nbsp;COMPLEX<br />
)set&nbsp;fortran&nbsp;defaulttype&nbsp;LOGICAL<br />
)set&nbsp;fortran&nbsp;defaulttype&nbsp;CHARACTER<br />
</div>



<p>When temporaries are created, they are given a default type of <span class="teletype">REAL.</span>  
Also, the <span class="teletype">REAL</span> versions of functions are used by default.
</p>



<div id="spadComm4-19" class="spadComm" >
<form id="formComm4-19" action="javascript:makeRequest('4-19');" >
<input id="comm4-19" type="text" class="command" style="width: 4em;" value="sin(x)" />
</form>
<span id="commSav4-19" class="commSav" >sin(x)</span>
<div id="mathAns4-19" ></div>
</div>




<div class="verbatim"><br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;R3=DSIN(x)<br />
</div>


<div class="math">
<table>
<tr><td>
<math xmlns="&mathml;" mathsize="big" display="block"><mstyle><mrow><mo>sin</mo><mo>(</mo><mi>x</mi><mo>)</mo></mrow></mstyle></math>
</td></tr>
</table>
</div>




<div class="returnType">
Type: Expression Integer
</div>



<p>At optimization level 1, FriCAS removes common subexpressions.
<span class="index">FORTRAN output format:optimization level</span><a name="chapter-4-47"/>
<span class="index">set fortran optlevel</span><a name="chapter-4-48"/>
</p>



<div id="spadComm4-20" class="spadComm" >
<form id="formComm4-20" action="javascript:makeRequest('4-20');" >
<input id="comm4-20" type="text" class="command" style="width: 16em;" value=")set fortran optlevel 1" />
</form>
<span id="commSav4-20" class="commSav" >)set fortran optlevel 1</span>
<div id="mathAns4-20" ></div>
</div>





<div id="spadComm4-21" class="spadComm" >
<form id="formComm4-21" action="javascript:makeRequest('4-21');" >
<input id="comm4-21" type="text" class="command" style="width: 7em;" value="(x+y+z)^3" />
</form>
<span id="commSav4-21" class="commSav" >(x+y+z)^3</span>
<div id="mathAns4-21" ></div>
</div>




<div class="verbatim"><br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;T2=y*y<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;T3=x*x<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;R4=z^3+(3*y+3*x)*z*z+(3*T2+6*x*y+3*T3)*z+y^3+3*x*T2+<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&amp;3*T3*y+x^3<br />
</div>


<div class="math">
<table>
<tr><td>
<math xmlns="&mathml;" mathsize="big" display="block"><mstyle><mrow><mrow><msup><mi>z</mi><mn>3</mn></msup></mrow><mo>+</mo><mrow><mrow><mo>(</mo><mrow><mn>3</mn><mspace width="0.5 em" /><mi>y</mi></mrow><mo>+</mo><mrow><mn>3</mn><mspace width="0.5 em" /><mi>x</mi></mrow><mo>)</mo></mrow><mspace width="0.5 em" /><mrow><msup><mi>z</mi><mn>2</mn></msup></mrow></mrow><mo>+</mo><mrow><mrow><mo>(</mo><mrow><mn>3</mn><mspace width="0.5 em" /><mrow><msup><mi>y</mi><mn>2</mn></msup></mrow></mrow><mo>+</mo><mrow><mn>6</mn><mspace width="0.5 em" /><mi>x</mi><mspace width="0.5 em" /><mi>y</mi></mrow><mo>+</mo><mrow><mn>3</mn><mspace width="0.5 em" /><mrow><msup><mi>x</mi><mn>2</mn></msup></mrow></mrow><mo>)</mo></mrow><mspace width="0.5 em" /><mi>z</mi></mrow><mo>+</mo><mrow><msup><mi>y</mi><mn>3</mn></msup></mrow><mo>+</mo><mrow><mn>3</mn><mspace width="0.5 em" /><mi>x</mi><mspace width="0.5 em" /><mrow><msup><mi>y</mi><mn>2</mn></msup></mrow></mrow><mo>+</mo><mrow><mn>3</mn><mspace width="0.5 em" /><mrow><msup><mi>x</mi><mn>2</mn></msup></mrow><mspace width="0.5 em" /><mi>y</mi></mrow><mo>+</mo><mrow><msup><mi>x</mi><mn>3</mn></msup></mrow></mrow></mstyle></math>
</td></tr>
</table>
</div>




<div class="returnType">
Type: Polynomial Integer
</div>



<p>This changes the precision to <span class="teletype">DOUBLE</span>.  <span class="index">set fortran
precision double</span><a name="chapter-4-49"/> Substitute <span class="teletype">single</span> for <span class="teletype">double</span>
<span class="index">FORTRAN output format:precision</span><a name="chapter-4-50"/> to return to single precision.  
<span class="index">set fortran precision single</span><a name="chapter-4-51"/>
</p>




<div id="spadComm4-22" class="spadComm" >
<form id="formComm4-22" action="javascript:makeRequest('4-22');" >
<input id="comm4-22" type="text" class="command" style="width: 20em;" value=")set fortran precision double" />
</form>
<span id="commSav4-22" class="commSav" >)set fortran precision double</span>
<div id="mathAns4-22" ></div>
</div>



<p>Complex constants display the precision.
</p>



<div id="spadComm4-23" class="spadComm" >
<form id="formComm4-23" action="javascript:makeRequest('4-23');" >
<input id="comm4-23" type="text" class="command" style="width: 10em;" value="2.3 + 5.6*%i " />
</form>
<span id="commSav4-23" class="commSav" >2.3 + 5.6*%i </span>
<div id="mathAns4-23" ></div>
</div>




<div class="verbatim"><br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;R5=(2.3D0,5.6D0)<br />
</div>


<div class="math">
<table>
<tr><td>
<math xmlns="&mathml;" mathsize="big" display="block"><mstyle><mrow><mrow><mn>2</mn><mo>.</mo><mn>3</mn></mrow><mo>+</mo><mrow><mrow><mn>5</mn><mo>.</mo><mn>6</mn></mrow><mspace width="0.5 em" /><mi>i</mi></mrow></mrow></mstyle></math>
</td></tr>
</table>
</div>




<div class="returnType">
Type: Complex Float
</div>



<p>The function names that FriCAS generates depend on the chosen precision.
</p>



<div id="spadComm4-24" class="spadComm" >
<form id="formComm4-24" action="javascript:makeRequest('4-24');" >
<input id="comm4-24" type="text" class="command" style="width: 5em;" value="sin %e" />
</form>
<span id="commSav4-24" class="commSav" >sin %e</span>
<div id="mathAns4-24" ></div>
</div>



<p><!-- NOTE: the book shows DSIN(DEXP(1.0D0)) -->
</p>




<div class="verbatim"><br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;R6=DSIN(DEXP(1))<br />
</div>


<div class="math">
<table>
<tr><td>
<math xmlns="&mathml;" mathsize="big" display="block"><mstyle><mrow><mo>sin</mo><mo>(</mo><mi>e</mi><mo>)</mo></mrow></mstyle></math>
</td></tr>
</table>
</div>




<div class="returnType">
Type: Expression Integer
</div>



<p>Reset the precision to <span class="teletype">single</span> and look at these two examples again.
</p>



<div id="spadComm4-25" class="spadComm" >
<form id="formComm4-25" action="javascript:makeRequest('4-25');" >
<input id="comm4-25" type="text" class="command" style="width: 20em;" value=")set fortran precision single" />
</form>
<span id="commSav4-25" class="commSav" >)set fortran precision single</span>
<div id="mathAns4-25" ></div>
</div>





<div id="spadComm4-26" class="spadComm" >
<form id="formComm4-26" action="javascript:makeRequest('4-26');" >
<input id="comm4-26" type="text" class="command" style="width: 9em;" value="2.3 + 5.6*%i" />
</form>
<span id="commSav4-26" class="commSav" >2.3 + 5.6*%i</span>
<div id="mathAns4-26" ></div>
</div>




<div class="verbatim"><br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;R7=(2.3,5.6)<br />
</div>


<div class="math">
<table>
<tr><td>
<math xmlns="&mathml;" mathsize="big" display="block"><mstyle><mrow><mrow><mn>2</mn><mo>.</mo><mn>3</mn></mrow><mo>+</mo><mrow><mrow><mn>5</mn><mo>.</mo><mn>6</mn></mrow><mspace width="0.5 em" /><mi>i</mi></mrow></mrow></mstyle></math>
</td></tr>
</table>
</div>




<div class="returnType">
Type: Complex Float
</div>





<div id="spadComm4-27" class="spadComm" >
<form id="formComm4-27" action="javascript:makeRequest('4-27');" >
<input id="comm4-27" type="text" class="command" style="width: 5em;" value="sin %e" />
</form>
<span id="commSav4-27" class="commSav" >sin %e</span>
<div id="mathAns4-27" ></div>
</div>



<p><!-- NOTE: the book shows SIN(EXP(1.)) -->
</p>




<div class="verbatim"><br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;R8=SIN(EXP(1))<br />
</div>


<div class="math">
<table>
<tr><td>
<math xmlns="&mathml;" mathsize="big" display="block"><mstyle><mrow><mo>sin</mo><mo>(</mo><mi>e</mi><mo>)</mo></mrow></mstyle></math>
</td></tr>
</table>
</div>




<div class="returnType">
Type: Expression Integer
</div>


<p>Expressions that look like lists, streams, sets or matrices cause
array code to be generated.
</p>



<div id="spadComm4-28" class="spadComm" >
<form id="formComm4-28" action="javascript:makeRequest('4-28');" >
<input id="comm4-28" type="text" class="command" style="width: 9em;" value="[x+1,y+1,z+1]" />
</form>
<span id="commSav4-28" class="commSav" >[x+1,y+1,z+1]</span>
<div id="mathAns4-28" ></div>
</div>




<div class="verbatim"><br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;T1(1)=x+1<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;T1(2)=y+1<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;T1(3)=z+1<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;R9=T1<br />
</div>


<div class="math">
<table>
<tr><td>
<math xmlns="&mathml;" mathsize="big" display="block"><mstyle><mrow><mo>[</mo><mrow><mi>x</mi><mo>+</mo><mn>1</mn></mrow><mo>,</mo><mrow><mi>y</mi><mo>+</mo><mn>1</mn></mrow><mo>,</mo><mrow><mi>z</mi><mo>+</mo><mn>1</mn></mrow><mo>]</mo></mrow></mstyle></math>
</td></tr>
</table>
</div>




<div class="returnType">
Type: List Polynomial Integer
</div>




<p>A temporary variable is generated to be the name of the array.
<span class="index">FORTRAN output format:arrays</span><a name="chapter-4-52"/> This may have to be changed in
your particular application.
</p>



<div id="spadComm4-29" class="spadComm" >
<form id="formComm4-29" action="javascript:makeRequest('4-29');" >
<input id="comm4-29" type="text" class="command" style="width: 10em;" value="set[2,3,4,3,5]" />
</form>
<span id="commSav4-29" class="commSav" >set[2,3,4,3,5]</span>
<div id="mathAns4-29" ></div>
</div>




<div class="verbatim"><br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;T1(1)=2<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;T1(2)=3<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;T1(3)=4<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;T1(4)=5<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;R10=T1<br />
</div>


<div class="math">
<table>
<tr><td>
<math xmlns="&mathml;" mathsize="big" display="block"><mstyle><mrow><mo>{</mo><mn>2</mn><mo>,</mo><mn>3</mn><mo>,</mo><mn>4</mn><mo>,</mo><mn>5</mn><mo>}</mo></mrow></mstyle></math>
</td></tr>
</table>
</div>




<div class="returnType">
Type: Set PositiveInteger
</div>



<p>By default, the starting index for generated FORTRAN arrays is  <math xmlns="&mathml;" mathsize="big"><mstyle><mn>0</mn></mstyle></math>.
</p>



<div id="spadComm4-30" class="spadComm" >
<form id="formComm4-30" action="javascript:makeRequest('4-30');" >
<input id="comm4-30" type="text" class="command" style="width: 22em;" value="matrix [ [2.3,9.7],[0.0,18.778] ]" />
</form>
<span id="commSav4-30" class="commSav" >matrix [ [2.3,9.7],[0.0,18.778] ]</span>
<div id="mathAns4-30" ></div>
</div>




<div class="verbatim"><br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;T1(0,0)=2.3<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;T1(0,1)=9.7<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;T1(1,0)=0.0<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;T1(1,1)=18.778<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;T1<br />
</div>


<div class="math">
<table>
<tr><td>
<math xmlns="&mathml;" mathsize="big" display="block"><mstyle><mrow><mo>[</mo><mtable><mtr><mtd><mrow><mn>2</mn><mo>.</mo><mn>3</mn></mrow></mtd><mtd><mrow><mn>9</mn><mo>.</mo><mn>7</mn></mrow></mtd></mtr><mtr><mtd><mrow><mn>0</mn><mo>.</mo><mn>0</mn></mrow></mtd><mtd><mrow><mn>18</mn><mo>.</mo><mn>778</mn></mrow></mtd></mtr></mtable><mo>]</mo></mrow></mstyle></math>
</td></tr>
</table>
</div>




<div class="returnType">
Type: Matrix Float
</div>



<p>To change the starting index for generated FORTRAN arrays to be  <math xmlns="&mathml;" mathsize="big"><mstyle><mn>1</mn></mstyle></math>,
<span class="index">set fortran startindex</span><a name="chapter-4-53"/> issue this.  This value can only be  <math xmlns="&mathml;" mathsize="big"><mstyle><mn>0</mn></mstyle></math>
or  <math xmlns="&mathml;" mathsize="big"><mstyle><mn>1</mn></mstyle></math>.
</p>



<div id="spadComm4-31" class="spadComm" >
<form id="formComm4-31" action="javascript:makeRequest('4-31');" >
<input id="comm4-31" type="text" class="command" style="width: 17em;" value=")set fortran startindex 1" />
</form>
<span id="commSav4-31" class="commSav" >)set fortran startindex 1</span>
<div id="mathAns4-31" ></div>
</div>



<p>Look at the code generated for the matrix again.
</p>



<div id="spadComm4-32" class="spadComm" >
<form id="formComm4-32" action="javascript:makeRequest('4-32');" >
<input id="comm4-32" type="text" class="command" style="width: 22em;" value="matrix [ [2.3,9.7],[0.0,18.778] ]" />
</form>
<span id="commSav4-32" class="commSav" >matrix [ [2.3,9.7],[0.0,18.778] ]</span>
<div id="mathAns4-32" ></div>
</div>




<div class="verbatim"><br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;T1(1,1)=2.3<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;T1(1,2)=9.7<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;T1(2,1)=0.0<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;T1(2,2)=18.778<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;T1<br />
</div>


<div class="math">
<table>
<tr><td>
<math xmlns="&mathml;" mathsize="big" display="block"><mstyle><mrow><mo>[</mo><mtable><mtr><mtd><mrow><mn>2</mn><mo>.</mo><mn>3</mn></mrow></mtd><mtd><mrow><mn>9</mn><mo>.</mo><mn>7</mn></mrow></mtd></mtr><mtr><mtd><mrow><mn>0</mn><mo>.</mo><mn>0</mn></mrow></mtd><mtd><mrow><mn>18</mn><mo>.</mo><mn>778</mn></mrow></mtd></mtr></mtable><mo>]</mo></mrow></mstyle></math>
</td></tr>
</table>
</div>




<div class="returnType">
Type: Matrix Float
</div>






</div><a href="book-contents.xhtml" style="margin-right: 10px;">Book Contents</a>
<a href="section-4.6.xhtml" style="margin-right: 10px;">Previous Section 4.6 IBM Script Formula Format</a><a href="section-5.0.xhtml" style="margin-right: 10px;">Next Section 5.0 Interactive Language</a><a href="book-index.xhtml">Book Index</a></body>
</html>