<?xml version="1.0" encoding="UTF-8" ?>

<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.1 plus MathML 2.0//EN"
"http://www.w3.org/TR/MathML2/dtd/xhtml-math11-f.dtd" [
<!ENTITY mathml "http://www.w3.org/1998/Math/MathML">
]>

<html xmlns="http://www.w3.org/1999/xhtml"
      xmlns:xlink="http://www.w3.org/1999/xlink" >


  <head>
    <title>Section13.7</title>
    <link rel="stylesheet" type="text/css" href="graphicstyle.css" />
    <script type="text/javascript" src="bookax1.js" />
  </head>

  <body>
<a href="book-contents.xhtml" style="margin-right: 10px;">Book Contents</a><a href="section-13.6.xhtml" style="margin-right: 10px;">Previous Section 13.6 Representation</a><a href="section-13.8.xhtml" style="margin-right: 10px;">Next Section 13.8 Add Domain</a>
<a href="book-index.xhtml">Book Index</a><div class="section"  id="sec-13.7">
<h2 class="sectiontitle">13.7  Multiple Representations</h2>


<a name="ugDomainsMultipleReps" class="label"/>



<p>To write functions that implement the operations of a domain, you
want to choose the most computationally efficient
data structure to represent the elements of your domain.
</p>


<p>A classic problem in computer algebra is the optimal choice for an
internal representation of polynomials.
If you create a polynomial, say <math xmlns="&mathml;" mathsize="big"><mstyle><mrow><mn>3</mn><msup><mi>x</mi><mn>2</mn></msup><mo>+</mo><mn>5</mn></mrow></mstyle></math>, how
does FriCAS hold this value internally?
There are many ways.
FriCAS has nearly a dozen different representations of
polynomials, one to suit almost any purpose.
Algorithms for solving polynomial equations work most
efficiently with polynomials represented one way, whereas those for
factoring polynomials are most efficient using another.
One often-used representation is  a list of terms, each term
consisting of exponent-coefficient records written in the order
of decreasing exponents.
For example, the polynomial <math xmlns="&mathml;" mathsize="big"><mstyle><mrow><mn>3</mn><msup><mi>x</mi><mn>2</mn></msup><mo>+</mo><mn>5</mn></mrow></mstyle></math> is
<!-- I changed the k's in next line to e's as I thought that was
 clearer. -->
represented by the list <math xmlns="&mathml;" mathsize="big"><mstyle><mrow><mo>[</mo><mo>[</mo><mi>e</mi><mo>:</mo><mn>2</mn><mo>,</mo><mi>c</mi><mo>:</mo><mn>3</mn><mo>]</mo><mo>,</mo><mo>[</mo><mi>e</mi><mo>:</mo><mn>0</mn><mo>,</mo><mi>c</mi><mo>:</mo><mn>5</mn><mo>]</mo><mo>]</mo></mrow></mstyle></math>.
</p>


<p>What is the optimal data structure for a matrix?
It depends on the application.
For large sparse matrices, a linked-list structure of records
holding only the non-zero elements may be optimal.
If the elements can be defined by a simple formula
<math xmlns="&mathml;" mathsize="big"><mstyle><mrow><mi>f</mi><mo>(</mo><mi>i</mi><mo>,</mo><mi>j</mi><mo>)</mo></mrow></mstyle></math>, then a compiled function for
<math xmlns="&mathml;" mathsize="big"><mstyle><mi>f</mi></mstyle></math> may be optimal.
Some programmers prefer to represent ordinary matrices as vectors
of vectors.
Others prefer to represent matrices by one big linear array where
elements are accessed with linearly computable indexes.
</p>


<p>While all these simultaneous structures tend to be confusing,
FriCAS provides a helpful organizational tool for such a purpose:
categories.
<span class="teletype"> PolynomialCategory</span>, for example, provides a uniform user
interface across all polynomial types.
Each kind of polynomial implements functions for
all these operations, each in its own way.
If you use only the top-level operations in
<span class="teletype"> PolynomialCategory</span> you usually do not care what kind
of polynomial implementation is used.
</p>


<p><!-- I've often thought, though, that it would be nice to be
 be able to use conditionals for representations. -->
Within a given domain, however, you define (at most) one
representation.<span class="footnote">You can make that representation a
<span class="teletype"> Union</span> type, however.
See <a href="section-2.5.xhtml#ugTypesUnions" class="ref" >ugTypesUnions</a> 
for examples of unions.</span>
If you want to have multiple representations (that is, several
domains, each with its own representation), use a category to
describe the <span class="teletype"> Exports</span>, then define separate domains for each
representation.
</p>




</div><a href="book-contents.xhtml" style="margin-right: 10px;">Book Contents</a>
<a href="section-13.6.xhtml" style="margin-right: 10px;">Previous Section 13.6 Representation</a><a href="section-13.8.xhtml" style="margin-right: 10px;">Next Section 13.8 Add Domain</a>
<a href="book-index.xhtml">Book Index</a></body>
</html>