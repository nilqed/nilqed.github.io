<?xml version="1.0" encoding="UTF-8" ?>

<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.1 plus MathML 2.0//EN"
"http://www.w3.org/TR/MathML2/dtd/xhtml-math11-f.dtd" [
<!ENTITY mathml "http://www.w3.org/1998/Math/MathML">
]>

<html xmlns="http://www.w3.org/1999/xhtml"
      xmlns:xlink="http://www.w3.org/1999/xlink" >


  <head>
    <title>Section9.24</title>
    <link rel="stylesheet" type="text/css" href="graphicstyle.css" />
    <script type="text/javascript" src="bookax1.js" />
  </head>

  <body>
<a href="book-contents.xhtml" style="margin-right: 10px;">Book Contents</a><a href="section-9.23.xhtml" style="margin-right: 10px;">Previous Section 9.23 FactoredFunctions2</a><a href="section-9.25.xhtml" style="margin-right: 10px;">Next Section 9.25 FileName</a>
<a href="book-index.xhtml">Book Index</a><div class="section"  id="sec-9.24">
<h2 class="sectiontitle">9.24  File</h2>


<a name="FileXmpPage" class="label"/>


<p>The <span class="teletype">File(S)</span> domain provides a basic interface to read and
write values of type <span class="teletype">S</span> in files.
</p>


<p>Before working with a file, it must be made accessible to FriCAS with
the <span class="spadfunFrom" >open</span><span class="index">open</span><a name="chapter-9-60"/><span class="index">File</span><a name="chapter-9-61"/> operation.
</p>




<div id="spadComm9-196" class="spadComm" >
<form id="formComm9-196" action="javascript:makeRequest('9-196');" >
<input id="comm9-196" type="text" class="command" style="width: 36em;" value='ifile:File List Integer:=open("/tmp/jazz1","output")  ' />
</form>
<span id="commSav9-196" class="commSav" >ifile:File List Integer:=open("/tmp/jazz1","output")  </span>
<div id="mathAns9-196" ></div>
</div>


<div class="math">
<table>
<tr><td>
<math xmlns="&mathml;" mathsize="big" display="block"><mstyle><mrow><mtext><mrow><mtext mathvariant='monospace'>"/tmp/jazz1"</mtext></mrow></mtext></mrow></mstyle></math>
</td></tr>
</table>
</div>




<div class="returnType">
Type: File List Integer
</div>



<p>The <span class="spadfunFrom" >open</span><span class="index">open</span><a name="chapter-9-62"/><span class="index">File</span><a name="chapter-9-63"/> function arguments are a <span class="teletype">FileName</span>
and a <span class="teletype">String</span> specifying the mode.  If a full pathname is not
specified, the current default directory is assumed.  The mode must be
one of <span class="italic"><span class="teletype">input</span></span> or <span class="italic"><span class="teletype">output</span></span>.  If it is not specified, 
<span class="italic"><span class="teletype">input</span></span> is assumed.  Once the file has been opened, you can read or
write data.
</p>


<p>The operations <span class="spadfunFrom" >read</span><span class="index">read</span><a name="chapter-9-64"/><span class="index">File</span><a name="chapter-9-65"/> and <span class="spadfunFrom" >write</span><span class="index">write</span><a name="chapter-9-66"/><span class="index">File</span><a name="chapter-9-67"/> are
provided.
</p>




<div id="spadComm9-197" class="spadComm" >
<form id="formComm9-197" action="javascript:makeRequest('9-197');" >
<input id="comm9-197" type="text" class="command" style="width: 16em;" value="write!(ifile, [-1,2,3])" />
</form>
<span id="commSav9-197" class="commSav" >write!(ifile, [-1,2,3])</span>
<div id="mathAns9-197" ></div>
</div>


<div class="math">
<table>
<tr><td>
<math xmlns="&mathml;" mathsize="big" display="block"><mstyle><mrow><mo>[</mo><mo>-</mo><mn>1</mn><mo>,</mo><mn>2</mn><mo>,</mo><mn>3</mn><mo>]</mo></mrow></mstyle></math>
</td></tr>
</table>
</div>




<div class="returnType">
Type: List Integer
</div>





<div id="spadComm9-198" class="spadComm" >
<form id="formComm9-198" action="javascript:makeRequest('9-198');" >
<input id="comm9-198" type="text" class="command" style="width: 20em;" value="write!(ifile, [10,-10,0,111])" />
</form>
<span id="commSav9-198" class="commSav" >write!(ifile, [10,-10,0,111])</span>
<div id="mathAns9-198" ></div>
</div>


<div class="math">
<table>
<tr><td>
<math xmlns="&mathml;" mathsize="big" display="block"><mstyle><mrow><mo>[</mo><mn>10</mn><mo>,</mo><mo>-</mo><mn>10</mn><mo>,</mo><mn>0</mn><mo>,</mo><mn>111</mn><mo>]</mo></mrow></mstyle></math>
</td></tr>
</table>
</div>




<div class="returnType">
Type: List Integer
</div>





<div id="spadComm9-199" class="spadComm" >
<form id="formComm9-199" action="javascript:makeRequest('9-199');" >
<input id="comm9-199" type="text" class="command" style="width: 12em;" value="write!(ifile, [7])" />
</form>
<span id="commSav9-199" class="commSav" >write!(ifile, [7])</span>
<div id="mathAns9-199" ></div>
</div>


<div class="math">
<table>
<tr><td>
<math xmlns="&mathml;" mathsize="big" display="block"><mstyle><mrow><mo>[</mo><mn>7</mn><mo>]</mo></mrow></mstyle></math>
</td></tr>
</table>
</div>




<div class="returnType">
Type: List Integer
</div>



<p>You can change from writing to reading (or vice versa) by reopening a file.
</p>




<div id="spadComm9-200" class="spadComm" >
<form id="formComm9-200" action="javascript:makeRequest('9-200');" >
<input id="comm9-200" type="text" class="command" style="width: 16em;" value='reopen!(ifile, "input")' />
</form>
<span id="commSav9-200" class="commSav" >reopen!(ifile, "input")</span>
<div id="mathAns9-200" ></div>
</div>


<div class="math">
<table>
<tr><td>
<math xmlns="&mathml;" mathsize="big" display="block"><mstyle><mrow><mtext><mrow><mtext mathvariant='monospace'>"/tmp/jazz1"</mtext></mrow></mtext></mrow></mstyle></math>
</td></tr>
</table>
</div>




<div class="returnType">
Type: File List Integer
</div>





<div id="spadComm9-201" class="spadComm" >
<form id="formComm9-201" action="javascript:makeRequest('9-201');" >
<input id="comm9-201" type="text" class="command" style="width: 8em;" value="read! ifile" />
</form>
<span id="commSav9-201" class="commSav" >read! ifile</span>
<div id="mathAns9-201" ></div>
</div>


<div class="math">
<table>
<tr><td>
<math xmlns="&mathml;" mathsize="big" display="block"><mstyle><mrow><mo>[</mo><mo>-</mo><mn>1</mn><mo>,</mo><mn>2</mn><mo>,</mo><mn>3</mn><mo>]</mo></mrow></mstyle></math>
</td></tr>
</table>
</div>




<div class="returnType">
Type: List Integer
</div>





<div id="spadComm9-202" class="spadComm" >
<form id="formComm9-202" action="javascript:makeRequest('9-202');" >
<input id="comm9-202" type="text" class="command" style="width: 8em;" value="read! ifile" />
</form>
<span id="commSav9-202" class="commSav" >read! ifile</span>
<div id="mathAns9-202" ></div>
</div>


<div class="math">
<table>
<tr><td>
<math xmlns="&mathml;" mathsize="big" display="block"><mstyle><mrow><mo>[</mo><mn>10</mn><mo>,</mo><mo>-</mo><mn>10</mn><mo>,</mo><mn>0</mn><mo>,</mo><mn>111</mn><mo>]</mo></mrow></mstyle></math>
</td></tr>
</table>
</div>




<div class="returnType">
Type: List Integer
</div>



<p>The <span class="spadfunFrom" >read</span><span class="index">read</span><a name="chapter-9-68"/><span class="index">File</span><a name="chapter-9-69"/> operation can cause an error if one tries
to read more data than is in the file.  To guard against this
possibility the <span class="spadfunFrom" >readIfCan</span><span class="index">readIfCan</span><a name="chapter-9-70"/><span class="index">File</span><a name="chapter-9-71"/> operation should be
used.
</p>




<div id="spadComm9-203" class="spadComm" >
<form id="formComm9-203" action="javascript:makeRequest('9-203');" >
<input id="comm9-203" type="text" class="command" style="width: 12em;" value="readIfCan! ifile  " />
</form>
<span id="commSav9-203" class="commSav" >readIfCan! ifile  </span>
<div id="mathAns9-203" ></div>
</div>


<div class="math">
<table>
<tr><td>
<math xmlns="&mathml;" mathsize="big" display="block"><mstyle><mrow><mo>[</mo><mn>7</mn><mo>]</mo></mrow></mstyle></math>
</td></tr>
</table>
</div>




<div class="returnType">
Type: Union(List Integer,...)
</div>





<div id="spadComm9-204" class="spadComm" >
<form id="formComm9-204" action="javascript:makeRequest('9-204');" >
<input id="comm9-204" type="text" class="command" style="width: 12em;" value="readIfCan! ifile  " />
</form>
<span id="commSav9-204" class="commSav" >readIfCan! ifile  </span>
<div id="mathAns9-204" ></div>
</div>


<div class="math">
<table>
<tr><td>
<math xmlns="&mathml;" mathsize="big" display="block"><mstyle><mrow><mtext><mrow><mtext mathvariant='monospace'>"failed"</mtext></mrow></mtext></mrow></mstyle></math>
</td></tr>
</table>
</div>




<div class="returnType">
Type: Union("failed",...)
</div>



<p>You can find the current mode of the file, and the file's name.
</p>




<div id="spadComm9-205" class="spadComm" >
<form id="formComm9-205" action="javascript:makeRequest('9-205');" >
<input id="comm9-205" type="text" class="command" style="width: 8em;" value="iomode ifile" />
</form>
<span id="commSav9-205" class="commSav" >iomode ifile</span>
<div id="mathAns9-205" ></div>
</div>


<div class="math">
<table>
<tr><td>
<math xmlns="&mathml;" mathsize="big" display="block"><mstyle><mrow><mtext><mrow><mtext mathvariant='monospace'>"input"</mtext></mrow></mtext></mrow></mstyle></math>
</td></tr>
</table>
</div>




<div class="returnType">
Type: String
</div>





<div id="spadComm9-206" class="spadComm" >
<form id="formComm9-206" action="javascript:makeRequest('9-206');" >
<input id="comm9-206" type="text" class="command" style="width: 7em;" value="name ifile" />
</form>
<span id="commSav9-206" class="commSav" >name ifile</span>
<div id="mathAns9-206" ></div>
</div>


<div class="math">
<table>
<tr><td>
<math xmlns="&mathml;" mathsize="big" display="block"><mstyle><mrow><mtext><mrow><mtext mathvariant='monospace'>"/tmp/jazz1"</mtext></mrow></mtext></mrow></mstyle></math>
</td></tr>
</table>
</div>




<div class="returnType">
Type: FileName
</div>



<p>When you are finished with a file, you should close it.
</p>




<div id="spadComm9-207" class="spadComm" >
<form id="formComm9-207" action="javascript:makeRequest('9-207');" >
<input id="comm9-207" type="text" class="command" style="width: 8em;" value="close! ifile" />
</form>
<span id="commSav9-207" class="commSav" >close! ifile</span>
<div id="mathAns9-207" ></div>
</div>


<div class="math">
<table>
<tr><td>
<math xmlns="&mathml;" mathsize="big" display="block"><mstyle><mrow><mtext><mrow><mtext mathvariant='monospace'>"/tmp/jazz1"</mtext></mrow></mtext></mrow></mstyle></math>
</td></tr>
</table>
</div>




<div class="returnType">
Type: File List Integer
</div>





<div id="spadComm9-208" class="spadComm" >
<form id="formComm9-208" action="javascript:makeRequest('9-208');" >
<input id="comm9-208" type="text" class="command" style="width: 14em;" value=")system rm /tmp/jazz1" />
</form>
<span id="commSav9-208" class="commSav" >)system rm /tmp/jazz1</span>
<div id="mathAns9-208" ></div>
</div>



<p>A limitation of the underlying LISP system is that not all values can
be represented in a file.  In particular, delayed values containing
compiled functions cannot be saved.
</p>


<p>For more information on related topics, see 
<a href="section-9.81.xhtml#TextFileXmpPage" class="ref" >TextFileXmpPage</a> ,
<a href="section-9.38.xhtml#KeyedAccessFileXmpPage" class="ref" >KeyedAccessFileXmpPage</a> , 
<a href="section-9.41.xhtml#LibraryXmpPage" class="ref" >LibraryXmpPage</a> , and
<a href="section-9.25.xhtml#FileNameXmpPage" class="ref" >FileNameXmpPage</a> .
</p>




</div><a href="book-contents.xhtml" style="margin-right: 10px;">Book Contents</a>
<a href="section-9.23.xhtml" style="margin-right: 10px;">Previous Section 9.23 FactoredFunctions2</a><a href="section-9.25.xhtml" style="margin-right: 10px;">Next Section 9.25 FileName</a>
<a href="book-index.xhtml">Book Index</a></body>
</html>