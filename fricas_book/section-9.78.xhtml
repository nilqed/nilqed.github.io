<?xml version="1.0" encoding="UTF-8" ?>

<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.1 plus MathML 2.0//EN"
"http://www.w3.org/TR/MathML2/dtd/xhtml-math11-f.dtd" [
<!ENTITY mathml "http://www.w3.org/1998/Math/MathML">
]>

<html xmlns="http://www.w3.org/1999/xhtml"
      xmlns:xlink="http://www.w3.org/1999/xlink" >


  <head>
    <title>Section9.78</title>
    <link rel="stylesheet" type="text/css" href="graphicstyle.css" />
    <script type="text/javascript" src="bookax1.js" />
  </head>

  <body>
<a href="book-contents.xhtml" style="margin-right: 10px;">Book Contents</a><a href="section-9.77.xhtml" style="margin-right: 10px;">Previous Section 9.77 String</a><a href="section-9.79.xhtml" style="margin-right: 10px;">Next Section 9.79 Symbol</a>
<a href="book-index.xhtml">Book Index</a><div class="section"  id="sec-9.78">
<h2 class="sectiontitle">9.78  StringTable</h2>


<a name="StringTableXmpPage" class="label"/>


<p>This domain provides a table type in which the keys are known to be
strings so special techniques can be used.  Other than performance,
the type <span class="teletype">StringTable(S)</span> should behave exactly the same way as
<span class="teletype">Table(String,S)</span>.  See <a href="section-9.18.xhtml#EqTableXmpPage" class="ref" >TableXmpPage</a> 
for general information about tables.
</p>


<p>This creates a new table whose keys are strings.
</p>




<div id="spadComm9-131" class="spadComm" >
<form id="formComm9-131" action="javascript:makeRequest('9-131');" >
<input id="comm9-131" type="text" class="command" style="width: 24em;" value="t: StringTable(Integer) := table()  " />
</form>
<span id="commSav9-131" class="commSav" >t: StringTable(Integer) := table()  </span>
<div id="mathAns9-131" ></div>
</div>


<div class="math">
<table>
<tr><td>
<math xmlns="&mathml;" mathsize="big" display="block"><mstyle><mrow><mi>table</mi><mo>(</mo><mo>)</mo></mrow></mstyle></math>
</td></tr>
</table>
</div>




<div class="returnType">
Type: StringTable Integer
</div>



<p>The value associated with each string key is the number of characters
in the string.
</p>




<div class="verbatim"><br />
for&nbsp;s&nbsp;in&nbsp;split("My&nbsp;name&nbsp;is&nbsp;Ian&nbsp;Watt.",char&nbsp;"&nbsp;")<br />
&nbsp;&nbsp;repeat<br />
&nbsp;&nbsp;&nbsp;&nbsp;t.s&nbsp;:=&nbsp;#s<br />
</div>




<div class="returnType">
Void
</div>





<div id="spadComm9-132" class="spadComm" >
<form id="formComm9-132" action="javascript:makeRequest('9-132');" >
<input id="comm9-132" type="text" class="command" style="width: 30em;" value="for key in keys t repeat output [key, t.key] " />
</form>
<span id="commSav9-132" class="commSav" >for key in keys t repeat output [key, t.key] </span>
<div id="mathAns9-132" ></div>
</div>




<div class="verbatim"><br />
&nbsp;&nbsp;&nbsp;["Ian",3]<br />
&nbsp;&nbsp;&nbsp;["My",2]<br />
&nbsp;&nbsp;&nbsp;["Watt.",5]<br />
&nbsp;&nbsp;&nbsp;["name",4]<br />
&nbsp;&nbsp;&nbsp;["is",2]<br />
</div>




<div class="returnType">
Void
</div>





</div><a href="book-contents.xhtml" style="margin-right: 10px;">Book Contents</a>
<a href="section-9.77.xhtml" style="margin-right: 10px;">Previous Section 9.77 String</a><a href="section-9.79.xhtml" style="margin-right: 10px;">Next Section 9.79 Symbol</a>
<a href="book-index.xhtml">Book Index</a></body>
</html>