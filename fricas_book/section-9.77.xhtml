<?xml version="1.0" encoding="UTF-8" ?>

<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.1 plus MathML 2.0//EN"
"http://www.w3.org/TR/MathML2/dtd/xhtml-math11-f.dtd" [
<!ENTITY mathml "http://www.w3.org/1998/Math/MathML">
]>

<html xmlns="http://www.w3.org/1999/xhtml"
      xmlns:xlink="http://www.w3.org/1999/xlink" >


  <head>
    <title>Section9.77</title>
    <link rel="stylesheet" type="text/css" href="graphicstyle.css" />
    <script type="text/javascript" src="bookax1.js" />
  </head>

  <body>
<a href="book-contents.xhtml" style="margin-right: 10px;">Book Contents</a><a href="section-9.76.xhtml" style="margin-right: 10px;">Previous Section 9.76 Stream</a><a href="section-9.78.xhtml" style="margin-right: 10px;">Next Section 9.78 StringTable</a>
<a href="book-index.xhtml">Book Index</a><div class="section"  id="sec-9.77">
<h2 class="sectiontitle">9.77  String</h2>


<a name="StringXmpPage" class="label"/>


<p>The type <span class="teletype">String</span> provides character strings.  Character strings
provide all the operations for a one-dimensional array of characters,
plus additional operations for manipulating text.  For more
information on related topics, see 
<a href="section-9.8.xhtml#CharacterXmpPage" class="ref" >CharacterXmpPage</a>  and
<a href="section-9.9.xhtml#CharacterClassXmpPage" class="ref" >CharacterClassXmpPage</a> .  
You can also issue the system command
<span class="teletype">)show String</span> to display the full list of operations defined
by <span class="teletype">String</span>.
</p>


<p>String values can be created using double quotes.
</p>




<div id="spadComm9-96" class="spadComm" >
<form id="formComm9-96" action="javascript:makeRequest('9-96');" >
<input id="comm9-96" type="text" class="command" style="width: 16em;" value='hello := "Hello AXIOM!" ' />
</form>
<span id="commSav9-96" class="commSav" >hello := "Hello AXIOM!" </span>
<div id="mathAns9-96" ></div>
</div>


<div class="math">
<table>
<tr><td>
<math xmlns="&mathml;" mathsize="big" display="block"><mstyle><mrow><mtext><mrow><mtext mathvariant='monospace'>"<mspace width="0.5em"/>Hello<mspace width="0.5em"/>AXIOM<mspace width="0.5em"/>!<mspace width="0.5em"/>"<mspace width="0.5em"/></mtext></mrow></mtext></mrow></mstyle></math>
</td></tr>
</table>
</div>




<div class="returnType">
Type: String
</div>



<p>Note, however, that double quotes and underscores must be preceded by
an extra underscore.
</p>




<div id="spadComm9-97" class="spadComm" >
<form id="formComm9-97" action="javascript:makeRequest('9-97');" >
<input id="comm9-97" type="text" class="command" style="width: 23em;" value='said  := "Jane said, _"Look!_"" ' />
</form>
<span id="commSav9-97" class="commSav" >said  := "Jane said, _"Look!_"" </span>
<div id="mathAns9-97" ></div>
</div>


<div class="math">
<table>
<tr><td>
<math xmlns="&mathml;" mathsize="big" display="block"><mstyle><mrow><mtext><mrow><mtext mathvariant='monospace'>"<mspace width="0.5em"/>Jane<mspace width="0.5em"/>said<mspace width="0.5em"/>,<mspace width="0.5em"/>"<mspace width="0.5em"/>Look<mspace width="0.5em"/>!<mspace width="0.5em"/>"<mspace width="0.5em"/>"<mspace width="0.5em"/></mtext></mrow></mtext></mrow></mstyle></math>
</td></tr>
</table>
</div>




<div class="returnType">
Type: String
</div>





<div id="spadComm9-98" class="spadComm" >
<form id="formComm9-98" action="javascript:makeRequest('9-98');" >
<input id="comm9-98" type="text" class="command" style="width: 33em;" value='saw   := "She saw exactly one underscore: __." ' />
</form>
<span id="commSav9-98" class="commSav" >saw   := "She saw exactly one underscore: __." </span>
<div id="mathAns9-98" ></div>
</div>


<div class="math">
<table>
<tr><td>
<math xmlns="&mathml;" mathsize="big" display="block"><mstyle><mrow><mtext><mrow><mtext mathvariant='monospace'>"<mspace width="0.5em"/>She<mspace width="0.5em"/>saw<mspace width="0.5em"/>exactly<mspace width="0.5em"/>one<mspace width="0.5em"/>underscore<mspace width="0.5em"/>:<mspace width="0.5em"/>_<mspace width="0.5em"/>.<mspace width="0.5em"/>"<mspace width="0.5em"/></mtext></mrow></mtext></mrow></mstyle></math>
</td></tr>
</table>
</div>




<div class="returnType">
Type: String
</div>



<p>It is also possible to use <span class="spadfunFrom" >new</span><span class="index">new</span><a name="chapter-9-54"/><span class="index">String</span><a name="chapter-9-55"/> to create a
string of any size filled with a given character.  Since there are
many <span class="teletype">new</span> functions it is necessary to indicate the desired type.
</p>




<div id="spadComm9-99" class="spadComm" >
<form id="formComm9-99" action="javascript:makeRequest('9-99');" >
<input id="comm9-99" type="text" class="command" style="width: 23em;" value='gasp: String := new(32, char "x") ' />
</form>
<span id="commSav9-99" class="commSav" >gasp: String := new(32, char "x") </span>
<div id="mathAns9-99" ></div>
</div>


<div class="math">
<table>
<tr><td>
<math xmlns="&mathml;" mathsize="big" display="block"><mstyle><mrow><mtext><mrow><mtext mathvariant='monospace'>"<mspace width="0.5em"/>xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx<mspace width="0.5em"/>"<mspace width="0.5em"/></mtext></mrow></mtext></mrow></mstyle></math>
</td></tr>
</table>
</div>




<div class="returnType">
Type: String
</div>



<p>The length of a string is given by <span class="spadopFrom" title="List"> #</span>.
</p>




<div id="spadComm9-100" class="spadComm" >
<form id="formComm9-100" action="javascript:makeRequest('9-100');" >
<input id="comm9-100" type="text" class="command" style="width: 5em;" value=" #gasp " />
</form>
<span id="commSav9-100" class="commSav" > #gasp </span>
<div id="mathAns9-100" ></div>
</div>


<div class="math">
<table>
<tr><td>
<math xmlns="&mathml;" mathsize="big" display="block"><mstyle><mn>32</mn></mstyle></math>
</td></tr>
</table>
</div>




<div class="returnType">
Type: PositiveInteger
</div>



<p>Indexing operations allow characters to be extracted or replaced in strings.
For any string <span class="teletype">s</span>, indices lie in the range <span class="teletype">1.. #s</span>.
</p>




<div id="spadComm9-101" class="spadComm" >
<form id="formComm9-101" action="javascript:makeRequest('9-101');" >
<input id="comm9-101" type="text" class="command" style="width: 6em;" value="hello.2 " />
</form>
<span id="commSav9-101" class="commSav" >hello.2 </span>
<div id="mathAns9-101" ></div>
</div>


<div class="math">
<table>
<tr><td>
<math xmlns="&mathml;" mathsize="big" display="block"><mstyle><mi>e</mi></mstyle></math>
</td></tr>
</table>
</div>




<div class="returnType">
Type: Character
</div>



<p>Indexing is really just the application of a string to a subscript,
so any application syntax works.
</p>




<div id="spadComm9-102" class="spadComm" >
<form id="formComm9-102" action="javascript:makeRequest('9-102');" >
<input id="comm9-102" type="text" class="command" style="width: 6em;" value="hello 2  " />
</form>
<span id="commSav9-102" class="commSav" >hello 2  </span>
<div id="mathAns9-102" ></div>
</div>


<div class="math">
<table>
<tr><td>
<math xmlns="&mathml;" mathsize="big" display="block"><mstyle><mi>e</mi></mstyle></math>
</td></tr>
</table>
</div>




<div class="returnType">
Type: Character
</div>





<div id="spadComm9-103" class="spadComm" >
<form id="formComm9-103" action="javascript:makeRequest('9-103');" >
<input id="comm9-103" type="text" class="command" style="width: 6em;" value="hello(2) " />
</form>
<span id="commSav9-103" class="commSav" >hello(2) </span>
<div id="mathAns9-103" ></div>
</div>


<div class="math">
<table>
<tr><td>
<math xmlns="&mathml;" mathsize="big" display="block"><mstyle><mi>e</mi></mstyle></math>
</td></tr>
</table>
</div>




<div class="returnType">
Type: Character
</div>



<p>If it is important not to modify a given string, it should be copied
before any updating operations are used.
</p>




<div id="spadComm9-104" class="spadComm" >
<form id="formComm9-104" action="javascript:makeRequest('9-104');" >
<input id="comm9-104" type="text" class="command" style="width: 14em;" value="hullo := copy hello " />
</form>
<span id="commSav9-104" class="commSav" >hullo := copy hello </span>
<div id="mathAns9-104" ></div>
</div>


<div class="math">
<table>
<tr><td>
<math xmlns="&mathml;" mathsize="big" display="block"><mstyle><mrow><mtext><mrow><mtext mathvariant='monospace'>"<mspace width="0.5em"/>Hello<mspace width="0.5em"/>,<mspace width="0.5em"/>I<mspace width="0.5em"/>'<mspace width="0.5em"/>m<mspace width="0.5em"/>AXIOM<mspace width="0.5em"/>!<mspace width="0.5em"/>"<mspace width="0.5em"/></mtext></mrow></mtext></mrow></mstyle></math>
</td></tr>
</table>
</div>




<div class="returnType">
Type: String
</div>





<div id="spadComm9-105" class="spadComm" >
<form id="formComm9-105" action="javascript:makeRequest('9-105');" >
<input id="comm9-105" type="text" class="command" style="width: 24em;" value='hullo.2 := char "u"; [hello, hullo] ' />
</form>
<span id="commSav9-105" class="commSav" >hullo.2 := char "u"; [hello, hullo] </span>
<div id="mathAns9-105" ></div>
</div>


<div class="math">
<table>
<tr><td>
<math xmlns="&mathml;" mathsize="big" display="block"><mstyle><mrow><mo>[</mo><mtext><mrow><mtext mathvariant='monospace'>"<mspace width="0.5em"/>Hello<mspace width="0.5em"/>,<mspace width="0.5em"/>I<mspace width="0.5em"/>'<mspace width="0.5em"/>m<mspace width="0.5em"/>AXIOM<mspace width="0.5em"/>!<mspace width="0.5em"/>"<mspace width="0.5em"/></mtext></mrow></mtext><mo>,</mo><mtext><mrow><mtext mathvariant='monospace'>"<mspace width="0.5em"/>Hullo<mspace width="0.5em"/>,<mspace width="0.5em"/>I<mspace width="0.5em"/>'<mspace width="0.5em"/>m<mspace width="0.5em"/>AXIOM<mspace width="0.5em"/>!<mspace width="0.5em"/>"<mspace width="0.5em"/></mtext></mrow></mtext><mo>]</mo></mrow></mstyle></math>
</td></tr>
</table>
</div>




<div class="returnType">
Type: List String
</div>



<p>Operations are provided to split and join strings.  The
<span class="spadfunFrom" >concat</span><span class="index">concat</span><a name="chapter-9-56"/><span class="index">String</span><a name="chapter-9-57"/> operation allows several strings to be
joined together.
</p>




<div id="spadComm9-106" class="spadComm" >
<form id="formComm9-106" action="javascript:makeRequest('9-106');" >
<input id="comm9-106" type="text" class="command" style="width: 28em;" value='saidsaw := concat ["alpha","---","omega"] ' />
</form>
<span id="commSav9-106" class="commSav" >saidsaw := concat ["alpha","---","omega"] </span>
<div id="mathAns9-106" ></div>
</div>


<div class="math">
<table>
<tr><td>
<math xmlns="&mathml;" mathsize="big" display="block"><mstyle><mrow><mtext><mrow><mtext mathvariant='monospace'>"<mspace width="0.5em"/>alpha<mspace width="0.5em"/>-<mspace width="0.5em"/>-<mspace width="0.5em"/>-<mspace width="0.5em"/>omega<mspace width="0.5em"/>"<mspace width="0.5em"/></mtext></mrow></mtext></mrow></mstyle></math>
</td></tr>
</table>
</div>




<div class="returnType">
Type: String
</div>



<p>There is a version of <span class="spadfunFrom" >concat</span><span class="index">concat</span><a name="chapter-9-58"/><span class="index">String</span><a name="chapter-9-59"/> that works with
two strings.
</p>




<div id="spadComm9-107" class="spadComm" >
<form id="formComm9-107" action="javascript:makeRequest('9-107');" >
<input id="comm9-107" type="text" class="command" style="width: 18em;" value='concat("hello ","goodbye")' />
</form>
<span id="commSav9-107" class="commSav" >concat("hello ","goodbye")</span>
<div id="mathAns9-107" ></div>
</div>


<div class="math">
<table>
<tr><td>
<math xmlns="&mathml;" mathsize="big" display="block"><mstyle><mrow><mtext><mrow><mtext mathvariant='monospace'>"<mspace width="0.5em"/>hello<mspace width="0.5em"/>goodbye<mspace width="0.5em"/>"<mspace width="0.5em"/></mtext></mrow></mtext></mrow></mstyle></math>
</td></tr>
</table>
</div>




<div class="returnType">
Type: String
</div>



<p>Juxtaposition can also be used to concatenate strings.
</p>




<div id="spadComm9-108" class="spadComm" >
<form id="formComm9-108" action="javascript:makeRequest('9-108');" >
<input id="comm9-108" type="text" class="command" style="width: 34em;" value='"This " "is " "several " "strings " "concatenated."' />
</form>
<span id="commSav9-108" class="commSav" >"This " "is " "several " "strings " "concatenated."</span>
<div id="mathAns9-108" ></div>
</div>


<div class="math">
<table>
<tr><td>
<math xmlns="&mathml;" mathsize="big" display="block"><mstyle><mrow><mtext><mrow><mtext mathvariant='monospace'>"<mspace width="0.5em"/>This<mspace width="0.5em"/>is<mspace width="0.5em"/>several<mspace width="0.5em"/>strings<mspace width="0.5em"/>concatenated<mspace width="0.5em"/>.<mspace width="0.5em"/>"<mspace width="0.5em"/></mtext></mrow></mtext></mrow></mstyle></math>
</td></tr>
</table>
</div>




<div class="returnType">
Type: String
</div>



<p>Substrings are obtained by giving an index range.
</p>




<div id="spadComm9-109" class="spadComm" >
<form id="formComm9-109" action="javascript:makeRequest('9-109');" >
<input id="comm9-109" type="text" class="command" style="width: 8em;" value="hello(1..5) " />
</form>
<span id="commSav9-109" class="commSav" >hello(1..5) </span>
<div id="mathAns9-109" ></div>
</div>


<div class="math">
<table>
<tr><td>
<math xmlns="&mathml;" mathsize="big" display="block"><mstyle><mrow><mtext><mrow><mtext mathvariant='monospace'>"<mspace width="0.5em"/>Hello<mspace width="0.5em"/>"<mspace width="0.5em"/></mtext></mrow></mtext></mrow></mstyle></math>
</td></tr>
</table>
</div>




<div class="returnType">
Type: String
</div>





<div id="spadComm9-110" class="spadComm" >
<form id="formComm9-110" action="javascript:makeRequest('9-110');" >
<input id="comm9-110" type="text" class="command" style="width: 8em;" value="hello(8..) " />
</form>
<span id="commSav9-110" class="commSav" >hello(8..) </span>
<div id="mathAns9-110" ></div>
</div>


<div class="math">
<table>
<tr><td>
<math xmlns="&mathml;" mathsize="big" display="block"><mstyle><mrow><mtext><mrow><mtext mathvariant='monospace'>"<mspace width="0.5em"/>I<mspace width="0.5em"/>'<mspace width="0.5em"/>m<mspace width="0.5em"/>AXIOM<mspace width="0.5em"/>!<mspace width="0.5em"/>"<mspace width="0.5em"/></mtext></mrow></mtext></mrow></mstyle></math>
</td></tr>
</table>
</div>




<div class="returnType">
Type: String
</div>



<p>A string can be split into several substrings by giving a separation
character or character class.
</p>




<div id="spadComm9-111" class="spadComm" >
<form id="formComm9-111" action="javascript:makeRequest('9-111');" >
<input id="comm9-111" type="text" class="command" style="width: 15em;" value='split(hello, char " ")' />
</form>
<span id="commSav9-111" class="commSav" >split(hello, char " ")</span>
<div id="mathAns9-111" ></div>
</div>


<div class="math">
<table>
<tr><td>
<math xmlns="&mathml;" mathsize="big" display="block"><mstyle><mrow><mo>[</mo><mtext><mrow><mtext mathvariant='monospace'>"<mspace width="0.5em"/>Hello<mspace width="0.5em"/>,<mspace width="0.5em"/>"<mspace width="0.5em"/></mtext></mrow></mtext><mo>,</mo><mtext><mrow><mtext mathvariant='monospace'>"<mspace width="0.5em"/>I<mspace width="0.5em"/>'<mspace width="0.5em"/>m<mspace width="0.5em"/>"<mspace width="0.5em"/></mtext></mrow></mtext><mo>,</mo><mtext><mrow><mtext mathvariant='monospace'>"<mspace width="0.5em"/>AXIOM<mspace width="0.5em"/>!<mspace width="0.5em"/>"<mspace width="0.5em"/></mtext></mrow></mtext><mo>]</mo></mrow></mstyle></math>
</td></tr>
</table>
</div>




<div class="returnType">
Type: List String
</div>





<div id="spadComm9-112" class="spadComm" >
<form id="formComm9-112" action="javascript:makeRequest('9-112');" >
<input id="comm9-112" type="text" class="command" style="width: 24em;" value="other := complement alphanumeric(); " />
</form>
<span id="commSav9-112" class="commSav" >other := complement alphanumeric(); </span>
<div id="mathAns9-112" ></div>
</div>




<div class="returnType">
Type: CharacterClass
</div>





<div id="spadComm9-113" class="spadComm" >
<form id="formComm9-113" action="javascript:makeRequest('9-113');" >
<input id="comm9-113" type="text" class="command" style="width: 14em;" value="split(saidsaw, other)" />
</form>
<span id="commSav9-113" class="commSav" >split(saidsaw, other)</span>
<div id="mathAns9-113" ></div>
</div>


<div class="math">
<table>
<tr><td>
<math xmlns="&mathml;" mathsize="big" display="block"><mstyle><mrow><mo>[</mo><mtext><mrow><mtext mathvariant='monospace'>"<mspace width="0.5em"/>alpha<mspace width="0.5em"/>"<mspace width="0.5em"/></mtext></mrow></mtext><mo>,</mo><mtext><mrow><mtext mathvariant='monospace'>"<mspace width="0.5em"/>omega<mspace width="0.5em"/>"<mspace width="0.5em"/></mtext></mrow></mtext><mo>]</mo></mrow></mstyle></math>
</td></tr>
</table>
</div>




<div class="returnType">
Type: List String
</div>



<p>Unwanted characters can be trimmed from the beginning or end of a string
using the operations <span class="spadfunFrom" >trim</span><span class="index">trim</span><a name="chapter-9-60"/><span class="index">String</span><a name="chapter-9-61"/>, <span class="spadfunFrom" >leftTrim</span><span class="index">leftTrim</span><a name="chapter-9-62"/><span class="index">String</span><a name="chapter-9-63"/>
and <span class="spadfunFrom" >rightTrim</span><span class="index">rightTrim</span><a name="chapter-9-64"/><span class="index">String</span><a name="chapter-9-65"/>.
</p>




<div id="spadComm9-114" class="spadComm" >
<form id="formComm9-114" action="javascript:makeRequest('9-114');" >
<input id="comm9-114" type="text" class="command" style="width: 27em;" value='trim(" # # ++ relax ++  # #", char " #")' />
</form>
<span id="commSav9-114" class="commSav" >trim(" # # ++ relax ++  # #", char " #")</span>
<div id="mathAns9-114" ></div>
</div>


<div class="math">
<table>
<tr><td>
<math xmlns="&mathml;" mathsize="big" display="block"><mstyle><mrow><mtext><mrow><mtext mathvariant='monospace'>"<mspace width="0.5em"/>+<mspace width="0.5em"/>+<mspace width="0.5em"/>relax<mspace width="0.5em"/>+<mspace width="0.5em"/>+<mspace width="0.5em"/>"<mspace width="0.5em"/></mtext></mrow></mtext></mrow></mstyle></math>
</td></tr>
</table>
</div>




<div class="returnType">
Type: String
</div>



<p>Each of these functions takes a string and a second argument to specify
the characters to be discarded.
</p>




<div id="spadComm9-115" class="spadComm" >
<form id="formComm9-115" action="javascript:makeRequest('9-115');" >
<input id="comm9-115" type="text" class="command" style="width: 25em;" value='trim(" # # ++ relax ++  # #", other) ' />
</form>
<span id="commSav9-115" class="commSav" >trim(" # # ++ relax ++  # #", other) </span>
<div id="mathAns9-115" ></div>
</div>


<div class="math">
<table>
<tr><td>
<math xmlns="&mathml;" mathsize="big" display="block"><mstyle><mrow><mtext><mrow><mtext mathvariant='monospace'>"<mspace width="0.5em"/>relax<mspace width="0.5em"/>"<mspace width="0.5em"/></mtext></mrow></mtext></mrow></mstyle></math>
</td></tr>
</table>
</div>




<div class="returnType">
Type: String
</div>



<p>The second argument can be given either as a single character or as a
character class.
</p>




<div id="spadComm9-116" class="spadComm" >
<form id="formComm9-116" action="javascript:makeRequest('9-116');" >
<input id="comm9-116" type="text" class="command" style="width: 28em;" value='leftTrim (" # # ++ relax ++  # #", other) ' />
</form>
<span id="commSav9-116" class="commSav" >leftTrim (" # # ++ relax ++  # #", other) </span>
<div id="mathAns9-116" ></div>
</div>


<div class="math">
<table>
<tr><td>
<math xmlns="&mathml;" mathsize="big" display="block"><mstyle><mrow><mtext><mrow><mtext mathvariant='monospace'>"<mspace width="0.5em"/>relax<mspace width="0.5em"/>+<mspace width="0.5em"/>+<mspace width="0.5em"/> #<mspace width="0.5em"/> #<mspace width="0.5em"/>"<mspace width="0.5em"/></mtext></mrow></mtext></mrow></mstyle></math>
</td></tr>
</table>
</div>




<div class="returnType">
Type: String
</div>





<div id="spadComm9-117" class="spadComm" >
<form id="formComm9-117" action="javascript:makeRequest('9-117');" >
<input id="comm9-117" type="text" class="command" style="width: 28em;" value='rightTrim(" # # ++ relax ++  # #", other) ' />
</form>
<span id="commSav9-117" class="commSav" >rightTrim(" # # ++ relax ++  # #", other) </span>
<div id="mathAns9-117" ></div>
</div>


<div class="math">
<table>
<tr><td>
<math xmlns="&mathml;" mathsize="big" display="block"><mstyle><mrow><mtext><mrow><mtext mathvariant='monospace'>"<mspace width="0.5em"/> #<mspace width="0.5em"/> #<mspace width="0.5em"/>+<mspace width="0.5em"/>+<mspace width="0.5em"/>relax<mspace width="0.5em"/>"<mspace width="0.5em"/></mtext></mrow></mtext></mrow></mstyle></math>
</td></tr>
</table>
</div>




<div class="returnType">
Type: String
</div>



<p>Strings can be changed to upper case or lower case using the
operations <span class="spadfunFrom" >upperCase</span><span class="index">upperCase</span><a name="chapter-9-66"/><span class="index">String</span><a name="chapter-9-67"/>,
<span class="spadfunFrom" >upperCase!</span><span class="index">upperCase!</span><a name="chapter-9-68"/><span class="index">String</span><a name="chapter-9-69"/>, <span class="spadfunFrom" >lowerCase</span><span class="index">lowerCase</span><a name="chapter-9-70"/><span class="index">String</span><a name="chapter-9-71"/> and
<span class="spadfunFrom" >lowerCase!</span><span class="index">lowerCase!</span><a name="chapter-9-72"/><span class="index">String</span><a name="chapter-9-73"/>.
</p>




<div id="spadComm9-118" class="spadComm" >
<form id="formComm9-118" action="javascript:makeRequest('9-118');" >
<input id="comm9-118" type="text" class="command" style="width: 11em;" value="upperCase hello " />
</form>
<span id="commSav9-118" class="commSav" >upperCase hello </span>
<div id="mathAns9-118" ></div>
</div>


<div class="math">
<table>
<tr><td>
<math xmlns="&mathml;" mathsize="big" display="block"><mstyle><mrow><mtext><mrow><mtext mathvariant='monospace'>"<mspace width="0.5em"/>HELLO<mspace width="0.5em"/>,<mspace width="0.5em"/>I<mspace width="0.5em"/>'<mspace width="0.5em"/>M<mspace width="0.5em"/>AXIOM<mspace width="0.5em"/>!<mspace width="0.5em"/>"<mspace width="0.5em"/></mtext></mrow></mtext></mrow></mstyle></math>
</td></tr>
</table>
</div>




<div class="returnType">
Type: String
</div>



<p>The versions with the exclamation mark change the original string,
while the others produce a copy.
</p>




<div id="spadComm9-119" class="spadComm" >
<form id="formComm9-119" action="javascript:makeRequest('9-119');" >
<input id="comm9-119" type="text" class="command" style="width: 11em;" value="lowerCase hello " />
</form>
<span id="commSav9-119" class="commSav" >lowerCase hello </span>
<div id="mathAns9-119" ></div>
</div>


<div class="math">
<table>
<tr><td>
<math xmlns="&mathml;" mathsize="big" display="block"><mstyle><mrow><mtext><mrow><mtext mathvariant='monospace'>"<mspace width="0.5em"/>hello<mspace width="0.5em"/>,<mspace width="0.5em"/>i<mspace width="0.5em"/>'<mspace width="0.5em"/>m<mspace width="0.5em"/>axiom<mspace width="0.5em"/>!<mspace width="0.5em"/>"<mspace width="0.5em"/></mtext></mrow></mtext></mrow></mstyle></math>
</td></tr>
</table>
</div>




<div class="returnType">
Type: String
</div>



<p>Some basic string matching is provided.  The function
<span class="spadfunFrom" >prefix?</span><span class="index">prefix?</span><a name="chapter-9-74"/><span class="index">String</span><a name="chapter-9-75"/> tests whether one string is an initial
prefix of another.
</p>




<div id="spadComm9-120" class="spadComm" >
<form id="formComm9-120" action="javascript:makeRequest('9-120');" >
<input id="comm9-120" type="text" class="command" style="width: 15em;" value='prefix?("He", "Hello")' />
</form>
<span id="commSav9-120" class="commSav" >prefix?("He", "Hello")</span>
<div id="mathAns9-120" ></div>
</div>


<div class="math">
<table>
<tr><td>
<math xmlns="&mathml;" mathsize="big" display="block"><mstyle><mrow><mtext mathvariant='monospace'>true<mspace width="0.5em"/></mtext></mrow></mstyle></math>
</td></tr>
</table>
</div>




<div class="returnType">
Type: Boolean
</div>





<div id="spadComm9-121" class="spadComm" >
<form id="formComm9-121" action="javascript:makeRequest('9-121');" >
<input id="comm9-121" type="text" class="command" style="width: 16em;" value='prefix?("Her", "Hello")' />
</form>
<span id="commSav9-121" class="commSav" >prefix?("Her", "Hello")</span>
<div id="mathAns9-121" ></div>
</div>


<div class="math">
<table>
<tr><td>
<math xmlns="&mathml;" mathsize="big" display="block"><mstyle><mrow><mtext mathvariant='monospace'>false<mspace width="0.5em"/></mtext></mrow></mstyle></math>
</td></tr>
</table>
</div>




<div class="returnType">
Type: Boolean
</div>



<p>A similar function, <span class="spadfunFrom" >suffix?</span><span class="index">suffix?</span><a name="chapter-9-76"/><span class="index">String</span><a name="chapter-9-77"/>, tests for suffixes.
</p>




<div id="spadComm9-122" class="spadComm" >
<form id="formComm9-122" action="javascript:makeRequest('9-122');" >
<input id="comm9-122" type="text" class="command" style="width: 14em;" value='suffix?("", "Hello")' />
</form>
<span id="commSav9-122" class="commSav" >suffix?("", "Hello")</span>
<div id="mathAns9-122" ></div>
</div>


<div class="math">
<table>
<tr><td>
<math xmlns="&mathml;" mathsize="big" display="block"><mstyle><mrow><mtext mathvariant='monospace'>true<mspace width="0.5em"/></mtext></mrow></mstyle></math>
</td></tr>
</table>
</div>




<div class="returnType">
Type: Boolean
</div>





<div id="spadComm9-123" class="spadComm" >
<form id="formComm9-123" action="javascript:makeRequest('9-123');" >
<input id="comm9-123" type="text" class="command" style="width: 15em;" value='suffix?("LO", "Hello")' />
</form>
<span id="commSav9-123" class="commSav" >suffix?("LO", "Hello")</span>
<div id="mathAns9-123" ></div>
</div>


<div class="math">
<table>
<tr><td>
<math xmlns="&mathml;" mathsize="big" display="block"><mstyle><mrow><mtext mathvariant='monospace'>false<mspace width="0.5em"/></mtext></mrow></mstyle></math>
</td></tr>
</table>
</div>




<div class="returnType">
Type: Boolean
</div>



<p>The function <span class="spadfunFrom" >substring?</span><span class="index">substring?</span><a name="chapter-9-78"/><span class="index">String</span><a name="chapter-9-79"/> tests for a substring
given a starting position.
</p>




<div id="spadComm9-124" class="spadComm" >
<form id="formComm9-124" action="javascript:makeRequest('9-124');" >
<input id="comm9-124" type="text" class="command" style="width: 19em;" value='substring?("ll", "Hello", 3)' />
</form>
<span id="commSav9-124" class="commSav" >substring?("ll", "Hello", 3)</span>
<div id="mathAns9-124" ></div>
</div>


<div class="math">
<table>
<tr><td>
<math xmlns="&mathml;" mathsize="big" display="block"><mstyle><mrow><mtext mathvariant='monospace'>true<mspace width="0.5em"/></mtext></mrow></mstyle></math>
</td></tr>
</table>
</div>




<div class="returnType">
Type: Boolean
</div>





<div id="spadComm9-125" class="spadComm" >
<form id="formComm9-125" action="javascript:makeRequest('9-125');" >
<input id="comm9-125" type="text" class="command" style="width: 19em;" value='substring?("ll", "Hello", 4)' />
</form>
<span id="commSav9-125" class="commSav" >substring?("ll", "Hello", 4)</span>
<div id="mathAns9-125" ></div>
</div>


<div class="math">
<table>
<tr><td>
<math xmlns="&mathml;" mathsize="big" display="block"><mstyle><mrow><mtext mathvariant='monospace'>false<mspace width="0.5em"/></mtext></mrow></mstyle></math>
</td></tr>
</table>
</div>




<div class="returnType">
Type: Boolean
</div>



<p>A number of <span class="spadfunFrom" >position</span><span class="index">position</span><a name="chapter-9-80"/><span class="index">String</span><a name="chapter-9-81"/> functions locate things in strings.
If the first argument to position is a string, then <span class="teletype">position(s,t,i)</span>
finds the location of <span class="teletype">s</span> as a substring of <span class="teletype">t</span> starting the
search at position <span class="teletype">i</span>.
</p>




<div id="spadComm9-126" class="spadComm" >
<form id="formComm9-126" action="javascript:makeRequest('9-126');" >
<input id="comm9-126" type="text" class="command" style="width: 27em;" value='n := position("nd", "underground",   1) ' />
</form>
<span id="commSav9-126" class="commSav" >n := position("nd", "underground",   1) </span>
<div id="mathAns9-126" ></div>
</div>


<div class="math">
<table>
<tr><td>
<math xmlns="&mathml;" mathsize="big" display="block"><mstyle><mn>2</mn></mstyle></math>
</td></tr>
</table>
</div>




<div class="returnType">
Type: PositiveInteger
</div>





<div id="spadComm9-127" class="spadComm" >
<form id="formComm9-127" action="javascript:makeRequest('9-127');" >
<input id="comm9-127" type="text" class="command" style="width: 28em;" value='n := position("nd", "underground", n+1)  ' />
</form>
<span id="commSav9-127" class="commSav" >n := position("nd", "underground", n+1)  </span>
<div id="mathAns9-127" ></div>
</div>


<div class="math">
<table>
<tr><td>
<math xmlns="&mathml;" mathsize="big" display="block"><mstyle><mn>10</mn></mstyle></math>
</td></tr>
</table>
</div>




<div class="returnType">
Type: PositiveInteger
</div>



<p>If <span class="teletype">s</span> is not found, then <span class="teletype">0</span> is returned (<span class="teletype">minIndex(s)-1</span>
in <span class="teletype">IndexedString</span>).
</p>




<div id="spadComm9-128" class="spadComm" >
<form id="formComm9-128" action="javascript:makeRequest('9-128');" >
<input id="comm9-128" type="text" class="command" style="width: 27em;" value='n := position("nd", "underground", n+1) ' />
</form>
<span id="commSav9-128" class="commSav" >n := position("nd", "underground", n+1) </span>
<div id="mathAns9-128" ></div>
</div>


<div class="math">
<table>
<tr><td>
<math xmlns="&mathml;" mathsize="big" display="block"><mstyle><mn>0</mn></mstyle></math>
</td></tr>
</table>
</div>




<div class="returnType">
Type: NonNegativeInteger
</div>



<p>To search for a specific character or a member of a character class,
a different first argument is used.
</p>




<div id="spadComm9-129" class="spadComm" >
<form id="formComm9-129" action="javascript:makeRequest('9-129');" >
<input id="comm9-129" type="text" class="command" style="width: 24em;" value='position(char "d", "underground", 1)' />
</form>
<span id="commSav9-129" class="commSav" >position(char "d", "underground", 1)</span>
<div id="mathAns9-129" ></div>
</div>


<div class="math">
<table>
<tr><td>
<math xmlns="&mathml;" mathsize="big" display="block"><mstyle><mn>3</mn></mstyle></math>
</td></tr>
</table>
</div>




<div class="returnType">
Type: PositiveInteger
</div>





<div id="spadComm9-130" class="spadComm" >
<form id="formComm9-130" action="javascript:makeRequest('9-130');" >
<input id="comm9-130" type="text" class="command" style="width: 26em;" value='position(hexDigit(), "underground", 1)' />
</form>
<span id="commSav9-130" class="commSav" >position(hexDigit(), "underground", 1)</span>
<div id="mathAns9-130" ></div>
</div>


<div class="math">
<table>
<tr><td>
<math xmlns="&mathml;" mathsize="big" display="block"><mstyle><mn>3</mn></mstyle></math>
</td></tr>
</table>
</div>




<div class="returnType">
Type: PositiveInteger
</div>





</div><a href="book-contents.xhtml" style="margin-right: 10px;">Book Contents</a>
<a href="section-9.76.xhtml" style="margin-right: 10px;">Previous Section 9.76 Stream</a><a href="section-9.78.xhtml" style="margin-right: 10px;">Next Section 9.78 StringTable</a>
<a href="book-index.xhtml">Book Index</a></body>
</html>