<?xml version="1.0" encoding="UTF-8" ?>

<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.1 plus MathML 2.0//EN"
"http://www.w3.org/TR/MathML2/dtd/xhtml-math11-f.dtd" [
<!ENTITY mathml "http://www.w3.org/1998/Math/MathML">
]>

<html xmlns="http://www.w3.org/1999/xhtml"
      xmlns:xlink="http://www.w3.org/1999/xlink" >


  <head>
    <title>Section10.4</title>
    <link rel="stylesheet" type="text/css" href="graphicstyle.css" />
    <script type="text/javascript" src="bookax1.js" />
  </head>

  <body>
<a href="book-contents.xhtml" style="margin-right: 10px;">Book Contents</a><a href="section-10.3.xhtml" style="margin-right: 10px;">Previous Section 10.3 Coloring and Positioning Ribbons</a><a href="section-10.5.xhtml" style="margin-right: 10px;">Next Section 10.5 A Bouquet of Arrows</a>
<a href="book-index.xhtml">Book Index</a><div class="section"  id="sec-10.4">
<h2 class="sectiontitle">10.4  Points, Lines, and Curves</h2>


<a name="ugIntProgPLC" class="label"/>


<p>What you have seen so far is a high-level program using the
graphics facility.
We now turn to the more basic notions of points, lines, and curves
in three-dimensional graphs.
These facilities use small floats (objects
of type <span class="teletype">DoubleFloat</span>) for data.
Let us first give names to the small float values  <math xmlns="&mathml;" mathsize="big"><mstyle><mn>0</mn></mstyle></math> and
 <math xmlns="&mathml;" mathsize="big"><mstyle><mn>1</mn></mstyle></math>.
</p>


<p>The small float 0.
</p>




<div id="spadComm10-6" class="spadComm" >
<form id="formComm10-6" action="javascript:makeRequest('10-6');" >
<input id="comm10-6" type="text" class="command" style="width: 13em;" value="zero := 0.0@DFLOAT " />
</form>
<span id="commSav10-6" class="commSav" >zero := 0.0@DFLOAT </span>
<div id="mathAns10-6" ></div>
</div>



<p>The small float 1.
</p>




<div id="spadComm10-7" class="spadComm" >
<form id="formComm10-7" action="javascript:makeRequest('10-7');" >
<input id="comm10-7" type="text" class="command" style="width: 13em;" value="one  := 1.0@DFLOAT " />
</form>
<span id="commSav10-7" class="commSav" >one  := 1.0@DFLOAT </span>
<div id="mathAns10-7" ></div>
</div>



<p>The <span class="teletype">@</span> sign means <span class="italic">of the type.</span> Thus  <math xmlns="&mathml;" mathsize="big"><mstyle><mi>zero</mi></mstyle></math> is
 <math xmlns="&mathml;" mathsize="big"><mstyle><mrow><mn>0</mn><mo>.</mo><mn>0</mn></mrow></mstyle></math> of the type <span class="teletype">DoubleFloat</span>.
You can also say  <math xmlns="&mathml;" mathsize="big"><mstyle><mrow><mn>0</mn><mo>.</mo><mn>0</mn><mo>:</mo><mo>:</mo><mi>DFLOAT</mi></mrow></mstyle></math>.
</p>


<p>Points can have four small float components:  <math xmlns="&mathml;" mathsize="big"><mstyle><mrow><mi>x</mi><mo>,</mo><mi>y</mi><mo>,</mo><mi>z</mi></mrow></mstyle></math> coordinates and an
optional color.
A <span class="italic">curve</span> is simply a list of points connected by straight line
segments.
</p>


<p>Create the point  <math xmlns="&mathml;" mathsize="big"><mstyle><mi>origin</mi></mstyle></math> with color zero, that is, the lowest color
on the color map.
</p>




<div id="spadComm10-8" class="spadComm" >
<form id="formComm10-8" action="javascript:makeRequest('10-8');" >
<input id="comm10-8" type="text" class="command" style="width: 26em;" value="origin := point [zero,zero,zero,zero] " />
</form>
<span id="commSav10-8" class="commSav" >origin := point [zero,zero,zero,zero] </span>
<div id="mathAns10-8" ></div>
</div>



<p>Create the point  <math xmlns="&mathml;" mathsize="big"><mstyle><mi>unit</mi></mstyle></math> with color zero.
</p>




<div id="spadComm10-9" class="spadComm" >
<form id="formComm10-9" action="javascript:makeRequest('10-9');" >
<input id="comm10-9" type="text" class="command" style="width: 22em;" value="unit := point [one,one,one,zero] " />
</form>
<span id="commSav10-9" class="commSav" >unit := point [one,one,one,zero] </span>
<div id="mathAns10-9" ></div>
</div>



<p>Create the curve (well, here, a line) from
 <math xmlns="&mathml;" mathsize="big"><mstyle><mi>origin</mi></mstyle></math> to  <math xmlns="&mathml;" mathsize="big"><mstyle><mi>unit</mi></mstyle></math>.
</p>




<div id="spadComm10-10" class="spadComm" >
<form id="formComm10-10" action="javascript:makeRequest('10-10');" >
<input id="comm10-10" type="text" class="command" style="width: 16em;" value="line := [origin, unit]  " />
</form>
<span id="commSav10-10" class="commSav" >line := [origin, unit]  </span>
<div id="mathAns10-10" ></div>
</div>




<p>We make this line segment into an arrow by adding an arrowhead.
The arrowhead extends to,
say,  <math xmlns="&mathml;" mathsize="big"><mstyle><mi>p3</mi></mstyle></math> on the left, and to, say,  <math xmlns="&mathml;" mathsize="big"><mstyle><mi>p4</mi></mstyle></math> on the right.
To describe an arrow, you tell FriCAS to draw the two curves
 <math xmlns="&mathml;" mathsize="big"><mstyle><mrow><mo>[</mo><mi>p1</mi><mo>,</mo><mi>p2</mi><mo>,</mo><mi>p3</mi><mo>]</mo></mrow></mstyle></math> and  <math xmlns="&mathml;" mathsize="big"><mstyle><mrow><mo>[</mo><mi>p2</mi><mo>,</mo><mi>p4</mi><mo>]</mo><mo>.</mo></mrow></mstyle></math>
We also decide through experimentation on
values for  <math xmlns="&mathml;" mathsize="big"><mstyle><mi>arrowScale</mi></mstyle></math>, the ratio of the size of
the arrowhead to the stem of the arrow, and  <math xmlns="&mathml;" mathsize="big"><mstyle><mi>arrowAngle</mi></mstyle></math>,
the angle between the arrowhead and the arrow.
</p>


<p>Invoke your favorite editor and create
an input file called <span style="font-weight: bold;"> arrows.input</span>.
This input file first defines the values of
</p>


<p> <math xmlns="&mathml;" mathsize="big"><mstyle><mi>arrowAngle</mi></mstyle></math> and  <math xmlns="&mathml;" mathsize="big"><mstyle><mi>arrowScale</mi></mstyle></math>, then
defines the function <span style="font-weight: bold;"> makeArrow</span> <math xmlns="&mathml;" mathsize="big"><mstyle><mrow><mo>(</mo><msub><mi>p</mi><mn>1</mn></msub><mo>,</mo><msub><mi>p</mi><mn>2</mn></msub><mo>)</mo></mrow></mstyle></math> to
draw an arrow from point  <math xmlns="&mathml;" mathsize="big"><mstyle><mrow><msub><mi>p</mi><mn>1</mn></msub></mrow></mstyle></math> to  <math xmlns="&mathml;" mathsize="big"><mstyle><mrow><msub><mi>p</mi><mn>2</mn></msub></mrow></mstyle></math>.
</p>




<div class="verbatim"><br />
arrowAngle&nbsp;:=&nbsp;%pi-%pi/10.0@DFLOAT&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;The&nbsp;angle&nbsp;of&nbsp;the&nbsp;arrowhead.<br />
arrowScale&nbsp;:=&nbsp;0.2@DFLOAT&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;The&nbsp;size&nbsp;of&nbsp;the&nbsp;arrowhead<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;relative&nbsp;to&nbsp;the&nbsp;stem.<br />
makeArrow(p1,&nbsp;p2)&nbsp;==<br />
&nbsp;&nbsp;delta&nbsp;:=&nbsp;p2&nbsp;-&nbsp;p1&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;The&nbsp;arrow.<br />
&nbsp;&nbsp;len&nbsp;:=&nbsp;arrowScale&nbsp;*&nbsp;length&nbsp;delta&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;The&nbsp;length&nbsp;of&nbsp;the&nbsp;arrowhead.<br />
&nbsp;&nbsp;theta&nbsp;:=&nbsp;atan(delta.1,&nbsp;delta.2)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;The&nbsp;angle&nbsp;from&nbsp;the&nbsp;x-axis<br />
&nbsp;&nbsp;c1&nbsp;:=&nbsp;len*cos(theta&nbsp;+&nbsp;arrowAngle)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;The&nbsp;x-coord&nbsp;of&nbsp;left&nbsp;endpoint<br />
&nbsp;&nbsp;s1&nbsp;:=&nbsp;len*sin(theta&nbsp;+&nbsp;arrowAngle)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;The&nbsp;y-coord&nbsp;of&nbsp;left&nbsp;endpoint<br />
&nbsp;&nbsp;c2&nbsp;:=&nbsp;len*cos(theta&nbsp;-&nbsp;arrowAngle)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;The&nbsp;x-coord&nbsp;of&nbsp;right&nbsp;endpoint<br />
&nbsp;&nbsp;s2&nbsp;:=&nbsp;len*sin(theta&nbsp;-&nbsp;arrowAngle)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;The&nbsp;y-coord&nbsp;of&nbsp;right&nbsp;endpoint<br />
&nbsp;&nbsp;z&nbsp;&nbsp;:=&nbsp;p2.3*(1&nbsp;-&nbsp;arrowScale)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;The&nbsp;z-coord&nbsp;of&nbsp;both&nbsp;endpoints<br />
&nbsp;&nbsp;p3&nbsp;:=&nbsp;point&nbsp;[p2.1&nbsp;+&nbsp;c1,&nbsp;p2.2&nbsp;+&nbsp;s1,&nbsp;z,&nbsp;p2.4]&nbsp;&nbsp;&nbsp;The&nbsp;left&nbsp;endpoint&nbsp;of&nbsp;head<br />
&nbsp;&nbsp;p4&nbsp;:=&nbsp;point&nbsp;[p2.1&nbsp;+&nbsp;c2,&nbsp;p2.2&nbsp;+&nbsp;s2,&nbsp;z,&nbsp;p2.4]&nbsp;&nbsp;&nbsp;The&nbsp;right&nbsp;endpoint&nbsp;of&nbsp;head<br />
&nbsp;&nbsp;[&nbsp;[p1,&nbsp;p2,&nbsp;p3],&nbsp;[p2,&nbsp;p4]&nbsp;]&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;The&nbsp;arrow&nbsp;as&nbsp;a&nbsp;list&nbsp;of&nbsp;curves<br />
</div>



<p>Read the file and then create
an arrow from the point  <math xmlns="&mathml;" mathsize="big"><mstyle><mi>origin</mi></mstyle></math> to the point  <math xmlns="&mathml;" mathsize="big"><mstyle><mi>unit</mi></mstyle></math>.
</p>


<p>Read the input file defining <span style="font-weight: bold;"> makeArrow</span>.
</p>




<div id="spadComm10-11" class="spadComm" >
<form id="formComm10-11" action="javascript:makeRequest('10-11');" >
<input id="comm10-11" type="text" class="command" style="width: 8em;" value=")read arrows" />
</form>
<span id="commSav10-11" class="commSav" >)read arrows</span>
<div id="mathAns10-11" ></div>
</div>



<p>Construct the arrow (a list of two curves).
</p>




<div id="spadComm10-12" class="spadComm" >
<form id="formComm10-12" action="javascript:makeRequest('10-12');" >
<input id="comm10-12" type="text" class="command" style="width: 21em;" value="arrow := makeArrow(origin,unit)" />
</form>
<span id="commSav10-12" class="commSav" >arrow := makeArrow(origin,unit)</span>
<div id="mathAns10-12" ></div>
</div>



<p>Create an empty object  <math xmlns="&mathml;" mathsize="big"><mstyle><mi>sp</mi></mstyle></math> of type  <math xmlns="&mathml;" mathsize="big"><mstyle><mi>ThreeSpace</mi></mstyle></math>.
</p>




<div id="spadComm10-13" class="spadComm" >
<form id="formComm10-13" action="javascript:makeRequest('10-13');" >
<input id="comm10-13" type="text" class="command" style="width: 16em;" value="sp := createThreeSpace()" />
</form>
<span id="commSav10-13" class="commSav" >sp := createThreeSpace()</span>
<div id="mathAns10-13" ></div>
</div>



<p>Add each curve of the arrow to the space  <math xmlns="&mathml;" mathsize="big"><mstyle><mi>sp</mi></mstyle></math>.
</p>




<div id="spadComm10-14" class="spadComm" >
<form id="formComm10-14" action="javascript:makeRequest('10-14');" >
<input id="comm10-14" type="text" class="command" style="width: 26em;" value="for a in arrow repeat sp := curve(sp,a)" />
</form>
<span id="commSav10-14" class="commSav" >for a in arrow repeat sp := curve(sp,a)</span>
<div id="mathAns10-14" ></div>
</div>



<p>Create a three-dimensional viewport containing that space.
</p>




<div class="spadgraph" style="width: 16em">
vp := makeViewport3D(sp,"Arrow")
</div>



<div class="image">
<img src="ps/arrow.png" alt="picture" />
</div>

<p>Here is a better viewing angle.
</p>




<div id="spadComm10-15" class="spadComm" >
<form id="formComm10-15" action="javascript:makeRequest('10-15');" >
<input id="comm10-15" type="text" class="command" style="width: 12em;" value="rotate(vp,200,-60)" />
</form>
<span id="commSav10-15" class="commSav" >rotate(vp,200,-60)</span>
<div id="mathAns10-15" ></div>
</div>



<div class="image">
<img src="ps/arrowr.png" alt="picture" />
</div>



</div><a href="book-contents.xhtml" style="margin-right: 10px;">Book Contents</a>
<a href="section-10.3.xhtml" style="margin-right: 10px;">Previous Section 10.3 Coloring and Positioning Ribbons</a><a href="section-10.5.xhtml" style="margin-right: 10px;">Next Section 10.5 A Bouquet of Arrows</a>
<a href="book-index.xhtml">Book Index</a></body>
</html>