<?xml version="1.0" encoding="UTF-8" ?>

<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.1 plus MathML 2.0//EN"
"http://www.w3.org/TR/MathML2/dtd/xhtml-math11-f.dtd" [
<!ENTITY mathml "http://www.w3.org/1998/Math/MathML">
]>

<html xmlns="http://www.w3.org/1999/xhtml"
      xmlns:xlink="http://www.w3.org/1999/xlink" >


  <head>
    <title>Section9.26</title>
    <link rel="stylesheet" type="text/css" href="graphicstyle.css" />
    <script type="text/javascript" src="bookax1.js" />
  </head>

  <body>
<a href="book-contents.xhtml" style="margin-right: 10px;">Book Contents</a><a href="section-9.25.xhtml" style="margin-right: 10px;">Previous Section 9.25 FileName</a><a href="section-9.27.xhtml" style="margin-right: 10px;">Next Section 9.27  Float</a><a href="book-index.xhtml">Book Index</a><div class="section"  id="sec-9.26">
<h2 class="sectiontitle">9.26  FlexibleArray</h2>


<a name="FlexibleArrayXmpPage" class="label"/>


<p>The <span class="teletype">FlexibleArray</span> domain constructor creates one-dimensional
arrays of elements of the same type.  Flexible arrays are an attempt
to provide a data type that has the best features of both
one-dimensional arrays (fast, random access to elements) and lists
(flexibility).  They are implemented by a fixed block of storage.
When necessary for expansion, a new, larger block of storage is
allocated and the elements from the old storage area are copied into
the new block.
</p>


<p>Flexible arrays have available most of the operations provided by 
<span class="teletype">OneDimensionalArray</span> (see 
<a href="section-9.57.xhtml#OneDimensionalArrayXmpPage" class="ref" >OneDimensionalArrayXmpPage</a>  
and <a href="section-9.85.xhtml#VectorXmpPage" class="ref" >VectorXmpPage</a> ).  
Since flexible arrays are also of category 
<span class="teletype">ExtensibleLinearAggregate</span>, they have operations <span class="teletype">concat!</span>, 
<span class="teletype">delete!</span>, <span class="teletype">insert!</span>, <span class="teletype">merge!</span>, <span class="teletype">remove!</span>, 
<span class="teletype">removeDuplicates!</span>, and <span class="teletype">select!</span>.  In addition, the operations
<span class="teletype">physicalLength</span> and <span class="teletype">physicalLength!</span> provide user-control
over expansion and contraction.
</p>


<p>A convenient way to create a flexible array is to apply the operation
<span class="teletype">flexibleArray</span> to a list of values.
</p>




<div id="spadComm9-227" class="spadComm" >
<form id="formComm9-227" action="javascript:makeRequest('9-227');" >
<input id="comm9-227" type="text" class="command" style="width: 21em;" value="flexibleArray [i for i in 1..6]" />
</form>
<span id="commSav9-227" class="commSav" >flexibleArray [i for i in 1..6]</span>
<div id="mathAns9-227" ></div>
</div>


<div class="math">
<table>
<tr><td>
<math xmlns="&mathml;" mathsize="big" display="block"><mstyle><mrow><mo>[</mo><mn>1</mn><mo>,</mo><mn>2</mn><mo>,</mo><mn>3</mn><mo>,</mo><mn>4</mn><mo>,</mo><mn>5</mn><mo>,</mo><mn>6</mn><mo>]</mo></mrow></mstyle></math>
</td></tr>
</table>
</div>




<div class="returnType">
Type: FlexibleArray PositiveInteger
</div>



<p>Create a flexible array of six zeroes.
</p>




<div id="spadComm9-228" class="spadComm" >
<form id="formComm9-228" action="javascript:makeRequest('9-228');" >
<input id="comm9-228" type="text" class="command" style="width: 18em;" value="f : FARRAY INT := new(6,0)" />
</form>
<span id="commSav9-228" class="commSav" >f : FARRAY INT := new(6,0)</span>
<div id="mathAns9-228" ></div>
</div>


<div class="math">
<table>
<tr><td>
<math xmlns="&mathml;" mathsize="big" display="block"><mstyle><mrow><mo>[</mo><mn>0</mn><mo>,</mo><mn>0</mn><mo>,</mo><mn>0</mn><mo>,</mo><mn>0</mn><mo>,</mo><mn>0</mn><mo>,</mo><mn>0</mn><mo>]</mo></mrow></mstyle></math>
</td></tr>
</table>
</div>




<div class="returnType">
Type: FlexibleArray Integer
</div>



<p>For  <math xmlns="&mathml;" mathsize="big"><mstyle><mrow><mi>i</mi><mo>=</mo><mn>1</mn><mo>&#x2026;</mo><mn>6</mn></mrow></mstyle></math> set the  <math xmlns="&mathml;" mathsize="big"><mstyle><mi>i</mi></mstyle></math>-th element to  <math xmlns="&mathml;" mathsize="big"><mstyle><mi>i</mi></mstyle></math>.  Display <span class="teletype">f</span>.
</p>




<div id="spadComm9-229" class="spadComm" >
<form id="formComm9-229" action="javascript:makeRequest('9-229');" >
<input id="comm9-229" type="text" class="command" style="width: 22em;" value="for i in 1..6 repeat f.i := i; f" />
</form>
<span id="commSav9-229" class="commSav" >for i in 1..6 repeat f.i := i; f</span>
<div id="mathAns9-229" ></div>
</div>


<div class="math">
<table>
<tr><td>
<math xmlns="&mathml;" mathsize="big" display="block"><mstyle><mrow><mo>[</mo><mn>1</mn><mo>,</mo><mn>2</mn><mo>,</mo><mn>3</mn><mo>,</mo><mn>4</mn><mo>,</mo><mn>5</mn><mo>,</mo><mn>6</mn><mo>]</mo></mrow></mstyle></math>
</td></tr>
</table>
</div>




<div class="returnType">
Type: FlexibleArray Integer
</div>



<p>Initially, the physical length is the same as the number of elements.
</p>




<div id="spadComm9-230" class="spadComm" >
<form id="formComm9-230" action="javascript:makeRequest('9-230');" >
<input id="comm9-230" type="text" class="command" style="width: 11em;" value="physicalLength f" />
</form>
<span id="commSav9-230" class="commSav" >physicalLength f</span>
<div id="mathAns9-230" ></div>
</div>


<div class="math">
<table>
<tr><td>
<math xmlns="&mathml;" mathsize="big" display="block"><mstyle><mn>6</mn></mstyle></math>
</td></tr>
</table>
</div>




<div class="returnType">
Type: PositiveInteger
</div>



<p>Add an element to the end of <span class="teletype">f</span>.
</p>




<div id="spadComm9-231" class="spadComm" >
<form id="formComm9-231" action="javascript:makeRequest('9-231');" >
<input id="comm9-231" type="text" class="command" style="width: 9em;" value="concat!(f,11)" />
</form>
<span id="commSav9-231" class="commSav" >concat!(f,11)</span>
<div id="mathAns9-231" ></div>
</div>


<div class="math">
<table>
<tr><td>
<math xmlns="&mathml;" mathsize="big" display="block"><mstyle><mrow><mo>[</mo><mn>1</mn><mo>,</mo><mn>2</mn><mo>,</mo><mn>3</mn><mo>,</mo><mn>4</mn><mo>,</mo><mn>5</mn><mo>,</mo><mn>6</mn><mo>,</mo><mn>11</mn><mo>]</mo></mrow></mstyle></math>
</td></tr>
</table>
</div>




<div class="returnType">
Type: FlexibleArray Integer
</div>



<p>See that its physical length has grown.
</p>




<div id="spadComm9-232" class="spadComm" >
<form id="formComm9-232" action="javascript:makeRequest('9-232');" >
<input id="comm9-232" type="text" class="command" style="width: 11em;" value="physicalLength f" />
</form>
<span id="commSav9-232" class="commSav" >physicalLength f</span>
<div id="mathAns9-232" ></div>
</div>


<div class="math">
<table>
<tr><td>
<math xmlns="&mathml;" mathsize="big" display="block"><mstyle><mn>10</mn></mstyle></math>
</td></tr>
</table>
</div>




<div class="returnType">
Type: PositiveInteger
</div>



<p>Make <span class="teletype">f</span> grow to have room for <span class="teletype">15</span> elements.
</p>




<div id="spadComm9-233" class="spadComm" >
<form id="formComm9-233" action="javascript:makeRequest('9-233');" >
<input id="comm9-233" type="text" class="command" style="width: 14em;" value="physicalLength!(f,15)" />
</form>
<span id="commSav9-233" class="commSav" >physicalLength!(f,15)</span>
<div id="mathAns9-233" ></div>
</div>


<div class="math">
<table>
<tr><td>
<math xmlns="&mathml;" mathsize="big" display="block"><mstyle><mrow><mo>[</mo><mn>1</mn><mo>,</mo><mn>2</mn><mo>,</mo><mn>3</mn><mo>,</mo><mn>4</mn><mo>,</mo><mn>5</mn><mo>,</mo><mn>6</mn><mo>,</mo><mn>11</mn><mo>]</mo></mrow></mstyle></math>
</td></tr>
</table>
</div>




<div class="returnType">
Type: FlexibleArray Integer
</div>



<p>Concatenate the elements of <span class="teletype">f</span> to itself.  The physical length
allows room for three more values at the end.
</p>




<div id="spadComm9-234" class="spadComm" >
<form id="formComm9-234" action="javascript:makeRequest('9-234');" >
<input id="comm9-234" type="text" class="command" style="width: 8em;" value="concat!(f,f)" />
</form>
<span id="commSav9-234" class="commSav" >concat!(f,f)</span>
<div id="mathAns9-234" ></div>
</div>


<div class="math">
<table>
<tr><td>
<math xmlns="&mathml;" mathsize="big" display="block"><mstyle><mrow><mo>[</mo><mn>1</mn><mo>,</mo><mn>2</mn><mo>,</mo><mn>3</mn><mo>,</mo><mn>4</mn><mo>,</mo><mn>5</mn><mo>,</mo><mn>6</mn><mo>,</mo><mn>11</mn><mo>,</mo><mn>1</mn><mo>,</mo><mn>2</mn><mo>,</mo><mn>3</mn><mo>,</mo><mn>4</mn><mo>,</mo><mn>5</mn><mo>,</mo><mn>6</mn><mo>,</mo><mn>11</mn><mo>]</mo></mrow></mstyle></math>
</td></tr>
</table>
</div>




<div class="returnType">
Type: FlexibleArray Integer
</div>



<p>Use <span class="teletype">insert!</span> to add an element to the front of a flexible array.
</p>




<div id="spadComm9-235" class="spadComm" >
<form id="formComm9-235" action="javascript:makeRequest('9-235');" >
<input id="comm9-235" type="text" class="command" style="width: 10em;" value="insert!(22,f,1)" />
</form>
<span id="commSav9-235" class="commSav" >insert!(22,f,1)</span>
<div id="mathAns9-235" ></div>
</div>


<div class="math">
<table>
<tr><td>
<math xmlns="&mathml;" mathsize="big" display="block"><mstyle><mrow><mo>[</mo><mn>22</mn><mo>,</mo><mn>1</mn><mo>,</mo><mn>2</mn><mo>,</mo><mn>3</mn><mo>,</mo><mn>4</mn><mo>,</mo><mn>5</mn><mo>,</mo><mn>6</mn><mo>,</mo><mn>11</mn><mo>,</mo><mn>1</mn><mo>,</mo><mn>2</mn><mo>,</mo><mn>3</mn><mo>,</mo><mn>4</mn><mo>,</mo><mn>5</mn><mo>,</mo><mn>6</mn><mo>,</mo><mn>11</mn><mo>]</mo></mrow></mstyle></math>
</td></tr>
</table>
</div>




<div class="returnType">
Type: FlexibleArray Integer
</div>



<p>Create a second flexible array from <span class="teletype">f</span> consisting of the elements
from index 10 forward.
</p>




<div id="spadComm9-236" class="spadComm" >
<form id="formComm9-236" action="javascript:makeRequest('9-236');" >
<input id="comm9-236" type="text" class="command" style="width: 8em;" value="g := f(10..)" />
</form>
<span id="commSav9-236" class="commSav" >g := f(10..)</span>
<div id="mathAns9-236" ></div>
</div>


<div class="math">
<table>
<tr><td>
<math xmlns="&mathml;" mathsize="big" display="block"><mstyle><mrow><mo>[</mo><mn>2</mn><mo>,</mo><mn>3</mn><mo>,</mo><mn>4</mn><mo>,</mo><mn>5</mn><mo>,</mo><mn>6</mn><mo>,</mo><mn>11</mn><mo>]</mo></mrow></mstyle></math>
</td></tr>
</table>
</div>




<div class="returnType">
Type: FlexibleArray Integer
</div>



<p>Insert this array at the front of <span class="teletype">f</span>.
</p>




<div id="spadComm9-237" class="spadComm" >
<form id="formComm9-237" action="javascript:makeRequest('9-237');" >
<input id="comm9-237" type="text" class="command" style="width: 10em;" value="insert!(g,f,1)" />
</form>
<span id="commSav9-237" class="commSav" >insert!(g,f,1)</span>
<div id="mathAns9-237" ></div>
</div>


<div class="math">
<table>
<tr><td>
<math xmlns="&mathml;" mathsize="big" display="block"><mstyle><mrow><mo>[</mo><mn>2</mn><mo>,</mo><mn>3</mn><mo>,</mo><mn>4</mn><mo>,</mo><mn>5</mn><mo>,</mo><mn>6</mn><mo>,</mo><mn>11</mn><mo>,</mo><mn>22</mn><mo>,</mo><mn>1</mn><mo>,</mo><mn>2</mn><mo>,</mo><mn>3</mn><mo>,</mo><mn>4</mn><mo>,</mo><mn>5</mn><mo>,</mo><mn>6</mn><mo>,</mo><mn>11</mn><mo>,</mo><mn>1</mn><mo>,</mo><mn>2</mn><mo>,</mo><mn>3</mn><mo>,</mo><mn>4</mn><mo>,</mo><mn>5</mn><mo>,</mo><mn>6</mn><mo>,</mo><mn>11</mn><mo>]</mo></mrow></mstyle></math>
</td></tr>
</table>
</div>




<div class="returnType">
Type: FlexibleArray Integer
</div>



<p>Merge the flexible array <span class="teletype">f</span> into <span class="teletype">g</span> after sorting each in place.
</p>




<div id="spadComm9-238" class="spadComm" >
<form id="formComm9-238" action="javascript:makeRequest('9-238');" >
<input id="comm9-238" type="text" class="command" style="width: 16em;" value="merge!(sort! f, sort! g)" />
</form>
<span id="commSav9-238" class="commSav" >merge!(sort! f, sort! g)</span>
<div id="mathAns9-238" ></div>
</div>


<div class="math">
<table>
<tr><td>
<math xmlns="&mathml;" mathsize="big" display="block"><mstyle><mrow><mo>[</mo><mn>1</mn><mo>,</mo><mn>1</mn><mo>,</mo><mn>2</mn><mo>,</mo><mn>2</mn><mo>,</mo><mn>2</mn><mo>,</mo><mn>2</mn><mo>,</mo><mn>3</mn><mo>,</mo><mn>3</mn><mo>,</mo><mn>3</mn><mo>,</mo><mn>3</mn><mo>,</mo><mn>4</mn><mo>,</mo><mn>4</mn><mo>,</mo><mn>4</mn><mo>,</mo><mn>4</mn><mo>,</mo><mn>5</mn><mo>,</mo><mn>5</mn><mo>,</mo><mn>5</mn><mo>,</mo><mn>5</mn><mo>,</mo><mn>6</mn><mo>,</mo><mn>6</mn><mo>,</mo><mn>6</mn><mo>,</mo><mn>6</mn><mo>,</mo><mn>11</mn><mo>,</mo><mn>11</mn><mo>,</mo><mn>11</mn><mo>,</mo><mn>11</mn><mo>,</mo><mn>22</mn><mo>]</mo></mrow></mstyle></math>
</td></tr>
</table>
</div>




<div class="returnType">
Type: FlexibleArray Integer
</div>



<p>Remove duplicates in place.
</p>




<div id="spadComm9-239" class="spadComm" >
<form id="formComm9-239" action="javascript:makeRequest('9-239');" >
<input id="comm9-239" type="text" class="command" style="width: 13em;" value="removeDuplicates! f" />
</form>
<span id="commSav9-239" class="commSav" >removeDuplicates! f</span>
<div id="mathAns9-239" ></div>
</div>


<div class="math">
<table>
<tr><td>
<math xmlns="&mathml;" mathsize="big" display="block"><mstyle><mrow><mo>[</mo><mn>1</mn><mo>,</mo><mn>2</mn><mo>,</mo><mn>3</mn><mo>,</mo><mn>4</mn><mo>,</mo><mn>5</mn><mo>,</mo><mn>6</mn><mo>,</mo><mn>11</mn><mo>,</mo><mn>22</mn><mo>]</mo></mrow></mstyle></math>
</td></tr>
</table>
</div>




<div class="returnType">
Type: FlexibleArray Integer
</div>



<p>Remove all odd integers.
</p>




<div id="spadComm9-240" class="spadComm" >
<form id="formComm9-240" action="javascript:makeRequest('9-240');" >
<input id="comm9-240" type="text" class="command" style="width: 16em;" value="select!(i +-> even? i,f)" />
</form>
<span id="commSav9-240" class="commSav" >select!(i +-> even? i,f)</span>
<div id="mathAns9-240" ></div>
</div>


<div class="math">
<table>
<tr><td>
<math xmlns="&mathml;" mathsize="big" display="block"><mstyle><mrow><mo>[</mo><mn>2</mn><mo>,</mo><mn>4</mn><mo>,</mo><mn>6</mn><mo>,</mo><mn>22</mn><mo>]</mo></mrow></mstyle></math>
</td></tr>
</table>
</div>




<div class="returnType">
Type: FlexibleArray Integer
</div>



<p>All these operations have shrunk the physical length of <span class="teletype">f</span>.
</p>




<div id="spadComm9-241" class="spadComm" >
<form id="formComm9-241" action="javascript:makeRequest('9-241');" >
<input id="comm9-241" type="text" class="command" style="width: 11em;" value="physicalLength f" />
</form>
<span id="commSav9-241" class="commSav" >physicalLength f</span>
<div id="mathAns9-241" ></div>
</div>


<div class="math">
<table>
<tr><td>
<math xmlns="&mathml;" mathsize="big" display="block"><mstyle><mn>8</mn></mstyle></math>
</td></tr>
</table>
</div>




<div class="returnType">
Type: PositiveInteger
</div>



<p>To force FriCAS not to shrink flexible arrays call the <span class="teletype">shrinkable</span>
operation with the argument <span class="teletype">false</span>.  You must package call this
operation.  The previous value is returned.
</p>




<div id="spadComm9-242" class="spadComm" >
<form id="formComm9-242" action="javascript:makeRequest('9-242');" >
<input id="comm9-242" type="text" class="command" style="width: 27em;" value="shrinkable(false)$FlexibleArray(Integer)" />
</form>
<span id="commSav9-242" class="commSav" >shrinkable(false)$FlexibleArray(Integer)</span>
<div id="mathAns9-242" ></div>
</div>


<div class="math">
<table>
<tr><td>
<math xmlns="&mathml;" mathsize="big" display="block"><mstyle><mrow><mtext mathvariant='monospace'>true</mtext></mrow></mstyle></math>
</td></tr>
</table>
</div>




<div class="returnType">
Type: Boolean
</div>





</div><a href="book-contents.xhtml" style="margin-right: 10px;">Book Contents</a>
<a href="section-9.25.xhtml" style="margin-right: 10px;">Previous Section 9.25 FileName</a><a href="section-9.27.xhtml" style="margin-right: 10px;">Next Section 9.27  Float</a><a href="book-index.xhtml">Book Index</a></body>
</html>