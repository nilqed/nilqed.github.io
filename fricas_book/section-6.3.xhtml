<?xml version="1.0" encoding="UTF-8" ?>

<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.1 plus MathML 2.0//EN"
"http://www.w3.org/TR/MathML2/dtd/xhtml-math11-f.dtd" [
<!ENTITY mathml "http://www.w3.org/1998/Math/MathML">
]>

<html xmlns="http://www.w3.org/1999/xhtml"
      xmlns:xlink="http://www.w3.org/1999/xlink" >


  <head>
    <title>Section6.3</title>
    <link rel="stylesheet" type="text/css" href="graphicstyle.css" />
    <script type="text/javascript" src="bookax1.js" />
  </head>

  <body>
<a href="book-contents.xhtml" style="margin-right: 10px;">Book Contents</a><a href="section-6.2.xhtml" style="margin-right: 10px;">Previous Section 6.2 Macros</a><a href="section-6.4.xhtml" style="margin-right: 10px;">Next Section 6.4 Declaring the Type of Functions</a>
<a href="book-index.xhtml">Book Index</a><div class="section"  id="sec-6.3">
<h2 class="sectiontitle">6.3  Introduction to Functions</h2>


<a name="ugUserIntro" class="label"/>


<p>Each name in your workspace can refer to a single object.  This may be
any kind of object including a function.  You can use interactively
any function from the library or any that you define in the workspace.
In the library the same name can have very many functions, but you can
have only one function with a given name, although it can have any
number of arguments that you choose.
</p>


<p>If you define a function in the workspace that has the same name and
number of arguments as one in the library, then your definition takes
precedence.  In fact, to get the library function you must
<span class="slant">package-call</span> it 
(see section <a href="section-2.9.xhtml#ugTypesPkgCall" class="ref" >ugTypesPkgCall</a> ).
</p>


<p>To use a function in FriCAS, you apply it to its arguments.  Most
functions are applied by entering the name of the function followed by
its argument or arguments.
</p>



<div id="spadComm6-18" class="spadComm" >
<form id="formComm6-18" action="javascript:makeRequest('6-18');" >
<input id="comm6-18" type="text" class="command" style="width: 7em;" value="factor(12)" />
</form>
<span id="commSav6-18" class="commSav" >factor(12)</span>
<div id="mathAns6-18" ></div>
</div>


<div class="math">
<table>
<tr><td>
<math xmlns="&mathml;" mathsize="big" display="block"><mstyle><mrow><mrow><msup><mn>2</mn><mn>2</mn></msup></mrow><mo></mo><mn>3</mn></mrow></mstyle></math>
</td></tr>
</table>
</div>




<div class="returnType">
Type: Factored Integer
</div>



<p>Some functions like ``<span class="teletype">+</span>'' have <span class="italic">infix</span> <span class="italic">operators</span> as names.
</p>



<div id="spadComm6-19" class="spadComm" >
<form id="formComm6-19" action="javascript:makeRequest('6-19');" >
<input id="comm6-19" type="text" class="command" style="width: 4em;" value="3 + 4" />
</form>
<span id="commSav6-19" class="commSav" >3 + 4</span>
<div id="mathAns6-19" ></div>
</div>


<div class="math">
<table>
<tr><td>
<math xmlns="&mathml;" mathsize="big" display="block"><mstyle><mn>7</mn></mstyle></math>
</td></tr>
</table>
</div>




<div class="returnType">
Type: PositiveInteger
</div>



<p>The function ``<span class="teletype">+</span>'' has two arguments.  When you give it more than
two arguments, FriCAS groups the arguments to the left.  This
expression is equivalent to <math xmlns="&mathml;" mathsize="big"><mstyle><mrow><mo>(</mo><mn>1</mn><mo>+</mo><mn>2</mn><mo>)</mo><mo>+</mo><mn>7</mn></mrow></mstyle></math>.
</p>



<div id="spadComm6-20" class="spadComm" >
<form id="formComm6-20" action="javascript:makeRequest('6-20');" >
<input id="comm6-20" type="text" class="command" style="width: 6em;" value="1 + 2 + 7" />
</form>
<span id="commSav6-20" class="commSav" >1 + 2 + 7</span>
<div id="mathAns6-20" ></div>
</div>


<div class="math">
<table>
<tr><td>
<math xmlns="&mathml;" mathsize="big" display="block"><mstyle><mn>10</mn></mstyle></math>
</td></tr>
</table>
</div>




<div class="returnType">
Type: PositiveInteger
</div>



<p>All operations, including infix operators, can be written in prefix
form, that is, with the operation name followed by the arguments in
parentheses.  For example, <math xmlns="&mathml;" mathsize="big"><mstyle><mrow><mn>2</mn><mo>+</mo><mn>3</mn></mrow></mstyle></math> can alternatively be written as
<math xmlns="&mathml;" mathsize="big"><mstyle><mrow><mo>+</mo><mo>(</mo><mn>2</mn><mo>,</mo><mn>3</mn><mo>)</mo></mrow></mstyle></math>.  But <math xmlns="&mathml;" mathsize="big"><mstyle><mrow><mo>+</mo><mo>(</mo><mn>2</mn><mo>,</mo><mn>3</mn><mo>,</mo><mn>4</mn><mo>)</mo></mrow></mstyle></math> is an error since <span class="teletype">+</span> takes only two
arguments.
</p>


<p>Prefix operations are generally applied before the infix operation.
Thus the form <math xmlns="&mathml;" mathsize="big"><mstyle><mrow><mrow><mtext style="fontweight: bold;">factorial&nbsp;</mtext></mrow><mn>3</mn><mo>+</mo><mn>1</mn></mrow></mstyle></math> means <math xmlns="&mathml;" mathsize="big"><mstyle><mrow><mrow><mtext style="fontweight: bold;">factorial</mtext></mrow><mo>(</mo><mn>3</mn><mo>)</mo><mo>+</mo><mn>1</mn></mrow></mstyle></math>
producing <math xmlns="&mathml;" mathsize="big"><mstyle><mn>7</mn></mstyle></math>, and <math xmlns="&mathml;" mathsize="big"><mstyle><mrow><mo>-</mo><mn>2</mn><mo>+</mo><mn>5</mn></mrow></mstyle></math> means <math xmlns="&mathml;" mathsize="big"><mstyle><mrow><mo>(</mo><mo>-</mo><mn>2</mn><mo>)</mo><mo>+</mo><mn>5</mn></mrow></mstyle></math> producing <math xmlns="&mathml;" mathsize="big"><mstyle><mn>3</mn></mstyle></math>.  An
example of a prefix operator is prefix <span class="italic"><span class="teletype">-</span></span>.  For example, <math xmlns="&mathml;" mathsize="big"><mstyle><mrow><mo>-</mo><mn>2</mn><mo>+</mo><mn>5</mn></mrow></mstyle></math> converts to <math xmlns="&mathml;" mathsize="big"><mstyle><mrow><mo>(</mo><mo>-</mo><mn>2</mn><mo>)</mo><mo>+</mo><mn>5</mn></mrow></mstyle></math> producing the value <math xmlns="&mathml;" mathsize="big"><mstyle><mn>3</mn></mstyle></math>.  Any prefix
function taking two arguments can be written in an infix manner by
putting an ampersand <span class="italic"><span class="teletype">&amp;</span></span> before the name.  Thus <math xmlns="&mathml;" mathsize="big"><mstyle><mrow><mi>D</mi><mo>(</mo><mn>2</mn><mo>*</mo><mi>x</mi><mo>,</mo><mi>x</mi><mo>)</mo></mrow></mstyle></math> can
be written as <math xmlns="&mathml;" mathsize="big"><mstyle><mrow><mn>2</mn><mo>*</mo><mi>x</mi><mo></mo><mrow><mo>&amp;</mo><mi>D</mi></mrow><mi>x</mi></mrow></mstyle></math> returning <math xmlns="&mathml;" mathsize="big"><mstyle><mn>2</mn></mstyle></math>.
</p>


<p>Every function in FriCAS is identified by a <span class="italic">name</span> and 
<span class="italic">type</span>. (An exception is an <span class="italic">anonymous function</span> discussed in
<a href="section-6.17.xhtml#ugUserAnon" class="ref" >ugUserAnon</a> .)  
The type of a function is always a mapping of the
form Source->Target where <span class="teletype">Source</span> and <span class="teletype">Target</span> are types.
To enter a type from the keyboard, enter the arrow by using a hyphen
<span class="italic"><span class="teletype">-</span></span> followed by a greater-than sign <span class="italic"><span class="teletype">></span></span>, e.g. 
<span class="teletype">Integer -> Integer</span>.
</p>


<p>Let's go back to ``<span class="teletype">+</span>''.  There are many ``<span class="teletype">+</span>'' functions in the
FriCAS library: one for integers, one for floats, another for rational
numbers, and so on.  These ``<span class="teletype">+</span>'' functions have different types and
thus are different functions.  You've seen examples of this 
<span class="italic">overloading</span> before---using the same name for different functions.
Overloading is the rule rather than the exception.  You can add two
integers, two polynomials, two matrices or two power series.  These
are all done with the same function name but with different functions.
</p>




</div><a href="book-contents.xhtml" style="margin-right: 10px;">Book Contents</a>
<a href="section-6.2.xhtml" style="margin-right: 10px;">Previous Section 6.2 Macros</a><a href="section-6.4.xhtml" style="margin-right: 10px;">Next Section 6.4 Declaring the Type of Functions</a>
<a href="book-index.xhtml">Book Index</a></body>
</html>