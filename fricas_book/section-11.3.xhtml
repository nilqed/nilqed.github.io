<?xml version="1.0" encoding="UTF-8" ?>

<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.1 plus MathML 2.0//EN"
"http://www.w3.org/TR/MathML2/dtd/xhtml-math11-f.dtd" [
<!ENTITY mathml "http://www.w3.org/1998/Math/MathML">
]>

<html xmlns="http://www.w3.org/1999/xhtml"
      xmlns:xlink="http://www.w3.org/1999/xlink" >


  <head>
    <title>Section11.3</title>
    <link rel="stylesheet" type="text/css" href="graphicstyle.css" />
    <script type="text/javascript" src="bookax1.js" />
  </head>

  <body>
<a href="book-contents.xhtml" style="margin-right: 10px;">Book Contents</a><a href="section-11.2.xhtml" style="margin-right: 10px;">Previous Section 11.2 Syntax</a><a href="section-11.4.xhtml" style="margin-right: 10px;">Next Section 11.4 Capsules</a>
<a href="book-index.xhtml">Book Index</a><div class="section"  id="sec-11.3">
<h2 class="sectiontitle">11.3  Abstract Datatypes</h2>


<a name="ugPackagesAbstract" class="label"/>


<p>A constructor as defined in FriCAS is called an <span class="italic">abstract
datatype</span> in the computer science literature.
Abstract datatypes separate <span class="italic">specification</span> (what operations are
provided) from <span class="italic">implementation</span> (how the operations are implemented).
The <span class="teletype">Exports</span> (specification) part of a constructor is said to be <span class="italic">public</span> (it
provides the user interface to the package) whereas the <span class="teletype">Implementation</span>
part is <span class="italic">private</span> (information here is effectively hidden---programs
cannot take advantage of it).
</p>


<p>The <span class="teletype">Exports</span> part specifies what operations the package provides to users.
As an author of a package, you must ensure that
the <span class="teletype">Implementation</span> part provides a function for each
operation in the <span class="teletype">Exports</span> part.<span class="footnote">The <span class="teletype">DrawComplex</span>
package enhances the facility
described in  Chapter 
<a href="section-10.8.xhtml#ugIntProgCompFuns" class="ref" >ugIntProgCompFuns</a>  by allowing a
complex function to have
arrows emanating from the surface to indicate the direction of the
complex argument.</span>
</p>


<p>An important difference between interactive programming and the
use of packages is in the handling of global variables such as
<math xmlns="&mathml;" mathsize="big"><mstyle><mi>realSteps</mi></mstyle></math> and <math xmlns="&mathml;" mathsize="big"><mstyle><mi>imagSteps</mi></mstyle></math>.
In interactive programming, you simply change the values of
variables by <span class="italic">assignment</span>.
With packages, such variables are local to the package---their
values can only be set using functions exported by the package.
In our example package, we provide two functions
<span style="font-weight: bold;"> setRealSteps</span> and <span style="font-weight: bold;"> setImagSteps</span> for
this purpose.
</p>


<p>Another local variable is <math xmlns="&mathml;" mathsize="big"><mstyle><mi>clipValue</mi></mstyle></math> which can be changed using
the exported operation <span style="font-weight: bold;"> setClipValue</span>.
This value is referenced by the internal function <span style="font-weight: bold;"> clipFun</span> that
decides whether to use the computed value of the function at a point or,
if the magnitude of that value is too large, the
value assigned to <math xmlns="&mathml;" mathsize="big"><mstyle><mi>clipValue</mi></mstyle></math> (with the
appropriate sign).
</p>




</div><a href="book-contents.xhtml" style="margin-right: 10px;">Book Contents</a>
<a href="section-11.2.xhtml" style="margin-right: 10px;">Previous Section 11.2 Syntax</a><a href="section-11.4.xhtml" style="margin-right: 10px;">Next Section 11.4 Capsules</a>
<a href="book-index.xhtml">Book Index</a></body>
</html>