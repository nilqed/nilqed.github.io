<?xml version="1.0" encoding="UTF-8" ?>

<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.1 plus MathML 2.0//EN"
"http://www.w3.org/TR/MathML2/dtd/xhtml-math11-f.dtd" [
<!ENTITY mathml "http://www.w3.org/1998/Math/MathML">
]>

<html xmlns="http://www.w3.org/1999/xhtml"
      xmlns:xlink="http://www.w3.org/1999/xlink" >


  <head>
    <title>Section21.11</title>
    <link rel="stylesheet" type="text/css" href="graphicstyle.css" />
    <script type="text/javascript" src="bookax1.js" />
  </head>

  <body>
<a href="book-contents.xhtml" style="margin-right: 10px;">Book Contents</a><a href="section-21.10.xhtml" style="margin-right: 10px;">Previous Section 21.10 ntube.input</a><a href="section-21.12.xhtml" style="margin-right: 10px;">Next Section 21.12 tetra.input</a>
<a href="book-index.xhtml">Book Index</a><div class="section"  id="sec-21.11">
<h2 class="sectiontitle">21.11  dhtri.input</h2>


<a name="ugFdhtri" class="label"/>


<p>Create affine transformations (DH matrices) that transform
a given triangle into another.
</p>




<div class="verbatim"><br />
tri2tri:&nbsp;(List&nbsp;Point&nbsp;DFLOAT,&nbsp;List&nbsp;Point&nbsp;DFLOAT)&nbsp;-&gt;&nbsp;DHMATRIX(DFLOAT)<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Compute&nbsp;a&nbsp;DHMATRIX&nbsp;that<br />
tri2tri(t1,&nbsp;t2)&nbsp;==&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;transforms&nbsp;<math xmlns="&mathml;" mathsize="big"><mstyle><mi>t1</mi></mstyle></math>&nbsp;to&nbsp;<math xmlns="&mathml;" mathsize="big"><mstyle><mrow><mi>t2</mi><mo>,</mo></mrow></mstyle></math>&nbsp;where<br />
&nbsp;&nbsp;n1&nbsp;:=&nbsp;triangleNormal(t1)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<math xmlns="&mathml;" mathsize="big"><mstyle><mi>t1</mi></mstyle></math>&nbsp;and&nbsp;<math xmlns="&mathml;" mathsize="big"><mstyle><mi>t2</mi></mstyle></math>&nbsp;are&nbsp;the&nbsp;vertices<br />
&nbsp;&nbsp;n2&nbsp;:=&nbsp;triangleNormal(t2)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;of&nbsp;two&nbsp;triangles&nbsp;in&nbsp;3-space<br />
&nbsp;&nbsp;tet2tet(concat(t1,&nbsp;n1),&nbsp;concat(t2,&nbsp;n2))<br />
<br />
tet2tet:&nbsp;(List&nbsp;Point&nbsp;DFLOAT,&nbsp;List&nbsp;Point&nbsp;DFLOAT)&nbsp;-&gt;&nbsp;DHMATRIX(DFLOAT)<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Compute&nbsp;a&nbsp;DHMATRIX&nbsp;that<br />
tet2tet(t1,&nbsp;t2)&nbsp;==&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;transforms&nbsp;<math xmlns="&mathml;" mathsize="big"><mstyle><mi>t1</mi></mstyle></math>&nbsp;to&nbsp;<math xmlns="&mathml;" mathsize="big"><mstyle><mrow><mi>t2</mi><mo>,</mo></mrow></mstyle></math><br />
&nbsp;&nbsp;m1&nbsp;:=&nbsp;makeColumnMatrix&nbsp;t1&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;where&nbsp;<math xmlns="&mathml;" mathsize="big"><mstyle><mi>t1</mi></mstyle></math>&nbsp;and&nbsp;<math xmlns="&mathml;" mathsize="big"><mstyle><mi>t2</mi></mstyle></math>&nbsp;are&nbsp;the<br />
&nbsp;&nbsp;m2&nbsp;:=&nbsp;makeColumnMatrix&nbsp;t2&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;vertices&nbsp;of&nbsp;two&nbsp;tetrahedrons<br />
&nbsp;&nbsp;m2&nbsp;*&nbsp;inverse(m1)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;in&nbsp;3-space<br />
<br />
makeColumnMatrix(t)&nbsp;==&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Put&nbsp;the&nbsp;vertices&nbsp;of&nbsp;a&nbsp;tetra-<br />
&nbsp;&nbsp;m&nbsp;:=&nbsp;new(4,4,0)$DHMATRIX(DFLOAT)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;hedron&nbsp;into&nbsp;matrix&nbsp;form<br />
&nbsp;&nbsp;for&nbsp;x&nbsp;in&nbsp;t&nbsp;for&nbsp;i&nbsp;in&nbsp;1..repeat<br />
&nbsp;&nbsp;&nbsp;&nbsp;for&nbsp;j&nbsp;in&nbsp;1..3&nbsp;repeat<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;m(j,i)&nbsp;:=&nbsp;x.j<br />
&nbsp;&nbsp;&nbsp;&nbsp;m(4,i)&nbsp;:=&nbsp;1<br />
&nbsp;&nbsp;m<br />
<br />
triangleNormal(t)&nbsp;==&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Compute&nbsp;a&nbsp;vector&nbsp;normal&nbsp;to<br />
&nbsp;&nbsp;a&nbsp;:=&nbsp;triangleArea&nbsp;t&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;the&nbsp;given&nbsp;triangle,&nbsp;whose<br />
&nbsp;&nbsp;p1&nbsp;:=&nbsp;t.2&nbsp;-&nbsp;t.1&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;length&nbsp;is&nbsp;the&nbsp;square&nbsp;root<br />
&nbsp;&nbsp;p2&nbsp;:=&nbsp;t.3&nbsp;-&nbsp;t.2&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;of&nbsp;the&nbsp;area&nbsp;of&nbsp;the&nbsp;triangle<br />
&nbsp;&nbsp;c&nbsp;:=&nbsp;cross(p1,&nbsp;p2)<br />
&nbsp;&nbsp;len&nbsp;:=&nbsp;length(c)<br />
&nbsp;&nbsp;len&nbsp;=&nbsp;0&nbsp;=&gt;&nbsp;error&nbsp;"degenerate&nbsp;triangle!"<br />
&nbsp;&nbsp;c&nbsp;:=&nbsp;(1/len)*c<br />
&nbsp;&nbsp;t.1&nbsp;+&nbsp;sqrt(a)&nbsp;*&nbsp;c<br />
<br />
triangleArea&nbsp;t&nbsp;==&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Compute&nbsp;the&nbsp;area&nbsp;of&nbsp;a<br />
&nbsp;&nbsp;a&nbsp;:=&nbsp;length(t.2&nbsp;-&nbsp;t.1)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;triangle&nbsp;using&nbsp;Heron's<br />
&nbsp;&nbsp;b&nbsp;:=&nbsp;length(t.3&nbsp;-&nbsp;t.2)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;formula<br />
&nbsp;&nbsp;c&nbsp;:=&nbsp;length(t.1&nbsp;-&nbsp;t.3)<br />
&nbsp;&nbsp;s&nbsp;:=&nbsp;(a+b+c)/2<br />
&nbsp;&nbsp;sqrt(s*(s-a)*(s-b)*(s-c))<br />
</div>





</div><a href="book-contents.xhtml" style="margin-right: 10px;">Book Contents</a>
<a href="section-21.10.xhtml" style="margin-right: 10px;">Previous Section 21.10 ntube.input</a><a href="section-21.12.xhtml" style="margin-right: 10px;">Next Section 21.12 tetra.input</a>
<a href="book-index.xhtml">Book Index</a></body>
</html>