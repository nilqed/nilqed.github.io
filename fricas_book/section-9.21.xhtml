<?xml version="1.0" encoding="UTF-8" ?>

<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.1 plus MathML 2.0//EN"
"http://www.w3.org/TR/MathML2/dtd/xhtml-math11-f.dtd" [
<!ENTITY mathml "http://www.w3.org/1998/Math/MathML">
]>

<html xmlns="http://www.w3.org/1999/xhtml"
      xmlns:xlink="http://www.w3.org/1999/xlink" >


  <head>
    <title>Section9.21</title>
    <link rel="stylesheet" type="text/css" href="graphicstyle.css" />
    <script type="text/javascript" src="bookax1.js" />
  </head>

  <body>
<a href="book-contents.xhtml" style="margin-right: 10px;">Book Contents</a><a href="section-9.20.xhtml" style="margin-right: 10px;">Previous Section 9.20 Exit</a><a href="section-9.22.xhtml" style="margin-right: 10px;">Next Section 9.22 Factored</a>
<a href="book-index.xhtml">Book Index</a><div class="section"  id="sec-9.21">
<h2 class="sectiontitle">9.21  Expression</h2>


<a name="ExpressionXmpPage" class="label"/>


<p><span class="teletype">Expression</span> is a constructor that creates domains whose objects
can have very general symbolic forms.  Here are some examples:
</p>


<p>This is an object of type <span class="teletype">Expression Integer</span>.
</p>




<div id="spadComm9-129" class="spadComm" >
<form id="formComm9-129" action="javascript:makeRequest('9-129');" >
<input id="comm9-129" type="text" class="command" style="width: 14em;" value="sin(x) + 3*cos(x)^2" />
</form>
<span id="commSav9-129" class="commSav" >sin(x) + 3*cos(x)^2</span>
<div id="mathAns9-129" ></div>
</div>


<div class="math">
<table>
<tr><td>
<math xmlns="&mathml;" mathsize="big" display="block"><mstyle><mrow><mrow><mo>sin</mo><mo>(</mo><mi>x</mi><mo>)</mo></mrow><mo>+</mo><mrow><mn>3</mn><mspace width="0.5 em" /><mrow><msup><mrow><mo>cos</mo><mo>(</mo><mi>x</mi><mo>)</mo></mrow><mn>2</mn></msup></mrow></mrow></mrow></mstyle></math>
</td></tr>
</table>
</div>




<div class="returnType">
Type: Expression Integer
</div>



<p>This is an object of type <span class="teletype">Expression Float</span>.
</p>




<div id="spadComm9-130" class="spadComm" >
<form id="formComm9-130" action="javascript:makeRequest('9-130');" >
<input id="comm9-130" type="text" class="command" style="width: 10em;" value="tan(x) - 3.45*x" />
</form>
<span id="commSav9-130" class="commSav" >tan(x) - 3.45*x</span>
<div id="mathAns9-130" ></div>
</div>


<div class="math">
<table>
<tr><td>
<math xmlns="&mathml;" mathsize="big" display="block"><mstyle><mrow><mrow><mo>tan</mo><mo>(</mo><mi>x</mi><mo>)</mo></mrow><mo>-</mo><mrow><mrow><mn>3</mn><mo>.</mo><mn>45</mn></mrow><mspace width="0.5 em" /><mi>x</mi></mrow></mrow></mstyle></math>
</td></tr>
</table>
</div>




<div class="returnType">
Type: Expression Float
</div>



<p>This object contains symbolic function applications, sums,
products, square roots, and a quotient.
</p>




<div id="spadComm9-131" class="spadComm" >
<form id="formComm9-131" action="javascript:makeRequest('9-131');" >
<input id="comm9-131" type="text" class="command" style="width: 32em;" value="(tan sqrt 7 - sin sqrt 11)^2 / (4 - cos(x - y))" />
</form>
<span id="commSav9-131" class="commSav" >(tan sqrt 7 - sin sqrt 11)^2 / (4 - cos(x - y))</span>
<div id="mathAns9-131" ></div>
</div>


<div class="math">
<table>
<tr><td>
<math xmlns="&mathml;" mathsize="big" display="block"><mstyle><mfrac><mrow><mo>-</mo><mrow><msup><mrow><mo>tan</mo><mo>(</mo><mrow><msqrt><mn>7</mn></msqrt></mrow><mo>)</mo></mrow><mn>2</mn></msup></mrow><mo>+</mo><mrow><mn>2</mn><mspace width="0.5 em" /><mrow><mo>sin</mo><mo>(</mo><mrow><msqrt><mn>11</mn></msqrt></mrow><mo>)</mo></mrow><mspace width="0.5 em" /><mrow><mo>tan</mo><mo>(</mo><mrow><msqrt><mn>7</mn></msqrt></mrow><mo>)</mo></mrow></mrow><mo>-</mo><mrow><msup><mrow><mo>sin</mo><mo>(</mo><mrow><msqrt><mn>11</mn></msqrt></mrow><mo>)</mo></mrow><mn>2</mn></msup></mrow></mrow><mrow><mrow><mo>cos</mo><mo>(</mo><mrow><mi>y</mi><mo>-</mo><mi>x</mi></mrow><mo>)</mo></mrow><mo>-</mo><mn>4</mn></mrow></mfrac></mstyle></math>
</td></tr>
</table>
</div>




<div class="returnType">
Type: Expression Integer
</div>



<p>As you can see, <span class="teletype">Expression</span> actually takes an argument domain.
The <span class="italic">coefficients</span> of the terms within the expression belong to
the argument domain.  <span class="teletype">Integer</span> and <span class="teletype">Float</span>, along with 
<span class="teletype">Complex Integer</span> and <span class="teletype">Complex Float</span> are the most common
coefficient domains.
</p>


<p>The choice of whether to use a <span class="teletype">Complex</span> coefficient domain or not
is important since FriCAS can perform some simplifications on
real-valued objects
</p>




<div id="spadComm9-132" class="spadComm" >
<form id="formComm9-132" action="javascript:makeRequest('9-132');" >
<input id="comm9-132" type="text" class="command" style="width: 21em;" value="log(exp  x)@Expression(Integer)" />
</form>
<span id="commSav9-132" class="commSav" >log(exp  x)@Expression(Integer)</span>
<div id="mathAns9-132" ></div>
</div>

<p> 
<math xmlns="&mathml;" mathsize="big" display="block"><mstyle><mi>x</mi></mstyle></math>
</p>



<div class="returnType">
Type: Expression Integer
</div>



<p>... which are not valid on complex ones.
</p>




<div id="spadComm9-133" class="spadComm" >
<form id="formComm9-133" action="javascript:makeRequest('9-133');" >
<input id="comm9-133" type="text" class="command" style="width: 26em;" value="log(exp  x)@Expression(Complex Integer)" />
</form>
<span id="commSav9-133" class="commSav" >log(exp  x)@Expression(Complex Integer)</span>
<div id="mathAns9-133" ></div>
</div>

<p> 
<math xmlns="&mathml;" mathsize="big" display="block"><mstyle><mrow><mo>log</mo><mo>(</mo><mrow><msup><mi>e</mi><mi>x</mi></msup></mrow><mo>)</mo></mrow></mstyle></math>
</p>



<div class="returnType">
Type: Expression Complex Integer
</div>



<p>Many potential coefficient domains, such as <span class="teletype">AlgebraicNumber</span>, are
not usually used because <span class="teletype">Expression</span> can subsume them.
</p>




<div id="spadComm9-134" class="spadComm" >
<form id="formComm9-134" action="javascript:makeRequest('9-134');" >
<input id="comm9-134" type="text" class="command" style="width: 19em;" value="sqrt 3 + sqrt(2 + sqrt(-5)) " />
</form>
<span id="commSav9-134" class="commSav" >sqrt 3 + sqrt(2 + sqrt(-5)) </span>
<div id="mathAns9-134" ></div>
</div>


<div class="math">
<table>
<tr><td>
<math xmlns="&mathml;" mathsize="big" display="block"><mstyle><mrow><mrow><msqrt><mrow><mrow><msqrt><mrow><mo>-</mo><mn>5</mn></mrow></msqrt></mrow><mo>+</mo><mn>2</mn></mrow></msqrt></mrow><mo>+</mo><mrow><msqrt><mn>3</mn></msqrt></mrow></mrow></mstyle></math>
</td></tr>
</table>
</div>




<div class="returnType">
Type: AlgebraicNumber
</div>





<div id="spadComm9-135" class="spadComm" >
<form id="formComm9-135" action="javascript:makeRequest('9-135');" >
<input id="comm9-135" type="text" class="command" style="width: 17em;" value="% :: Expression Integer " />
</form>
<span id="commSav9-135" class="commSav" >% :: Expression Integer </span>
<div id="mathAns9-135" ></div>
</div>


<div class="math">
<table>
<tr><td>
<math xmlns="&mathml;" mathsize="big" display="block"><mstyle><mrow><mrow><msqrt><mrow><mrow><msqrt><mrow><mo>-</mo><mn>5</mn></mrow></msqrt></mrow><mo>+</mo><mn>2</mn></mrow></msqrt></mrow><mo>+</mo><mrow><msqrt><mn>3</mn></msqrt></mrow></mrow></mstyle></math>
</td></tr>
</table>
</div>




<div class="returnType">
Type: Expression Integer
</div>



<p>Note that we sometimes talk about <span class="italic">an object of type <span class="teletype">Expression</span>.</span> This is not really correct because we should say, for
example, <span class="italic">an object of type <span class="teletype">Expression Integer</span></span> or <span class="italic">an object
of type <span class="teletype">Expression Float</span>.</span>  By a similar abuse of language,
when we refer to an <span class="italic">expression</span> in this section we will mean an
object of type <span class="teletype">Expression R</span> for some domain <span class="teletype">R</span>.
</p>


<p>The FriCAS documentation contains many examples of the use of <span class="teletype">Expression</span>.  For the rest of this section, we'll give you some
pointers to those examples plus give you some idea of how to
manipulate expressions.
</p>


<p>It is important for you to know that <span class="teletype">Expression</span> creates domains
that have category <span class="teletype">Field</span>.  Thus you can invert any non-zero
expression and you shouldn't expect an operation like <span class="teletype">factor</span> to
give you much information.  You can imagine expressions as being
represented as quotients of <span class="italic">multivariate</span> polynomials where the
<span class="italic">variables</span> are kernels (see 
<a href="section-9.37.xhtml#KernelXmpPage" class="ref" >KernelXmpPage</a> ).  A kernel can
either be a symbol such as <span class="teletype">x</span> or a symbolic function application
like <span class="teletype">sin(x + 4)</span>.  The second example is actually a nested kernel
since the argument to <span class="teletype">sin</span> contains the kernel <span class="teletype">x</span>.
</p>




<div id="spadComm9-136" class="spadComm" >
<form id="formComm9-136" action="javascript:makeRequest('9-136');" >
<input id="comm9-136" type="text" class="command" style="width: 19em;" value="height mainKernel sin(x + 4)" />
</form>
<span id="commSav9-136" class="commSav" >height mainKernel sin(x + 4)</span>
<div id="mathAns9-136" ></div>
</div>


<div class="math">
<table>
<tr><td>
<math xmlns="&mathml;" mathsize="big" display="block"><mstyle><mn>2</mn></mstyle></math>
</td></tr>
</table>
</div>




<div class="returnType">
Type: PositiveInteger
</div>



<p>Actually, the argument to <span class="teletype">sin</span> is an expression, and so the
structure of <span class="teletype">Expression</span> is recursive.  
<a href="section-9.37.xhtml#KernelXmpPage" class="ref" >KernelXmpPage</a> 
demonstrates how to extract the kernels in an expression.
</p>


<p>Use the HyperDoc Browse facility to see what operations are applicable
to expression.  At the time of this writing, there were 262 operations
with 147 distinct name in <span class="teletype">Expression Integer</span>.  For example,
<span class="spadfunFrom" >numer</span><span class="index">numer</span><a name="chapter-9-20"/><span class="index">Expression</span><a name="chapter-9-21"/> and <span class="spadfunFrom" >denom</span><span class="index">denom</span><a name="chapter-9-22"/><span class="index">Expression</span><a name="chapter-9-23"/>
extract the numerator and denominator of an expression.
</p>




<div id="spadComm9-137" class="spadComm" >
<form id="formComm9-137" action="javascript:makeRequest('9-137');" >
<input id="comm9-137" type="text" class="command" style="width: 30em;" value="e := (sin(x) - 4)^2 / ( 1 - 2*y*sqrt(- y) ) " />
</form>
<span id="commSav9-137" class="commSav" >e := (sin(x) - 4)^2 / ( 1 - 2*y*sqrt(- y) ) </span>
<div id="mathAns9-137" ></div>
</div>


<div class="math">
<table>
<tr><td>
<math xmlns="&mathml;" mathsize="big" display="block"><mstyle><mfrac><mrow><mo>-</mo><mrow><msup><mrow><mo>sin</mo><mo>(</mo><mi>x</mi><mo>)</mo></mrow><mn>2</mn></msup></mrow><mo>+</mo><mrow><mn>8</mn><mspace width="0.5 em" /><mrow><mo>sin</mo><mo>(</mo><mi>x</mi><mo>)</mo></mrow></mrow><mo>-</mo><mn>16</mn></mrow><mrow><mrow><mn>2</mn><mspace width="0.5 em" /><mi>y</mi><mspace width="0.5 em" /><mrow><msqrt><mrow><mo>-</mo><mi>y</mi></mrow></msqrt></mrow></mrow><mo>-</mo><mn>1</mn></mrow></mfrac></mstyle></math>
</td></tr>
</table>
</div>




<div class="returnType">
Type: Expression Integer
</div>





<div id="spadComm9-138" class="spadComm" >
<form id="formComm9-138" action="javascript:makeRequest('9-138');" >
<input id="comm9-138" type="text" class="command" style="width: 6em;" value="numer e " />
</form>
<span id="commSav9-138" class="commSav" >numer e </span>
<div id="mathAns9-138" ></div>
</div>


<div class="math">
<table>
<tr><td>
<math xmlns="&mathml;" mathsize="big" display="block"><mstyle><mrow><mo>-</mo><mrow><msup><mrow><mo>sin</mo><mo>(</mo><mi>x</mi><mo>)</mo></mrow><mn>2</mn></msup></mrow><mo>+</mo><mrow><mn>8</mn><mspace width="0.5 em" /><mrow><mo>sin</mo><mo>(</mo><mi>x</mi><mo>)</mo></mrow></mrow><mo>-</mo><mn>16</mn></mrow></mstyle></math>
</td></tr>
</table>
</div>




<div class="returnType">
Type: 
SparseMultivariatePolynomial(Integer,Kernel Expression Integer)
</div>





<div id="spadComm9-139" class="spadComm" >
<form id="formComm9-139" action="javascript:makeRequest('9-139');" >
<input id="comm9-139" type="text" class="command" style="width: 6em;" value="denom e " />
</form>
<span id="commSav9-139" class="commSav" >denom e </span>
<div id="mathAns9-139" ></div>
</div>


<div class="math">
<table>
<tr><td>
<math xmlns="&mathml;" mathsize="big" display="block"><mstyle><mrow><mrow><mn>2</mn><mspace width="0.5 em" /><mi>y</mi><mspace width="0.5 em" /><mrow><msqrt><mrow><mo>-</mo><mi>y</mi></mrow></msqrt></mrow></mrow><mo>-</mo><mn>1</mn></mrow></mstyle></math>
</td></tr>
</table>
</div>




<div class="returnType">
Type: 
SparseMultivariatePolynomial(Integer,Kernel Expression Integer)
</div>



<p>Use <span class="spadfunFrom" >D</span><span class="index">D</span><a name="chapter-9-24"/><span class="index">Expression</span><a name="chapter-9-25"/> to compute partial derivatives.
</p>




<div id="spadComm9-140" class="spadComm" >
<form id="formComm9-140" action="javascript:makeRequest('9-140');" >
<input id="comm9-140" type="text" class="command" style="width: 6em;" value="D(e, x) " />
</form>
<span id="commSav9-140" class="commSav" >D(e, x) </span>
<div id="mathAns9-140" ></div>
</div>


<div class="math">
<table>
<tr><td>
<math xmlns="&mathml;" mathsize="big" display="block"><mstyle><mfrac><mrow><mrow><mrow><mo>(</mo><mrow><mn>4</mn><mspace width="0.5 em" /><mi>y</mi><mspace width="0.5 em" /><mrow><mo>cos</mo><mo>(</mo><mi>x</mi><mo>)</mo></mrow><mspace width="0.5 em" /><mrow><mo>sin</mo><mo>(</mo><mi>x</mi><mo>)</mo></mrow></mrow><mo>-</mo><mrow><mn>16</mn><mspace width="0.5 em" /><mi>y</mi><mspace width="0.5 em" /><mrow><mo>cos</mo><mo>(</mo><mi>x</mi><mo>)</mo></mrow></mrow><mo>)</mo></mrow><mspace width="0.5 em" /><mrow><msqrt><mrow><mo>-</mo><mi>y</mi></mrow></msqrt></mrow></mrow><mo>-</mo><mrow><mn>2</mn><mspace width="0.5 em" /><mrow><mo>cos</mo><mo>(</mo><mi>x</mi><mo>)</mo></mrow><mspace width="0.5 em" /><mrow><mo>sin</mo><mo>(</mo><mi>x</mi><mo>)</mo></mrow></mrow><mo>+</mo><mrow><mn>8</mn><mspace width="0.5 em" /><mrow><mo>cos</mo><mo>(</mo><mi>x</mi><mo>)</mo></mrow></mrow></mrow><mrow><mrow><mn>4</mn><mspace width="0.5 em" /><mi>y</mi><mspace width="0.5 em" /><mrow><msqrt><mrow><mo>-</mo><mi>y</mi></mrow></msqrt></mrow></mrow><mo>+</mo><mrow><mn>4</mn><mspace width="0.5 em" /><mrow><msup><mi>y</mi><mn>3</mn></msup></mrow></mrow><mo>-</mo><mn>1</mn></mrow></mfrac></mstyle></math>
</td></tr>
</table>
</div>




<div class="returnType">
Type: Expression Integer
</div>



<p>See 
<a href="ugIntroCalcDerivPage" class="ref" >ugIntroCalcDerivPage</a>  in Section 
<a href="ugIntroCalcDerivNumber" class="ref" >ugIntroCalcDerivNumber</a> 
for more examples of expressions and derivatives.
</p>




<div id="spadComm9-141" class="spadComm" >
<form id="formComm9-141" action="javascript:makeRequest('9-141');" >
<input id="comm9-141" type="text" class="command" style="width: 14em;" value="D(e, [x, y], [1, 2]) " />
</form>
<span id="commSav9-141" class="commSav" >D(e, [x, y], [1, 2]) </span>
<div id="mathAns9-141" ></div>
</div>


<div class="math">
<table>
<tr><td>
<math xmlns="&mathml;" mathsize="big" display="block"><mstyle><mfrac><mrow><mo>(</mo><mtable><mtr><mtd><mrow><mrow><mo>(</mo><mrow><mrow><mo>(</mo><mo>-</mo><mrow><mn>2304</mn><mspace width="0.5 em" /><mrow><msup><mi>y</mi><mn>7</mn></msup></mrow></mrow><mo>+</mo><mrow><mn>960</mn><mspace width="0.5 em" /><mrow><msup><mi>y</mi><mn>4</mn></msup></mrow></mrow><mo>)</mo></mrow><mspace width="0.5 em" /><mrow><mo>cos</mo><mo>(</mo><mi>x</mi><mo>)</mo></mrow><mspace width="0.5 em" /><mrow><mo>sin</mo><mo>(</mo><mi>x</mi><mo>)</mo></mrow></mrow><mo>+</mo><mrow><mrow><mo>(</mo><mrow><mn>9216</mn><mspace width="0.5 em" /><mrow><msup><mi>y</mi><mn>7</mn></msup></mrow></mrow><mo>-</mo><mrow><mn>3840</mn><mspace width="0.5 em" /><mrow><msup><mi>y</mi><mn>4</mn></msup></mrow></mrow><mo>)</mo></mrow><mspace width="0.5 em" /><mrow><mo>cos</mo><mo>(</mo><mi>x</mi><mo>)</mo></mrow></mrow><mo>)</mo></mrow><mspace width="0.5 em" /><mrow><msqrt><mrow><mo>-</mo><mi>y</mi></mrow></msqrt></mrow></mrow><mo>+</mo></mtd></mtr><mtr><mtd></mtd></mtr><mtr><mtd><mrow><mrow><mo>(</mo><mo>-</mo><mrow><mn>960</mn><mspace width="0.5 em" /><mrow><msup><mi>y</mi><mn>9</mn></msup></mrow></mrow><mo>+</mo><mrow><mn>2160</mn><mspace width="0.5 em" /><mrow><msup><mi>y</mi><mn>6</mn></msup></mrow></mrow><mo>-</mo><mrow><mn>180</mn><mspace width="0.5 em" /><mrow><msup><mi>y</mi><mn>3</mn></msup></mrow></mrow><mo>-</mo><mn>3</mn><mo>)</mo></mrow><mspace width="0.5 em" /><mrow><mo>cos</mo><mo>(</mo><mi>x</mi><mo>)</mo></mrow><mspace width="0.5 em" /><mrow><mo>sin</mo><mo>(</mo><mi>x</mi><mo>)</mo></mrow></mrow><mo>+</mo></mtd></mtr><mtr><mtd></mtd></mtr><mtr><mtd><mrow><mrow><mo>(</mo><mrow><mn>3840</mn><mspace width="0.5 em" /><mrow><msup><mi>y</mi><mn>9</mn></msup></mrow></mrow><mo>-</mo><mrow><mn>8640</mn><mspace width="0.5 em" /><mrow><msup><mi>y</mi><mn>6</mn></msup></mrow></mrow><mo>+</mo><mrow><mn>720</mn><mspace width="0.5 em" /><mrow><msup><mi>y</mi><mn>3</mn></msup></mrow></mrow><mo>+</mo><mn>12</mn><mo>)</mo></mrow><mspace width="0.5 em" /><mrow><mo>cos</mo><mo>(</mo><mi>x</mi><mo>)</mo></mrow></mrow></mtd></mtr></mtable><mo>)</mo></mrow><mrow><mo>(</mo><mtable><mtr><mtd><mrow><mrow><mo>(</mo><mrow><mn>256</mn><mspace width="0.5 em" /><mrow><msup><mi>y</mi><mn>12</mn></msup></mrow></mrow><mo>-</mo><mrow><mn>1792</mn><mspace width="0.5 em" /><mrow><msup><mi>y</mi><mn>9</mn></msup></mrow></mrow><mo>+</mo><mrow><mn>1120</mn><mspace width="0.5 em" /><mrow><msup><mi>y</mi><mn>6</mn></msup></mrow></mrow><mo>-</mo><mrow><mn>112</mn><mspace width="0.5 em" /><mrow><msup><mi>y</mi><mn>3</mn></msup></mrow></mrow><mo>+</mo><mn>1</mn><mo>)</mo></mrow><mspace width="0.5 em" /><mrow><msqrt><mrow><mo>-</mo><mi>y</mi></mrow></msqrt></mrow></mrow><mo>-</mo></mtd></mtr><mtr><mtd></mtd></mtr><mtr><mtd><mrow><mn>1024</mn><mspace width="0.5 em" /><mrow><msup><mi>y</mi><mn>11</mn></msup></mrow></mrow><mo>+</mo><mrow><mn>1792</mn><mspace width="0.5 em" /><mrow><msup><mi>y</mi><mn>8</mn></msup></mrow></mrow><mo>-</mo><mrow><mn>448</mn><mspace width="0.5 em" /><mrow><msup><mi>y</mi><mn>5</mn></msup></mrow></mrow><mo>+</mo><mrow><mn>16</mn><mspace width="0.5 em" /><mrow><msup><mi>y</mi><mn>2</mn></msup></mrow></mrow></mtd></mtr></mtable><mo>)</mo></mrow></mfrac></mstyle></math>
</td></tr>
</table>
</div>




<div class="returnType">
Type: Expression Integer
</div>



<p>See 
<a href="ugIntroCalcLimitsPage" class="ref" >ugIntroCalcLimitsPage</a>  in Section
<a href="ugIntroCalcLimitsNumber" class="ref" >ugIntroCalcLimitsNumber</a>  and 
<a href="ugIntroSeriesPage" class="ref" >ugIntroSeriesPage</a>  in Section
<a href="ugIntroSeriesNumber" class="ref" >ugIntroSeriesNumber</a>  
for more examples of expressions and
calculus.  Differential equations involving expressions are discussed
in <a href="ugProblemDEQPage" class="ref" >ugProblemDEQPage</a>  in Section 
<a href="ugProblemDEQNumber" class="ref" >ugProblemDEQNumber</a> .
Chapter 8 has many advanced examples: see
<a href="ugProblemIntegrationPage" class="ref" >ugProblemIntegrationPage</a>  
in Section
<a href="ugProblemIntegrationNumber" class="ref" >ugProblemIntegrationNumber</a>  
for a discussion of FriCAS's integration facilities.
</p>


<p>When an expression involves no <span class="italic">symbol kernels</span> (for example, 
<span class="teletype">x</span>), it may be possible to numerically evaluate the expression.
</p>


<p>If you suspect the evaluation will create a complex number, use 
<span class="teletype">complexNumeric</span>.
</p>




<div id="spadComm9-142" class="spadComm" >
<form id="formComm9-142" action="javascript:makeRequest('9-142');" >
<input id="comm9-142" type="text" class="command" style="width: 20em;" value="complexNumeric(cos(2 - 3*%i))" />
</form>
<span id="commSav9-142" class="commSav" >complexNumeric(cos(2 - 3*%i))</span>
<div id="mathAns9-142" ></div>
</div>


<div class="math">
<table>
<tr><td>
<math xmlns="&mathml;" mathsize="big" display="block"><mstyle><mrow><mo>-</mo><mrow><mn>4</mn><mo>.</mo><mn>1896256909</mn><mspace width="0.5 em" /><mn>688072301</mn></mrow><mo>+</mo><mrow><mrow><mn>9</mn><mo>.</mo><mn>1092278937</mn><mspace width="0.5 em" /><mn>55336598</mn></mrow><mspace width="0.5 em" /><mi>i</mi></mrow></mrow></mstyle></math>
</td></tr>
</table>
</div>




<div class="returnType">
Type: Complex Float
</div>



<p>If you know it will be real, use <span class="teletype">numeric</span>.
</p>




<div id="spadComm9-143" class="spadComm" >
<form id="formComm9-143" action="javascript:makeRequest('9-143');" >
<input id="comm9-143" type="text" class="command" style="width: 11em;" value="numeric(tan 3.8)" />
</form>
<span id="commSav9-143" class="commSav" >numeric(tan 3.8)</span>
<div id="mathAns9-143" ></div>
</div>


<div class="math">
<table>
<tr><td>
<math xmlns="&mathml;" mathsize="big" display="block"><mstyle><mrow><mn>0</mn><mo>.</mo><mn>7735560905</mn><mspace width="0.5 em" /><mn>0312607286</mn></mrow></mstyle></math>
</td></tr>
</table>
</div>




<div class="returnType">
Type: Float
</div>



<p>The <span class="teletype">numeric</span> operation will display an error message if the
evaluation yields a calue with an non-zero imaginary part.  Both of
these operations have an optional second argument <span class="teletype">n</span> which
specifies that the accuracy of the approximation be up to <span class="teletype">n</span>
decimal places.
</p>


<p>When an expression involves no <span class="italic">symbolic application</span> kernels, it
may be possible to convert it a polynomial or rational function in the
variables that are present.
</p>




<div id="spadComm9-144" class="spadComm" >
<form id="formComm9-144" action="javascript:makeRequest('9-144');" >
<input id="comm9-144" type="text" class="command" style="width: 16em;" value="e2 := cos(x^2 - y + 3) " />
</form>
<span id="commSav9-144" class="commSav" >e2 := cos(x^2 - y + 3) </span>
<div id="mathAns9-144" ></div>
</div>


<div class="math">
<table>
<tr><td>
<math xmlns="&mathml;" mathsize="big" display="block"><mstyle><mrow><mo>cos</mo><mo>(</mo><mrow><mi>y</mi><mo>-</mo><mrow><msup><mi>x</mi><mn>2</mn></msup></mrow><mo>-</mo><mn>3</mn></mrow><mo>)</mo></mrow></mstyle></math>
</td></tr>
</table>
</div>




<div class="returnType">
Type: Expression Integer
</div>





<div id="spadComm9-145" class="spadComm" >
<form id="formComm9-145" action="javascript:makeRequest('9-145');" >
<input id="comm9-145" type="text" class="command" style="width: 16em;" value="e3 := asin(e2) - %pi/2 " />
</form>
<span id="commSav9-145" class="commSav" >e3 := asin(e2) - %pi/2 </span>
<div id="mathAns9-145" ></div>
</div>


<div class="math">
<table>
<tr><td>
<math xmlns="&mathml;" mathsize="big" display="block"><mstyle><mrow><mo>-</mo><mi>y</mi><mo>+</mo><mrow><msup><mi>x</mi><mn>2</mn></msup></mrow><mo>+</mo><mn>3</mn></mrow></mstyle></math>
</td></tr>
</table>
</div>




<div class="returnType">
Type: Expression Integer
</div>





<div id="spadComm9-146" class="spadComm" >
<form id="formComm9-146" action="javascript:makeRequest('9-146');" >
<input id="comm9-146" type="text" class="command" style="width: 17em;" value="e3 :: Polynomial Integer " />
</form>
<span id="commSav9-146" class="commSav" >e3 :: Polynomial Integer </span>
<div id="mathAns9-146" ></div>
</div>


<div class="math">
<table>
<tr><td>
<math xmlns="&mathml;" mathsize="big" display="block"><mstyle><mrow><mo>-</mo><mi>y</mi><mo>+</mo><mrow><msup><mi>x</mi><mn>2</mn></msup></mrow><mo>+</mo><mn>3</mn></mrow></mstyle></math>
</td></tr>
</table>
</div>




<div class="returnType">
Type: Polynomial Integer
</div>



<p>This also works for the polynomial types where specific variables
and their ordering are given.
</p>




<div id="spadComm9-147" class="spadComm" >
<form id="formComm9-147" action="javascript:makeRequest('9-147');" >
<input id="comm9-147" type="text" class="command" style="width: 18em;" value="e3 :: DMP([x, y], Integer) " />
</form>
<span id="commSav9-147" class="commSav" >e3 :: DMP([x, y], Integer) </span>
<div id="mathAns9-147" ></div>
</div>


<div class="math">
<table>
<tr><td>
<math xmlns="&mathml;" mathsize="big" display="block"><mstyle><mrow><mrow><msup><mi>x</mi><mn>2</mn></msup></mrow><mo>-</mo><mi>y</mi><mo>+</mo><mn>3</mn></mrow></mstyle></math>
</td></tr>
</table>
</div>




<div class="returnType">
Type: DistributedMultivariatePolynomial([x,y],Integer)
</div>



<p>Finally, a certain amount of simplication takes place as expressions
are constructed.
</p>




<div id="spadComm9-148" class="spadComm" >
<form id="formComm9-148" action="javascript:makeRequest('9-148');" >
<input id="comm9-148" type="text" class="command" style="width: 6em;" value="sin %pi" />
</form>
<span id="commSav9-148" class="commSav" >sin %pi</span>
<div id="mathAns9-148" ></div>
</div>


<div class="math">
<table>
<tr><td>
<math xmlns="&mathml;" mathsize="big" display="block"><mstyle><mn>0</mn></mstyle></math>
</td></tr>
</table>
</div>




<div class="returnType">
Type: Expression Integer
</div>





<div id="spadComm9-149" class="spadComm" >
<form id="formComm9-149" action="javascript:makeRequest('9-149');" >
<input id="comm9-149" type="text" class="command" style="width: 9em;" value="cos(%pi / 4)" />
</form>
<span id="commSav9-149" class="commSav" >cos(%pi / 4)</span>
<div id="mathAns9-149" ></div>
</div>


<div class="math">
<table>
<tr><td>
<math xmlns="&mathml;" mathsize="big" display="block"><mstyle><mfrac><mrow><msqrt><mn>2</mn></msqrt></mrow><mn>2</mn></mfrac></mstyle></math>
</td></tr>
</table>
</div>




<div class="returnType">
Type: Expression Integer
</div>



<p>For simplications that involve multiple terms of the expression, use
<span class="teletype">simplify</span>.
</p>




<div id="spadComm9-150" class="spadComm" >
<form id="formComm9-150" action="javascript:makeRequest('9-150');" >
<input id="comm9-150" type="text" class="command" style="width: 28em;" value="tan(x)^6 + 3*tan(x)^4 + 3*tan(x)^2 + 1 " />
</form>
<span id="commSav9-150" class="commSav" >tan(x)^6 + 3*tan(x)^4 + 3*tan(x)^2 + 1 </span>
<div id="mathAns9-150" ></div>
</div>


<div class="math">
<table>
<tr><td>
<math xmlns="&mathml;" mathsize="big" display="block"><mstyle><mrow><mrow><msup><mrow><mo>tan</mo><mo>(</mo><mi>x</mi><mo>)</mo></mrow><mn>6</mn></msup></mrow><mo>+</mo><mrow><mn>3</mn><mspace width="0.5 em" /><mrow><msup><mrow><mo>tan</mo><mo>(</mo><mi>x</mi><mo>)</mo></mrow><mn>4</mn></msup></mrow></mrow><mo>+</mo><mrow><mn>3</mn><mspace width="0.5 em" /><mrow><msup><mrow><mo>tan</mo><mo>(</mo><mi>x</mi><mo>)</mo></mrow><mn>2</mn></msup></mrow></mrow><mo>+</mo><mn>1</mn></mrow></mstyle></math>
</td></tr>
</table>
</div>




<div class="returnType">
Type: Expression Integer
</div>





<div id="spadComm9-151" class="spadComm" >
<form id="formComm9-151" action="javascript:makeRequest('9-151');" >
<input id="comm9-151" type="text" class="command" style="width: 8em;" value="simplify % " />
</form>
<span id="commSav9-151" class="commSav" >simplify % </span>
<div id="mathAns9-151" ></div>
</div>


<div class="math">
<table>
<tr><td>
<math xmlns="&mathml;" mathsize="big" display="block"><mstyle><mfrac><mn>1</mn><mrow><msup><mrow><mo>cos</mo><mo>(</mo><mi>x</mi><mo>)</mo></mrow><mn>6</mn></msup></mrow></mfrac></mstyle></math>
</td></tr>
</table>
</div>




<div class="returnType">
Type: Expression Integer
</div>



<p>See <a href="ugUserRulesPage" class="ref" >ugUserRulesPage</a>  in Section 
<a href="ugUserRulesNumber" class="ref" >ugUserRulesNumber</a>  for
examples of how to write your own rewrite rules for expressions.
</p>




</div><a href="book-contents.xhtml" style="margin-right: 10px;">Book Contents</a>
<a href="section-9.20.xhtml" style="margin-right: 10px;">Previous Section 9.20 Exit</a><a href="section-9.22.xhtml" style="margin-right: 10px;">Next Section 9.22 Factored</a>
<a href="book-index.xhtml">Book Index</a></body>
</html>