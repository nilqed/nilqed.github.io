<?xml version="1.0" encoding="UTF-8" ?>

<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.1 plus MathML 2.0//EN"
"http://www.w3.org/TR/MathML2/dtd/xhtml-math11-f.dtd" [
<!ENTITY mathml "http://www.w3.org/1998/Math/MathML">
]>

<html xmlns="http://www.w3.org/1999/xhtml"
      xmlns:xlink="http://www.w3.org/1999/xlink" >


  <head>
    <title>Section5.5</title>
    <link rel="stylesheet" type="text/css" href="graphicstyle.css" />
    <script type="text/javascript" src="bookax1.js" />
  </head>

  <body>
<a href="book-contents.xhtml" style="margin-right: 10px;">Book Contents</a><a href="section-5.4.xhtml" style="margin-right: 10px;">Previous Section 5.4 Loops</a><a href="section-5.6.xhtml" style="margin-right: 10px;">Next Section 5.6 An Example: Streams of Primes</a>
<a href="book-index.xhtml">Book Index</a><div class="section"  id="sec-5.5">
<h2 class="sectiontitle">5.5  Creating Lists and Streams with Iterators</h2>


<a name="ugLangIts" class="label"/>


<p>All of what we did for loops in 
<a href="section-5.4.xhtml#ugLangLoops" class="ref" >ugLangLoops</a>  <span class="index">iteration</span><a name="chapter-5-52"/>
can be transformed into expressions that create lists
<span class="index">list:created by iterator</span><a name="chapter-5-53"/> and streams.  <span class="index">stream:created
by iterator</span><a name="chapter-5-54"/> The <span class="teletype">repeat</span>, <span class="teletype">break</span> or <span class="teletype">iterate</span> words are not used but
all the other ideas carry over.  Before we give you the general rule,
here are some examples which give you the idea.
</p>


<p>This creates a simple list of the integers from  <math xmlns="&mathml;" mathsize="big"><mstyle><mn>1</mn></mstyle></math> to  <math xmlns="&mathml;" mathsize="big"><mstyle><mn>10</mn></mstyle></math>.
</p>



<div id="spadComm5-61" class="spadComm" >
<form id="formComm5-61" action="javascript:makeRequest('5-61');" >
<input id="comm5-61" type="text" class="command" style="width: 18em;" value="list := [i for i in 1..10]" />
</form>
<span id="commSav5-61" class="commSav" >list := [i for i in 1..10]</span>
<div id="mathAns5-61" ></div>
</div>


<div class="math">
<table>
<tr><td>
<math xmlns="&mathml;" mathsize="big" display="block"><mstyle><mrow><mo>[</mo><mn>1</mn><mo>,</mo><mn>2</mn><mo>,</mo><mn>3</mn><mo>,</mo><mn>4</mn><mo>,</mo><mn>5</mn><mo>,</mo><mn>6</mn><mo>,</mo><mn>7</mn><mo>,</mo><mn>8</mn><mo>,</mo><mn>9</mn><mo>,</mo><mn>10</mn><mo>]</mo></mrow></mstyle></math>
</td></tr>
</table>
</div>




<div class="returnType">
Type: List PositiveInteger
</div>



<p>Create a stream of the integers greater than or equal to  <math xmlns="&mathml;" mathsize="big"><mstyle><mn>1</mn></mstyle></math>.
</p>



<div id="spadComm5-62" class="spadComm" >
<form id="formComm5-62" action="javascript:makeRequest('5-62');" >
<input id="comm5-62" type="text" class="command" style="width: 18em;" value="stream := [i for i in 1..]" />
</form>
<span id="commSav5-62" class="commSav" >stream := [i for i in 1..]</span>
<div id="mathAns5-62" ></div>
</div>


<div class="math">
<table>
<tr><td>
<math xmlns="&mathml;" mathsize="big" display="block"><mstyle><mrow><mo>[</mo><mn>1</mn><mo>,</mo><mn>2</mn><mo>,</mo><mn>3</mn><mo>,</mo><mn>4</mn><mo>,</mo><mn>5</mn><mo>,</mo><mn>6</mn><mo>,</mo><mn>7</mn><mo>,</mo><mn>8</mn><mo>,</mo><mn>9</mn><mo>,</mo><mn>10</mn><mo>,</mo><mo>&#x2026;</mo><mo>]</mo></mrow></mstyle></math>
</td></tr>
</table>
</div>




<div class="returnType">
Type: Stream PositiveInteger
</div>



<p>This is a list of the prime integers between  <math xmlns="&mathml;" mathsize="big"><mstyle><mn>1</mn></mstyle></math> and  <math xmlns="&mathml;" mathsize="big"><mstyle><mn>10</mn></mstyle></math>, inclusive.
</p>



<div id="spadComm5-63" class="spadComm" >
<form id="formComm5-63" action="javascript:makeRequest('5-63');" >
<input id="comm5-63" type="text" class="command" style="width: 20em;" value="[i for i in 1..10 | prime? i]" />
</form>
<span id="commSav5-63" class="commSav" >[i for i in 1..10 | prime? i]</span>
<div id="mathAns5-63" ></div>
</div>


<div class="math">
<table>
<tr><td>
<math xmlns="&mathml;" mathsize="big" display="block"><mstyle><mrow><mo>[</mo><mn>2</mn><mo>,</mo><mn>3</mn><mo>,</mo><mn>5</mn><mo>,</mo><mn>7</mn><mo>]</mo></mrow></mstyle></math>
</td></tr>
</table>
</div>




<div class="returnType">
Type: List PositiveInteger
</div>



<p>This is a stream of the prime integers greater than or equal to  <math xmlns="&mathml;" mathsize="big"><mstyle><mn>1</mn></mstyle></math>.
</p>



<div id="spadComm5-64" class="spadComm" >
<form id="formComm5-64" action="javascript:makeRequest('5-64');" >
<input id="comm5-64" type="text" class="command" style="width: 20em;" value="[i for i in 1..   | prime? i]" />
</form>
<span id="commSav5-64" class="commSav" >[i for i in 1..   | prime? i]</span>
<div id="mathAns5-64" ></div>
</div>


<div class="math">
<table>
<tr><td>
<math xmlns="&mathml;" mathsize="big" display="block"><mstyle><mrow><mo>[</mo><mn>2</mn><mo>,</mo><mn>3</mn><mo>,</mo><mn>5</mn><mo>,</mo><mn>7</mn><mo>,</mo><mn>11</mn><mo>,</mo><mn>13</mn><mo>,</mo><mn>17</mn><mo>,</mo><mn>19</mn><mo>,</mo><mn>23</mn><mo>,</mo><mn>29</mn><mo>,</mo><mo>&#x2026;</mo><mo>]</mo></mrow></mstyle></math>
</td></tr>
</table>
</div>




<div class="returnType">
Type: Stream PositiveInteger
</div>



<p>This is a list of the integers between  <math xmlns="&mathml;" mathsize="big"><mstyle><mn>1</mn></mstyle></math> and  <math xmlns="&mathml;" mathsize="big"><mstyle><mn>10</mn></mstyle></math>, inclusive, whose
squares are less than  <math xmlns="&mathml;" mathsize="big"><mstyle><mn>700</mn></mstyle></math>.
</p>



<div id="spadComm5-65" class="spadComm" >
<form id="formComm5-65" action="javascript:makeRequest('5-65');" >
<input id="comm5-65" type="text" class="command" style="width: 23em;" value="[i for i in 1..10 while i*i &lt; 700]" />
</form>
<span id="commSav5-65" class="commSav" >[i for i in 1..10 while i*i &lt; 700]</span>
<div id="mathAns5-65" ></div>
</div>


<div class="math">
<table>
<tr><td>
<math xmlns="&mathml;" mathsize="big" display="block"><mstyle><mrow><mo>[</mo><mn>1</mn><mo>,</mo><mn>2</mn><mo>,</mo><mn>3</mn><mo>,</mo><mn>4</mn><mo>,</mo><mn>5</mn><mo>,</mo><mn>6</mn><mo>,</mo><mn>7</mn><mo>,</mo><mn>8</mn><mo>,</mo><mn>9</mn><mo>,</mo><mn>10</mn><mo>]</mo></mrow></mstyle></math>
</td></tr>
</table>
</div>




<div class="returnType">
Type: List PositiveInteger
</div>



<p>This is a stream of the integers greater than or equal to  <math xmlns="&mathml;" mathsize="big"><mstyle><mn>1</mn></mstyle></math>
whose squares are less than  <math xmlns="&mathml;" mathsize="big"><mstyle><mn>700</mn></mstyle></math>.
</p>



<div id="spadComm5-66" class="spadComm" >
<form id="formComm5-66" action="javascript:makeRequest('5-66');" >
<input id="comm5-66" type="text" class="command" style="width: 23em;" value="[i for i in 1..   while i*i &lt; 700]" />
</form>
<span id="commSav5-66" class="commSav" >[i for i in 1..   while i*i &lt; 700]</span>
<div id="mathAns5-66" ></div>
</div>


<div class="math">
<table>
<tr><td>
<math xmlns="&mathml;" mathsize="big" display="block"><mstyle><mrow><mo>[</mo><mn>1</mn><mo>,</mo><mn>2</mn><mo>,</mo><mn>3</mn><mo>,</mo><mn>4</mn><mo>,</mo><mn>5</mn><mo>,</mo><mn>6</mn><mo>,</mo><mn>7</mn><mo>,</mo><mn>8</mn><mo>,</mo><mn>9</mn><mo>,</mo><mn>10</mn><mo>,</mo><mo>&#x2026;</mo><mo>]</mo></mrow></mstyle></math>
</td></tr>
</table>
</div>




<div class="returnType">
Type: Stream PositiveInteger
</div>



<p>Here is the general rule.
<span class="index">collection</span><a name="chapter-5-55"/>
</p>




<div class="boxed2">


<div class="boxed">



<p>The general syntax of a collection is
</p>



<div class="center" style="text-align: center;">


<p><span class="teletype">[ <span class="italic">collectExpression</span>  <math xmlns="&mathml;" mathsize="big"><mstyle><mrow><msub><mrow><mtext mathvariant='sans-serif-italic'>iterator</mtext></mrow><mn>1</mn></msub></mrow></mstyle></math>  
 <math xmlns="&mathml;" mathsize="big"><mstyle><mrow><msub><mrow><mtext mathvariant='sans-serif-italic'>iterator</mtext></mrow><mn>2</mn></msub></mrow></mstyle></math> ...  <math xmlns="&mathml;" mathsize="big"><mstyle><mrow><msub><mrow><mtext mathvariant='sans-serif-italic'>iterator</mtext></mrow><mi>N</mi></msub></mrow></mstyle></math> ]</span>
</p>



</div>



<p>where each  <math xmlns="&mathml;" mathsize="big"><mstyle><mrow><msub><mrow><mtext mathvariant='sans-serif-italic'>iterator</mtext></mrow><mi>i</mi></msub></mrow></mstyle></math> is either a <span class="teletype">for</span> or a <span class="teletype">while</span>
clause.  The loop terminates immediately when the end test of any
 <math xmlns="&mathml;" mathsize="big"><mstyle><mrow><msub><mrow><mtext mathvariant='sans-serif-italic'>iterator</mtext></mrow><mi>i</mi></msub></mrow></mstyle></math> succeeds or when a <span class="teletype">return</span> expression is
evaluated in <span class="italic">collectExpression</span>.  The value returned by the
collection is either a list or a stream of elements, one for each
iteration of the <span class="italic">collectExpression</span>.<br/>
</p>



</div>
</div>



<p>Be careful when you use <span class="teletype">while</span> 
<span class="index">stream:using while @{using <span class="teletype">while</span><a name="chapter-5-56"/>}</span> 
to create a stream.  By default, FriCAS tries to compute and
display the first ten elements of a stream.  If the <span class="teletype">while</span> condition
is not satisfied quickly, FriCAS can spend a long (possibly infinite)
time trying to compute <span class="index">stream:number of elements computed</span><a name="chapter-5-57"/> the
elements.  Use <span class="teletype">)set streams calculate</span> to change the default to
something else.  <span class="index">set streams calculate</span><a name="chapter-5-58"/> This also affects the
number of terms computed and displayed for power series.  For the
purposes of this book, we have used this system command to display
fewer than ten terms.
</p>


<p>Use nested iterators to create lists of <span class="index">iteration:nested</span><a name="chapter-5-59"/> lists
which can then be given as an argument to <span style="font-weight: bold;">matrix</span>.
</p>



<div id="spadComm5-67" class="spadComm" >
<form id="formComm5-67" action="javascript:makeRequest('5-67');" >
<input id="comm5-67" type="text" class="command" style="width: 32em;" value="matrix [ [x^i+j for i in 1..3] for j in 10..12]" />
</form>
<span id="commSav5-67" class="commSav" >matrix [ [x^i+j for i in 1..3] for j in 10..12]</span>
<div id="mathAns5-67" ></div>
</div>


<div class="math">
<table>
<tr><td>
<math xmlns="&mathml;" mathsize="big" display="block"><mstyle><mrow><mo>[</mo><mtable><mtr><mtd><mrow><mi>x</mi><mo>+</mo><mn>10</mn></mrow></mtd><mtd><mrow><mrow><msup><mi>x</mi><mn>2</mn></msup></mrow><mo>+</mo><mn>10</mn></mrow></mtd><mtd><mrow><mrow><msup><mi>x</mi><mn>3</mn></msup></mrow><mo>+</mo><mn>10</mn></mrow></mtd></mtr><mtr><mtd><mrow><mi>x</mi><mo>+</mo><mn>11</mn></mrow></mtd><mtd><mrow><mrow><msup><mi>x</mi><mn>2</mn></msup></mrow><mo>+</mo><mn>11</mn></mrow></mtd><mtd><mrow><mrow><msup><mi>x</mi><mn>3</mn></msup></mrow><mo>+</mo><mn>11</mn></mrow></mtd></mtr><mtr><mtd><mrow><mi>x</mi><mo>+</mo><mn>12</mn></mrow></mtd><mtd><mrow><mrow><msup><mi>x</mi><mn>2</mn></msup></mrow><mo>+</mo><mn>12</mn></mrow></mtd><mtd><mrow><mrow><msup><mi>x</mi><mn>3</mn></msup></mrow><mo>+</mo><mn>12</mn></mrow></mtd></mtr></mtable><mo>]</mo></mrow></mstyle></math>
</td></tr>
</table>
</div>




<div class="returnType">
Type: Matrix Polynomial Integer
</div>



<p>You can also create lists of streams, streams of lists and streams of
streams.  Here is a stream of streams.
</p>



<div id="spadComm5-68" class="spadComm" >
<form id="formComm5-68" action="javascript:makeRequest('5-68');" >
<input id="comm5-68" type="text" class="command" style="width: 24em;" value="[ [i/j for i in j+1..] for j in 1..]" />
</form>
<span id="commSav5-68" class="commSav" >[ [i/j for i in j+1..] for j in 1..]</span>
<div id="mathAns5-68" ></div>
</div>


<div class="math">
<table>
<tr><td>
<math xmlns="&mathml;" mathsize="big" display="block"><mstyle><mrow><mtable><mtr><mtd><mo>[</mo><mrow><mo>[</mo><mn>2</mn><mo>,</mo><mn>3</mn><mo>,</mo><mn>4</mn><mo>,</mo><mn>5</mn><mo>,</mo><mn>6</mn><mo>,</mo><mn>7</mn><mo>,</mo><mn>8</mn><mo>,</mo><mn>9</mn><mo>,</mo><mn>10</mn><mo>,</mo><mn>11</mn><mo>,</mo><mo>&#x2026;</mo><mo>]</mo></mrow><mo>,</mo><mrow><mo>[</mo><mfrac><mn>3</mn><mn>2</mn></mfrac><mo>,</mo><mn>2</mn><mo>,</mo><mfrac><mn>5</mn><mn>2</mn></mfrac><mo>,</mo><mn>3</mn><mo>,</mo><mfrac><mn>7</mn><mn>2</mn></mfrac><mo>,</mo><mn>4</mn><mo>,</mo><mfrac><mn>9</mn><mn>2</mn></mfrac><mo>,</mo><mn>5</mn><mo>,</mo><mfrac><mn>11</mn><mn>2</mn></mfrac><mo>,</mo><mn>6</mn><mo>,</mo><mo>&#x2026;</mo><mo>]</mo></mrow><mo>,</mo><mo>.</mo></mtd></mtr><mtr><mtd></mtd></mtr><mtr><mtd><mrow><mo>[</mo><mfrac><mn>4</mn><mn>3</mn></mfrac><mo>,</mo><mfrac><mn>5</mn><mn>3</mn></mfrac><mo>,</mo><mn>2</mn><mo>,</mo><mfrac><mn>7</mn><mn>3</mn></mfrac><mo>,</mo><mfrac><mn>8</mn><mn>3</mn></mfrac><mo>,</mo><mn>3</mn><mo>,</mo><mfrac><mn>10</mn><mn>3</mn></mfrac><mo>,</mo><mfrac><mn>11</mn><mn>3</mn></mfrac><mo>,</mo><mn>4</mn><mo>,</mo><mfrac><mn>13</mn><mn>3</mn></mfrac><mo>,</mo><mo>&#x2026;</mo><mo>]</mo></mrow><mo>,</mo><mrow><mo>[</mo><mfrac><mn>5</mn><mn>4</mn></mfrac><mo>,</mo><mfrac><mn>3</mn><mn>2</mn></mfrac><mo>,</mo><mfrac><mn>7</mn><mn>4</mn></mfrac><mo>,</mo><mn>2</mn><mo>,</mo><mfrac><mn>9</mn><mn>4</mn></mfrac><mo>,</mo><mfrac><mn>5</mn><mn>2</mn></mfrac><mo>,</mo><mfrac><mn>11</mn><mn>4</mn></mfrac><mo>,</mo><mn>3</mn><mo>,</mo><mfrac><mn>13</mn><mn>4</mn></mfrac><mo>,</mo><mfrac><mn>7</mn><mn>2</mn></mfrac><mo>,</mo><mo>&#x2026;</mo><mo>]</mo></mrow><mo>,</mo></mtd></mtr><mtr><mtd></mtd></mtr><mtr><mtd><mrow><mo>[</mo><mfrac><mn>6</mn><mn>5</mn></mfrac><mo>,</mo><mfrac><mn>7</mn><mn>5</mn></mfrac><mo>,</mo><mfrac><mn>8</mn><mn>5</mn></mfrac><mo>,</mo><mfrac><mn>9</mn><mn>5</mn></mfrac><mo>,</mo><mn>2</mn><mo>,</mo><mfrac><mn>11</mn><mn>5</mn></mfrac><mo>,</mo><mfrac><mn>12</mn><mn>5</mn></mfrac><mo>,</mo><mfrac><mn>13</mn><mn>5</mn></mfrac><mo>,</mo><mfrac><mn>14</mn><mn>5</mn></mfrac><mo>,</mo><mn>3</mn><mo>,</mo><mo>&#x2026;</mo><mo>]</mo></mrow><mo>,</mo><mrow><mo>[</mo><mfrac><mn>7</mn><mn>6</mn></mfrac><mo>,</mo><mfrac><mn>4</mn><mn>3</mn></mfrac><mo>,</mo><mfrac><mn>3</mn><mn>2</mn></mfrac><mo>,</mo><mfrac><mn>5</mn><mn>3</mn></mfrac><mo>,</mo><mfrac><mn>11</mn><mn>6</mn></mfrac><mo>,</mo><mn>2</mn><mo>,</mo><mfrac><mn>13</mn><mn>6</mn></mfrac><mo>,</mo><mfrac><mn>7</mn><mn>3</mn></mfrac><mo>,</mo><mfrac><mn>5</mn><mn>2</mn></mfrac><mo>,</mo><mfrac><mn>8</mn><mn>3</mn></mfrac><mo>,</mo><mo>&#x2026;</mo><mo>]</mo></mrow><mo>,</mo></mtd></mtr><mtr><mtd></mtd></mtr><mtr><mtd><mrow><mo>[</mo><mfrac><mn>8</mn><mn>7</mn></mfrac><mo>,</mo><mfrac><mn>9</mn><mn>7</mn></mfrac><mo>,</mo><mfrac><mn>10</mn><mn>7</mn></mfrac><mo>,</mo><mfrac><mn>11</mn><mn>7</mn></mfrac><mo>,</mo><mfrac><mn>12</mn><mn>7</mn></mfrac><mo>,</mo><mfrac><mn>13</mn><mn>7</mn></mfrac><mo>,</mo><mn>2</mn><mo>,</mo><mfrac><mn>15</mn><mn>7</mn></mfrac><mo>,</mo><mfrac><mn>16</mn><mn>7</mn></mfrac><mo>,</mo><mfrac><mn>17</mn><mn>7</mn></mfrac><mo>,</mo><mo>&#x2026;</mo><mo>]</mo></mrow><mo>,</mo><mrow><mo>[</mo><mfrac><mn>9</mn><mn>8</mn></mfrac><mo>,</mo><mfrac><mn>5</mn><mn>4</mn></mfrac><mo>,</mo><mfrac><mn>11</mn><mn>8</mn></mfrac><mo>,</mo><mfrac><mn>3</mn><mn>2</mn></mfrac><mo>,</mo><mfrac><mn>13</mn><mn>8</mn></mfrac><mo>,</mo><mfrac><mn>7</mn><mn>4</mn></mfrac><mo>,</mo><mfrac><mn>15</mn><mn>8</mn></mfrac><mo>,</mo><mn>2</mn><mo>,</mo><mfrac><mn>17</mn><mn>8</mn></mfrac><mo>,</mo><mfrac><mn>9</mn><mn>4</mn></mfrac><mo>,</mo><mo>&#x2026;</mo><mo>]</mo></mrow><mo>,</mo></mtd></mtr><mtr><mtd></mtd></mtr><mtr><mtd><mrow><mo>[</mo><mfrac><mn>10</mn><mn>9</mn></mfrac><mo>,</mo><mfrac><mn>11</mn><mn>9</mn></mfrac><mo>,</mo><mfrac><mn>4</mn><mn>3</mn></mfrac><mo>,</mo><mfrac><mn>13</mn><mn>9</mn></mfrac><mo>,</mo><mfrac><mn>14</mn><mn>9</mn></mfrac><mo>,</mo><mfrac><mn>5</mn><mn>3</mn></mfrac><mo>,</mo><mfrac><mn>16</mn><mn>9</mn></mfrac><mo>,</mo><mfrac><mn>17</mn><mn>9</mn></mfrac><mo>,</mo><mn>2</mn><mo>,</mo><mfrac><mn>19</mn><mn>9</mn></mfrac><mo>,</mo><mo>&#x2026;</mo><mo>]</mo></mrow><mo>,</mo></mtd></mtr><mtr><mtd></mtd></mtr><mtr><mtd><mo>.</mo><mrow><mo>[</mo><mfrac><mn>11</mn><mn>10</mn></mfrac><mo>,</mo><mfrac><mn>6</mn><mn>5</mn></mfrac><mo>,</mo><mfrac><mn>13</mn><mn>10</mn></mfrac><mo>,</mo><mfrac><mn>7</mn><mn>5</mn></mfrac><mo>,</mo><mfrac><mn>3</mn><mn>2</mn></mfrac><mo>,</mo><mfrac><mn>8</mn><mn>5</mn></mfrac><mo>,</mo><mfrac><mn>17</mn><mn>10</mn></mfrac><mo>,</mo><mfrac><mn>9</mn><mn>5</mn></mfrac><mo>,</mo><mfrac><mn>19</mn><mn>10</mn></mfrac><mo>,</mo><mn>2</mn><mo>,</mo><mo>&#x2026;</mo><mo>]</mo></mrow><mo>,</mo><mo>&#x2026;</mo><mo>]</mo></mtd></mtr></mtable></mrow></mstyle></math>
</td></tr>
</table>
</div>




<div class="returnType">
Type: Stream Stream Fraction Integer
</div>



<p>You can use parallel iteration across lists and streams to create
<span class="index">iteration:parallel</span><a name="chapter-5-60"/> new lists.
</p>



<div id="spadComm5-69" class="spadComm" >
<form id="formComm5-69" action="javascript:makeRequest('5-69');" >
<input id="comm5-69" type="text" class="command" style="width: 25em;" value="[i/j for i in 3.. by 10 for j in 2..]" />
</form>
<span id="commSav5-69" class="commSav" >[i/j for i in 3.. by 10 for j in 2..]</span>
<div id="mathAns5-69" ></div>
</div>


<div class="math">
<table>
<tr><td>
<math xmlns="&mathml;" mathsize="big" display="block"><mstyle><mrow><mo>[</mo><mfrac><mn>3</mn><mn>2</mn></mfrac><mo>,</mo><mfrac><mn>13</mn><mn>3</mn></mfrac><mo>,</mo><mfrac><mn>23</mn><mn>4</mn></mfrac><mo>,</mo><mfrac><mn>33</mn><mn>5</mn></mfrac><mo>,</mo><mfrac><mn>43</mn><mn>6</mn></mfrac><mo>,</mo><mfrac><mn>53</mn><mn>7</mn></mfrac><mo>,</mo><mfrac><mn>63</mn><mn>8</mn></mfrac><mo>,</mo><mfrac><mn>73</mn><mn>9</mn></mfrac><mo>,</mo><mfrac><mn>83</mn><mn>10</mn></mfrac><mo>,</mo><mfrac><mn>93</mn><mn>11</mn></mfrac><mo>,</mo><mo>&#x2026;</mo><mo>]</mo></mrow></mstyle></math>
</td></tr>
</table>
</div>




<div class="returnType">
Type: Stream Fraction Integer
</div>



<p>Iteration stops if the end of a list or stream is reached.
</p>



<div id="spadComm5-70" class="spadComm" >
<form id="formComm5-70" action="javascript:makeRequest('5-70');" >
<input id="comm5-70" type="text" class="command" style="width: 23em;" value="[i^j for i in 1..7 for j in 2.. ]" />
</form>
<span id="commSav5-70" class="commSav" >[i^j for i in 1..7 for j in 2.. ]</span>
<div id="mathAns5-70" ></div>
</div>


<div class="math">
<table>
<tr><td>
<math xmlns="&mathml;" mathsize="big" display="block"><mstyle><mrow><mo>[</mo><mn>1</mn><mo>,</mo><mn>8</mn><mo>,</mo><mn>81</mn><mo>,</mo><mn>1024</mn><mo>,</mo><mn>15625</mn><mo>,</mo><mn>279936</mn><mo>,</mo><mn>5764801</mn><mo>]</mo></mrow></mstyle></math>
</td></tr>
</table>
</div>




<div class="returnType">
Type: Stream Integer
</div>



<p>As with loops, you can combine these modifiers to make very
complicated conditions.
</p>



<div id="spadComm5-71" class="spadComm" >
<form id="formComm5-71" action="javascript:makeRequest('5-71');" >
<input id="comm5-71" type="text" class="command" style="width: 52em;" value="[ [ [i,j] for i in 10..15 | prime? i] for j in 17..22 | j = squareFreePart j]" />
</form>
<span id="commSav5-71" class="commSav" >[ [ [i,j] for i in 10..15 | prime? i] for j in 17..22 | j = squareFreePart j]</span>
<div id="mathAns5-71" ></div>
</div>


<div class="math">
<table>
<tr><td>
<math xmlns="&mathml;" mathsize="big" display="block"><mstyle><mrow><mo>[</mo><mrow><mo>[</mo><mrow><mo>[</mo><mn>11</mn><mo>,</mo><mn>17</mn><mo>]</mo></mrow><mo>,</mo><mrow><mo>[</mo><mn>13</mn><mo>,</mo><mn>17</mn><mo>]</mo></mrow><mo>]</mo></mrow><mo>,</mo><mrow><mo>[</mo><mrow><mo>[</mo><mn>11</mn><mo>,</mo><mn>19</mn><mo>]</mo></mrow><mo>,</mo><mrow><mo>[</mo><mn>13</mn><mo>,</mo><mn>19</mn><mo>]</mo></mrow><mo>]</mo></mrow><mo>,</mo><mrow><mo>[</mo><mrow><mo>[</mo><mn>11</mn><mo>,</mo><mn>21</mn><mo>]</mo></mrow><mo>,</mo><mrow><mo>[</mo><mn>13</mn><mo>,</mo><mn>21</mn><mo>]</mo></mrow><mo>]</mo></mrow><mo>,</mo><mrow><mo>[</mo><mrow><mo>[</mo><mn>11</mn><mo>,</mo><mn>22</mn><mo>]</mo></mrow><mo>,</mo><mrow><mo>[</mo><mn>13</mn><mo>,</mo><mn>22</mn><mo>]</mo></mrow><mo>]</mo></mrow><mo>]</mo></mrow></mstyle></math>
</td></tr>
</table>
</div>




<div class="returnType">
Type: List List List PositiveInteger
</div>



<p>See List 
(section <a href="section-9.1.xhtml#AssociationListXmpPage" class="ref" >ListXmpPage</a> ) and Stream 
(section <a href="section-9.76.xhtml#StreamXmpPage" class="ref" >StreamXmpPage</a> )
for more information on creating and
manipulating lists and streams, respectively.
</p>




</div><a href="book-contents.xhtml" style="margin-right: 10px;">Book Contents</a>
<a href="section-5.4.xhtml" style="margin-right: 10px;">Previous Section 5.4 Loops</a><a href="section-5.6.xhtml" style="margin-right: 10px;">Next Section 5.6 An Example: Streams of Primes</a>
<a href="book-index.xhtml">Book Index</a></body>
</html>