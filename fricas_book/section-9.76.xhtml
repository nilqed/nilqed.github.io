<?xml version="1.0" encoding="UTF-8" ?>

<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.1 plus MathML 2.0//EN"
"http://www.w3.org/TR/MathML2/dtd/xhtml-math11-f.dtd" [
<!ENTITY mathml "http://www.w3.org/1998/Math/MathML">
]>

<html xmlns="http://www.w3.org/1999/xhtml"
      xmlns:xlink="http://www.w3.org/1999/xlink" >


  <head>
    <title>Section9.76</title>
    <link rel="stylesheet" type="text/css" href="graphicstyle.css" />
    <script type="text/javascript" src="bookax1.js" />
  </head>

  <body>
<a href="book-contents.xhtml" style="margin-right: 10px;">Book Contents</a><a href="section-9.75.xhtml" style="margin-right: 10px;">Previous Section 9.75 SquareFreeRegularTriangularSet</a><a href="section-9.77.xhtml" style="margin-right: 10px;">Next Section 9.77 String</a>
<a href="book-index.xhtml">Book Index</a><div class="section"  id="sec-9.76">
<h2 class="sectiontitle">9.76  Stream</h2>


<a name="StreamXmpPage" class="label"/>


<p>A <span class="teletype">Stream</span> object is represented as a list whose last element
contains the wherewithal to create the next element, should it ever be
required.
</p>


<p>Let <span class="teletype">ints</span> be the infinite stream of non-negative integers.
</p>




<div id="spadComm9-84" class="spadComm" >
<form id="formComm9-84" action="javascript:makeRequest('9-84');" >
<input id="comm9-84" type="text" class="command" style="width: 17em;" value="ints := [i for i in 0..] " />
</form>
<span id="commSav9-84" class="commSav" >ints := [i for i in 0..] </span>
<div id="mathAns9-84" ></div>
</div>


<div class="math">
<table>
<tr><td>
<math xmlns="&mathml;" mathsize="big" display="block"><mstyle><mrow><mo>[</mo><mn>0</mn><mo>,</mo><mn>1</mn><mo>,</mo><mn>2</mn><mo>,</mo><mn>3</mn><mo>,</mo><mn>4</mn><mo>,</mo><mn>5</mn><mo>,</mo><mn>6</mn><mo>,</mo><mn>7</mn><mo>,</mo><mn>8</mn><mo>,</mo><mn>9</mn><mo>,</mo><mo>&#x2026;</mo><mo>]</mo></mrow></mstyle></math>
</td></tr>
</table>
</div>




<div class="returnType">
Type: Stream NonNegativeInteger
</div>



<p>By default, ten stream elements are calculated.  This number may be
changed to something else by the system command <span class="teletype">)set streams
calculate</span>.  For the display purposes of this book, we have chosen a
smaller value.
</p>


<p>More generally, you can construct a stream by specifying its initial
value and a function which, when given an element, creates the next element.
</p>




<div id="spadComm9-85" class="spadComm" >
<form id="formComm9-85" action="javascript:makeRequest('9-85');" >
<input id="comm9-85" type="text" class="command" style="width: 17em;" value="f : List INT -> List INT " />
</form>
<span id="commSav9-85" class="commSav" >f : List INT -> List INT </span>
<div id="mathAns9-85" ></div>
</div>




<div class="returnType">
Void
</div>





<div id="spadComm9-86" class="spadComm" >
<form id="formComm9-86" action="javascript:makeRequest('9-86');" >
<input id="comm9-86" type="text" class="command" style="width: 16em;" value="f x == [x.1 + x.2, x.1] " />
</form>
<span id="commSav9-86" class="commSav" >f x == [x.1 + x.2, x.1] </span>
<div id="mathAns9-86" ></div>
</div>




<div class="returnType">
Void
</div>





<div id="spadComm9-87" class="spadComm" >
<form id="formComm9-87" action="javascript:makeRequest('9-87');" >
<input id="comm9-87" type="text" class="command" style="width: 29em;" value="fibs := [i.2 for i in [generate(f,[1,1])]] " />
</form>
<span id="commSav9-87" class="commSav" >fibs := [i.2 for i in [generate(f,[1,1])]] </span>
<div id="mathAns9-87" ></div>
</div>




<div class="verbatim"><br />
&nbsp;&nbsp;&nbsp;Compiling&nbsp;function&nbsp;f&nbsp;with&nbsp;type&nbsp;List&nbsp;Integer&nbsp;-&gt;&nbsp;List&nbsp;Integer&nbsp;<br />
</div>


<div class="math">
<table>
<tr><td>
<math xmlns="&mathml;" mathsize="big" display="block"><mstyle><mrow><mo>[</mo><mn>1</mn><mo>,</mo><mn>1</mn><mo>,</mo><mn>2</mn><mo>,</mo><mn>3</mn><mo>,</mo><mn>5</mn><mo>,</mo><mn>8</mn><mo>,</mo><mn>13</mn><mo>,</mo><mn>21</mn><mo>,</mo><mn>34</mn><mo>,</mo><mn>55</mn><mo>,</mo><mo>&#x2026;</mo><mo>]</mo></mrow></mstyle></math>
</td></tr>
</table>
</div>




<div class="returnType">
Type: Stream Integer
</div>



<p>You can create the stream of odd non-negative integers by either filtering
them from the integers, or by evaluating an expression for each integer.
</p>




<div id="spadComm9-88" class="spadComm" >
<form id="formComm9-88" action="javascript:makeRequest('9-88');" >
<input id="comm9-88" type="text" class="command" style="width: 18em;" value="[i for i in ints | odd? i] " />
</form>
<span id="commSav9-88" class="commSav" >[i for i in ints | odd? i] </span>
<div id="mathAns9-88" ></div>
</div>


<div class="math">
<table>
<tr><td>
<math xmlns="&mathml;" mathsize="big" display="block"><mstyle><mrow><mo>[</mo><mn>1</mn><mo>,</mo><mn>3</mn><mo>,</mo><mn>5</mn><mo>,</mo><mn>7</mn><mo>,</mo><mn>9</mn><mo>,</mo><mn>11</mn><mo>,</mo><mn>13</mn><mo>,</mo><mn>15</mn><mo>,</mo><mn>17</mn><mo>,</mo><mn>19</mn><mo>,</mo><mo>&#x2026;</mo><mo>]</mo></mrow></mstyle></math>
</td></tr>
</table>
</div>




<div class="returnType">
Type: Stream NonNegativeInteger
</div>





<div id="spadComm9-89" class="spadComm" >
<form id="formComm9-89" action="javascript:makeRequest('9-89');" >
<input id="comm9-89" type="text" class="command" style="width: 20em;" value="odds := [2*i+1 for i in ints]" />
</form>
<span id="commSav9-89" class="commSav" >odds := [2*i+1 for i in ints]</span>
<div id="mathAns9-89" ></div>
</div>


<div class="math">
<table>
<tr><td>
<math xmlns="&mathml;" mathsize="big" display="block"><mstyle><mrow><mo>[</mo><mn>1</mn><mo>,</mo><mn>3</mn><mo>,</mo><mn>5</mn><mo>,</mo><mn>7</mn><mo>,</mo><mn>9</mn><mo>,</mo><mn>11</mn><mo>,</mo><mn>13</mn><mo>,</mo><mn>15</mn><mo>,</mo><mn>17</mn><mo>,</mo><mn>19</mn><mo>,</mo><mo>&#x2026;</mo><mo>]</mo></mrow></mstyle></math>
</td></tr>
</table>
</div>




<div class="returnType">
Type: Stream NonNegativeInteger
</div>



<p>You can accumulate the initial segments of a stream using the
<span class="spadfunFrom" >scan</span><span class="index">scan</span><a name="chapter-9-52"/><span class="index">StreamFunctions2</span><a name="chapter-9-53"/> operation.
</p>




<div id="spadComm9-90" class="spadComm" >
<form id="formComm9-90" action="javascript:makeRequest('9-90');" >
<input id="comm9-90" type="text" class="command" style="width: 10em;" value="scan(0,+,odds) " />
</form>
<span id="commSav9-90" class="commSav" >scan(0,+,odds) </span>
<div id="mathAns9-90" ></div>
</div>


<div class="math">
<table>
<tr><td>
<math xmlns="&mathml;" mathsize="big" display="block"><mstyle><mrow><mo>[</mo><mn>1</mn><mo>,</mo><mn>4</mn><mo>,</mo><mn>9</mn><mo>,</mo><mn>16</mn><mo>,</mo><mn>25</mn><mo>,</mo><mn>36</mn><mo>,</mo><mn>49</mn><mo>,</mo><mn>64</mn><mo>,</mo><mn>81</mn><mo>,</mo><mn>100</mn><mo>,</mo><mo>&#x2026;</mo><mo>]</mo></mrow></mstyle></math>
</td></tr>
</table>
</div>




<div class="returnType">
Type: Stream NonNegativeInteger
</div>



<p>The corresponding elements of two or more streams can be combined in
this way.
</p>




<div id="spadComm9-91" class="spadComm" >
<form id="formComm9-91" action="javascript:makeRequest('9-91');" >
<input id="comm9-91" type="text" class="command" style="width: 23em;" value="[i*j for i in ints for j in odds] " />
</form>
<span id="commSav9-91" class="commSav" >[i*j for i in ints for j in odds] </span>
<div id="mathAns9-91" ></div>
</div>


<div class="math">
<table>
<tr><td>
<math xmlns="&mathml;" mathsize="big" display="block"><mstyle><mrow><mo>[</mo><mn>0</mn><mo>,</mo><mn>3</mn><mo>,</mo><mn>10</mn><mo>,</mo><mn>21</mn><mo>,</mo><mn>36</mn><mo>,</mo><mn>55</mn><mo>,</mo><mn>78</mn><mo>,</mo><mn>105</mn><mo>,</mo><mn>136</mn><mo>,</mo><mn>171</mn><mo>,</mo><mo>&#x2026;</mo><mo>]</mo></mrow></mstyle></math>
</td></tr>
</table>
</div>




<div class="returnType">
Type: Stream NonNegativeInteger
</div>





<div id="spadComm9-92" class="spadComm" >
<form id="formComm9-92" action="javascript:makeRequest('9-92');" >
<input id="comm9-92" type="text" class="command" style="width: 11em;" value="map(*,ints,odds)" />
</form>
<span id="commSav9-92" class="commSav" >map(*,ints,odds)</span>
<div id="mathAns9-92" ></div>
</div>


<div class="math">
<table>
<tr><td>
<math xmlns="&mathml;" mathsize="big" display="block"><mstyle><mrow><mo>[</mo><mn>0</mn><mo>,</mo><mn>3</mn><mo>,</mo><mn>10</mn><mo>,</mo><mn>21</mn><mo>,</mo><mn>36</mn><mo>,</mo><mn>55</mn><mo>,</mo><mn>78</mn><mo>,</mo><mn>105</mn><mo>,</mo><mn>136</mn><mo>,</mo><mn>171</mn><mo>,</mo><mo>&#x2026;</mo><mo>]</mo></mrow></mstyle></math>
</td></tr>
</table>
</div>




<div class="returnType">
Type: Stream NonNegativeInteger
</div>



<p>Many operations similar to those applicable to lists are available for
streams.
</p>




<div id="spadComm9-93" class="spadComm" >
<form id="formComm9-93" action="javascript:makeRequest('9-93');" >
<input id="comm9-93" type="text" class="command" style="width: 8em;" value="first ints " />
</form>
<span id="commSav9-93" class="commSav" >first ints </span>
<div id="mathAns9-93" ></div>
</div>


<div class="math">
<table>
<tr><td>
<math xmlns="&mathml;" mathsize="big" display="block"><mstyle><mn>0</mn></mstyle></math>
</td></tr>
</table>
</div>




<div class="returnType">
Type: NonNegativeInteger
</div>





<div id="spadComm9-94" class="spadComm" >
<form id="formComm9-94" action="javascript:makeRequest('9-94');" >
<input id="comm9-94" type="text" class="command" style="width: 7em;" value="rest ints " />
</form>
<span id="commSav9-94" class="commSav" >rest ints </span>
<div id="mathAns9-94" ></div>
</div>


<div class="math">
<table>
<tr><td>
<math xmlns="&mathml;" mathsize="big" display="block"><mstyle><mrow><mo>[</mo><mn>1</mn><mo>,</mo><mn>2</mn><mo>,</mo><mn>3</mn><mo>,</mo><mn>4</mn><mo>,</mo><mn>5</mn><mo>,</mo><mn>6</mn><mo>,</mo><mn>7</mn><mo>,</mo><mn>8</mn><mo>,</mo><mn>9</mn><mo>,</mo><mn>10</mn><mo>,</mo><mo>&#x2026;</mo><mo>]</mo></mrow></mstyle></math>
</td></tr>
</table>
</div>




<div class="returnType">
Type: Stream NonNegativeInteger
</div>





<div id="spadComm9-95" class="spadComm" >
<form id="formComm9-95" action="javascript:makeRequest('9-95');" >
<input id="comm9-95" type="text" class="command" style="width: 6em;" value="fibs 20 " />
</form>
<span id="commSav9-95" class="commSav" >fibs 20 </span>
<div id="mathAns9-95" ></div>
</div>


<div class="math">
<table>
<tr><td>
<math xmlns="&mathml;" mathsize="big" display="block"><mstyle><mn>6765</mn></mstyle></math>
</td></tr>
</table>
</div>




<div class="returnType">
Type: PositiveInteger
</div>



<p>The packages <span class="teletype">StreamFunctions1</span>, <span class="teletype">StreamFunctions2</span> and 
<span class="teletype">StreamFunctions3</span> export some useful stream manipulation operations.
For more information, see <a href="ugLangItsPage" class="ref" >ugLangItsPage</a>  in Section <a href="ugLangItsNumber" class="ref" >ugLangItsNumber</a> , <a href="ugProblemSeriesPage" class="ref" >ugProblemSeriesPage</a>  in Section
<a href="ugProblemSeriesNumber" class="ref" >ugProblemSeriesNumber</a> ,
<a href="chapter-9.1-12.xhtml#ContinuedFractionXmpPage" class="ref" >ContinuedFractionXmpPage</a> , and <a href="section-9.1.xhtml#AssociationListXmpPage" class="ref" >ListXmpPage</a> .
</p>




</div><a href="book-contents.xhtml" style="margin-right: 10px;">Book Contents</a>
<a href="section-9.75.xhtml" style="margin-right: 10px;">Previous Section 9.75 SquareFreeRegularTriangularSet</a><a href="section-9.77.xhtml" style="margin-right: 10px;">Next Section 9.77 String</a>
<a href="book-index.xhtml">Book Index</a></body>
</html>