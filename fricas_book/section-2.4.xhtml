<?xml version="1.0" encoding="UTF-8" ?>

<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.1 plus MathML 2.0//EN"
"http://www.w3.org/TR/MathML2/dtd/xhtml-math11-f.dtd" [
<!ENTITY mathml "http://www.w3.org/1998/Math/MathML">
]>

<html xmlns="http://www.w3.org/1999/xhtml"
      xmlns:xlink="http://www.w3.org/1999/xlink" >


  <head>
    <title>Section2.4</title>
    <link rel="stylesheet" type="text/css" href="graphicstyle.css" />
    <script type="text/javascript" src="bookax1.js" />
  </head>

  <body>
<a href="book-contents.xhtml" style="margin-right: 10px;">Book Contents</a><a href="section-2.3.xhtml" style="margin-right: 10px;">Previous Section 2.3 Declarations</a><a href="section-2.5.xhtml" style="margin-right: 10px;">Next Section 2.5 Unions</a>
<a href="book-index.xhtml">Book Index</a><div class="section"  id="sec-2.4">
<h2 class="sectiontitle">2.4  Records</h2>


<a name="ugTypesRecords" class="label"/>


<p>A <span class="teletype">Record</span> is an object composed of one or more other objects,
<span class="index">Record</span><a name="chapter-2-26"/> each of which is referenced <span class="index">selector:record</span><a name="chapter-2-27"/>
with <span class="index">record:selector</span><a name="chapter-2-28"/> a <span class="italic">selector</span>.  Components can all
belong to the same type or each can have a different type.
</p>




<div class="boxed2">


<div class="boxed">



<p>The syntax for writing a <span class="teletype">Record</span> type is 
</p>


<div class="center" style="text-align: center;">

<p> 
<span class="teletype">Record(<math xmlns="&mathml;" mathsize="big"><mstyle><mrow><msub><mrow><mtext mathvariant='sans-serif-italic'>selector</mtext></mrow><mn>1</mn></msub></mrow></mstyle></math>:<math xmlns="&mathml;" mathsize="big"><mstyle><mrow><msub><mrow><mtext mathvariant='sans-serif-italic'>type</mtext></mrow><mn>1</mn></msub></mrow></mstyle></math>,
<math xmlns="&mathml;" mathsize="big"><mstyle><mrow><msub><mrow><mtext mathvariant='sans-serif-italic'>selector</mtext></mrow><mn>2</mn></msub></mrow></mstyle></math>:<math xmlns="&mathml;" mathsize="big"><mstyle><mrow><msub><mrow><mtext mathvariant='sans-serif-italic'>type</mtext></mrow><mn>2</mn></msub></mrow></mstyle></math>, ...,
<math xmlns="&mathml;" mathsize="big"><mstyle><mrow><msub><mrow><mtext mathvariant='sans-serif-italic'>selector</mtext></mrow><mi>N</mi></msub></mrow></mstyle></math>:<math xmlns="&mathml;" mathsize="big"><mstyle><mrow><msub><mrow><mtext mathvariant='sans-serif-italic'>type</mtext></mrow><mi>N</mi></msub></mrow></mstyle></math>)</span> 
</p>


</div>

<p> You must be
careful if a selector has the same name as a variable in the
workspace.  If this occurs, precede the selector name by a single
<span class="index">quote</span><a name="chapter-2-29"/> quote.<br/>
</p>



</div>
</div>



<p>Record components are implicitly ordered.  All the components of a
record can be set at once by assigning the record a bracketed <span class="italic">
tuple</span> of values of the proper length. For example:
</p>



<div id="spadComm2-45" class="spadComm" >
<form id="formComm2-45" action="javascript:makeRequest('2-45');" >
<input id="comm2-45" type="text" class="command" style="width: 31em;" value='r : Record(a:Integer, b: String) := [1, "two"]' />
</form>
<span id="commSav2-45" class="commSav" >r : Record(a:Integer, b: String) := [1, "two"]</span>
<div id="mathAns2-45" ></div>
</div>

<p>  
<math xmlns="&mathml;" mathsize="big" display="block"><mstyle><mrow><mo>[</mo><mrow><mi>a</mi><mo>=</mo><mn>1</mn></mrow><mo>,</mo><mrow><mi>b</mi><mo>=</mo><mtext><mrow><mtext mathvariant='monospace'>"two"</mtext></mrow></mtext></mrow><mo>]</mo></mrow></mstyle></math>
</p>



<div class="returnType">
Type: Record(a: Integer,b: String)
</div>


<p>To access a component of a record <math xmlns="&mathml;" mathsize="big"><mstyle><mi>r</mi></mstyle></math>, write the name <math xmlns="&mathml;" mathsize="big"><mstyle><mi>r</mi></mstyle></math>, followed by
a period, followed by a selector.
</p>


<p>The object returned by this computation is a record with two components: a
<math xmlns="&mathml;" mathsize="big"><mstyle><mi>quotient</mi></mstyle></math> part and a <math xmlns="&mathml;" mathsize="big"><mstyle><mi>remainder</mi></mstyle></math> part.
</p>



<div id="spadComm2-46" class="spadComm" >
<form id="formComm2-46" action="javascript:makeRequest('2-46');" >
<input id="comm2-46" type="text" class="command" style="width: 11em;" value="u := divide(5,2)" />
</form>
<span id="commSav2-46" class="commSav" >u := divide(5,2)</span>
<div id="mathAns2-46" ></div>
</div>


<div class="math">
<table>
<tr><td>
<math xmlns="&mathml;" mathsize="big" display="block"><mstyle><mrow><mo>[</mo><mrow><mi>quotient</mi><mo>=</mo><mn>2</mn></mrow><mo>,</mo><mrow><mi>remainder</mi><mo>=</mo><mn>1</mn></mrow><mo>]</mo></mrow></mstyle></math>
</td></tr>
</table>
</div>




<div class="returnType">
Type: Record(quotient: Integer,remainder: Integer)
</div>



<p>This is the quotient part.
</p>



<div id="spadComm2-47" class="spadComm" >
<form id="formComm2-47" action="javascript:makeRequest('2-47');" >
<input id="comm2-47" type="text" class="command" style="width: 7em;" value="u.quotient" />
</form>
<span id="commSav2-47" class="commSav" >u.quotient</span>
<div id="mathAns2-47" ></div>
</div>


<div class="math">
<table>
<tr><td>
<math xmlns="&mathml;" mathsize="big" display="block"><mstyle><mn>2</mn></mstyle></math>
</td></tr>
</table>
</div>




<div class="returnType">
Type: PositiveInteger
</div>



<p>This is the remainder part.
</p>



<div id="spadComm2-48" class="spadComm" >
<form id="formComm2-48" action="javascript:makeRequest('2-48');" >
<input id="comm2-48" type="text" class="command" style="width: 8em;" value="u.remainder" />
</form>
<span id="commSav2-48" class="commSav" >u.remainder</span>
<div id="mathAns2-48" ></div>
</div>


<div class="math">
<table>
<tr><td>
<math xmlns="&mathml;" mathsize="big" display="block"><mstyle><mn>1</mn></mstyle></math>
</td></tr>
</table>
</div>




<div class="returnType">
Type: PositiveInteger
</div>



<p>You can use selector expressions on the left-hand side of an assignment
to change destructively the components of a record.
</p>



<div id="spadComm2-49" class="spadComm" >
<form id="formComm2-49" action="javascript:makeRequest('2-49');" >
<input id="comm2-49" type="text" class="command" style="width: 12em;" value="u.quotient := 8978" />
</form>
<span id="commSav2-49" class="commSav" >u.quotient := 8978</span>
<div id="mathAns2-49" ></div>
</div>


<div class="math">
<table>
<tr><td>
<math xmlns="&mathml;" mathsize="big" display="block"><mstyle><mn>8978</mn></mstyle></math>
</td></tr>
</table>
</div>




<div class="returnType">
Type: PositiveInteger
</div>



<p>The selected component <math xmlns="&mathml;" mathsize="big"><mstyle><mi>quotient</mi></mstyle></math> has the value <math xmlns="&mathml;" mathsize="big"><mstyle><mn>8978</mn></mstyle></math>, which is what
is returned by the assignment.  Check that the value of <math xmlns="&mathml;" mathsize="big"><mstyle><mi>u</mi></mstyle></math> was
modified.
</p>



<div id="spadComm2-50" class="spadComm" >
<form id="formComm2-50" action="javascript:makeRequest('2-50');" >
<input id="comm2-50" type="text" class="command" style="width: 1em;" value="u" />
</form>
<span id="commSav2-50" class="commSav" >u</span>
<div id="mathAns2-50" ></div>
</div>


<div class="math">
<table>
<tr><td>
<math xmlns="&mathml;" mathsize="big" display="block"><mstyle><mrow><mo>[</mo><mrow><mi>quotient</mi><mo>=</mo><mn>8978</mn></mrow><mo>,</mo><mrow><mi>remainder</mi><mo>=</mo><mn>1</mn></mrow><mo>]</mo></mrow></mstyle></math>
</td></tr>
</table>
</div>




<div class="returnType">
Type: Record(quotient: Integer,remainder: Integer)
</div>



<p>Selectors are evaluated.  Thus you can use variables that evaluate to
selectors instead of the selectors themselves.
</p>



<div id="spadComm2-51" class="spadComm" >
<form id="formComm2-51" action="javascript:makeRequest('2-51');" >
<input id="comm2-51" type="text" class="command" style="width: 10em;" value="s := 'quotient" />
</form>
<span id="commSav2-51" class="commSav" >s := 'quotient</span>
<div id="mathAns2-51" ></div>
</div>


<div class="math">
<table>
<tr><td>
<math xmlns="&mathml;" mathsize="big" display="block"><mstyle><mi>quotient</mi></mstyle></math>
</td></tr>
</table>
</div>




<div class="returnType">
Type: Variable quotient
</div>



<p>Be careful!  A selector could have the same name as a variable in the
workspace.  If this occurs, precede the selector name by a single
quote, as in   <span class="index">selector:quoting</span><a name="chapter-2-30"/> u.'quotient.
</p>



<div id="spadComm2-52" class="spadComm" >
<form id="formComm2-52" action="javascript:makeRequest('2-52');" >
<input id="comm2-52" type="text" class="command" style="width: 9em;" value="divide(5,2).s" />
</form>
<span id="commSav2-52" class="commSav" >divide(5,2).s</span>
<div id="mathAns2-52" ></div>
</div>


<div class="math">
<table>
<tr><td>
<math xmlns="&mathml;" mathsize="big" display="block"><mstyle><mn>2</mn></mstyle></math>
</td></tr>
</table>
</div>




<div class="returnType">
Type: PositiveInteger
</div>



<p>Here we declare that the value of <math xmlns="&mathml;" mathsize="big"><mstyle><mi>bd</mi></mstyle></math> has two components: a string,
to be accessed via <span class="teletype">name</span>, and an integer, to be accessed via
<span class="teletype">birthdayMonth</span>.
</p>



<div id="spadComm2-53" class="spadComm" >
<form id="formComm2-53" action="javascript:makeRequest('2-53');" >
<input id="comm2-53" type="text" class="command" style="width: 34em;" value="bd : Record(name : String, birthdayMonth : Integer)" />
</form>
<span id="commSav2-53" class="commSav" >bd : Record(name : String, birthdayMonth : Integer)</span>
<div id="mathAns2-53" ></div>
</div>




<div class="returnType">
Type: Void
</div>



<p>You must initially set the value of the entire <span class="teletype">Record</span> at once.
</p>



<div id="spadComm2-54" class="spadComm" >
<form id="formComm2-54" action="javascript:makeRequest('2-54');" >
<input id="comm2-54" type="text" class="command" style="width: 13em;" value='bd := ["Judith", 3]' />
</form>
<span id="commSav2-54" class="commSav" >bd := ["Judith", 3]</span>
<div id="mathAns2-54" ></div>
</div>


<div class="math">
<table>
<tr><td>
<math xmlns="&mathml;" mathsize="big" display="block"><mstyle><mrow><mo>[</mo><mrow><mi>name</mi><mo>=</mo><mtext><mrow><mtext mathvariant='monospace'>"Judith"</mtext></mrow></mtext></mrow><mo>,</mo><mrow><mi>birthdayMonth</mi><mo>=</mo><mn>3</mn></mrow><mo>]</mo></mrow></mstyle></math>
</td></tr>
</table>
</div>




<div class="returnType">
Type: Record(name: String,birthdayMonth: Integer)
</div>



<p>Once set, you can change any of the individual components.
</p>



<div id="spadComm2-55" class="spadComm" >
<form id="formComm2-55" action="javascript:makeRequest('2-55');" >
<input id="comm2-55" type="text" class="command" style="width: 12em;" value='bd.name := "Katie"' />
</form>
<span id="commSav2-55" class="commSav" >bd.name := "Katie"</span>
<div id="mathAns2-55" ></div>
</div>


<div class="math">
<table>
<tr><td>
<math xmlns="&mathml;" mathsize="big" display="block"><mstyle><mrow><mtext><mrow><mtext mathvariant='monospace'>"Katie"</mtext></mrow></mtext></mrow></mstyle></math>
</td></tr>
</table>
</div>




<div class="returnType">
Type: String
</div>



<p>Records may be nested and the selector names can be shared at
different levels.
</p>



<div id="spadComm2-56" class="spadComm" >
<form id="formComm2-56" action="javascript:makeRequest('2-56');" >
<input id="comm2-56" type="text" class="command" style="width: 39em;" value="r : Record(a : Record(b: Integer, c: Integer), b: Integer)" />
</form>
<span id="commSav2-56" class="commSav" >r : Record(a : Record(b: Integer, c: Integer), b: Integer)</span>
<div id="mathAns2-56" ></div>
</div>




<div class="returnType">
Type: Void
</div>



<p>The record <math xmlns="&mathml;" mathsize="big"><mstyle><mi>r</mi></mstyle></math> has a <math xmlns="&mathml;" mathsize="big"><mstyle><mi>b</mi></mstyle></math> selector at two different levels.
Here is an initial value for <math xmlns="&mathml;" mathsize="big"><mstyle><mi>r</mi></mstyle></math>.
</p>



<div id="spadComm2-57" class="spadComm" >
<form id="formComm2-57" action="javascript:makeRequest('2-57');" >
<input id="comm2-57" type="text" class="command" style="width: 12em;" value="r := [ [1,2], 3 ]" />
</form>
<span id="commSav2-57" class="commSav" >r := [ [1,2], 3 ]</span>
<div id="mathAns2-57" ></div>
</div>


<div class="math">
<table>
<tr><td>
<math xmlns="&mathml;" mathsize="big" display="block"><mstyle><mrow><mo>[</mo><mrow><mi>a</mi><mo>=</mo><mrow><mo>[</mo><mrow><mi>b</mi><mo>=</mo><mn>1</mn></mrow><mo>,</mo><mrow><mi>c</mi><mo>=</mo><mn>2</mn></mrow><mo>]</mo></mrow></mrow><mo>,</mo><mrow><mi>b</mi><mo>=</mo><mn>3</mn></mrow><mo>]</mo></mrow></mstyle></math>
</td></tr>
</table>
</div>




<div class="returnType">
Type: Record(a: Record(b: Integer,c: Integer),b: Integer)
</div>



<p>This extracts the <math xmlns="&mathml;" mathsize="big"><mstyle><mi>b</mi></mstyle></math> component from the <math xmlns="&mathml;" mathsize="big"><mstyle><mi>a</mi></mstyle></math> component of <math xmlns="&mathml;" mathsize="big"><mstyle><mi>r</mi></mstyle></math>.
</p>



<div id="spadComm2-58" class="spadComm" >
<form id="formComm2-58" action="javascript:makeRequest('2-58');" >
<input id="comm2-58" type="text" class="command" style="width: 4em;" value="r.a.b" />
</form>
<span id="commSav2-58" class="commSav" >r.a.b</span>
<div id="mathAns2-58" ></div>
</div>


<div class="math">
<table>
<tr><td>
<math xmlns="&mathml;" mathsize="big" display="block"><mstyle><mn>1</mn></mstyle></math>
</td></tr>
</table>
</div>




<div class="returnType">
Type: PositiveInteger
</div>



<p>This extracts the <math xmlns="&mathml;" mathsize="big"><mstyle><mi>b</mi></mstyle></math> component from <math xmlns="&mathml;" mathsize="big"><mstyle><mi>r</mi></mstyle></math>.
</p>



<div id="spadComm2-59" class="spadComm" >
<form id="formComm2-59" action="javascript:makeRequest('2-59');" >
<input id="comm2-59" type="text" class="command" style="width: 2em;" value="r.b" />
</form>
<span id="commSav2-59" class="commSav" >r.b</span>
<div id="mathAns2-59" ></div>
</div>


<div class="math">
<table>
<tr><td>
<math xmlns="&mathml;" mathsize="big" display="block"><mstyle><mn>3</mn></mstyle></math>
</td></tr>
</table>
</div>




<div class="returnType">
Type: PositiveInteger
</div>



<p>You can also use spaces or parentheses to refer to <span class="teletype">Record</span>
components.  This is the same as <math xmlns="&mathml;" mathsize="big"><mstyle><mrow><mi>r</mi><mo>.</mo><mi>a</mi></mrow></mstyle></math>.
</p>



<div id="spadComm2-60" class="spadComm" >
<form id="formComm2-60" action="javascript:makeRequest('2-60');" >
<input id="comm2-60" type="text" class="command" style="width: 3em;" value="r(a)" />
</form>
<span id="commSav2-60" class="commSav" >r(a)</span>
<div id="mathAns2-60" ></div>
</div>


<div class="math">
<table>
<tr><td>
<math xmlns="&mathml;" mathsize="big" display="block"><mstyle><mrow><mo>[</mo><mrow><mi>b</mi><mo>=</mo><mn>1</mn></mrow><mo>,</mo><mrow><mi>c</mi><mo>=</mo><mn>2</mn></mrow><mo>]</mo></mrow></mstyle></math>
</td></tr>
</table>
</div>




<div class="returnType">
Type: Record(b: Integer,c: Integer)
</div>


<p>This is the same as <math xmlns="&mathml;" mathsize="big"><mstyle><mrow><mi>r</mi><mo>.</mo><mi>b</mi></mrow></mstyle></math>.
</p>



<div id="spadComm2-61" class="spadComm" >
<form id="formComm2-61" action="javascript:makeRequest('2-61');" >
<input id="comm2-61" type="text" class="command" style="width: 2em;" value="r b" />
</form>
<span id="commSav2-61" class="commSav" >r b</span>
<div id="mathAns2-61" ></div>
</div>


<div class="math">
<table>
<tr><td>
<math xmlns="&mathml;" mathsize="big" display="block"><mstyle><mn>3</mn></mstyle></math>
</td></tr>
</table>
</div>




<div class="returnType">
Type: PositiveInteger
</div>



<p>This is the same as <math xmlns="&mathml;" mathsize="big"><mstyle><mrow><mi>r</mi><mo>.</mo><mi>b</mi><mo>:</mo><mo>=</mo><mn>10</mn></mrow></mstyle></math>.
</p>



<div id="spadComm2-62" class="spadComm" >
<form id="formComm2-62" action="javascript:makeRequest('2-62');" >
<input id="comm2-62" type="text" class="command" style="width: 7em;" value="r(b) := 10" />
</form>
<span id="commSav2-62" class="commSav" >r(b) := 10</span>
<div id="mathAns2-62" ></div>
</div>


<div class="math">
<table>
<tr><td>
<math xmlns="&mathml;" mathsize="big" display="block"><mstyle><mn>10</mn></mstyle></math>
</td></tr>
</table>
</div>




<div class="returnType">
Type: PositiveInteger
</div>



<p>Look at <math xmlns="&mathml;" mathsize="big"><mstyle><mi>r</mi></mstyle></math> to make sure it was modified.
</p>



<div id="spadComm2-63" class="spadComm" >
<form id="formComm2-63" action="javascript:makeRequest('2-63');" >
<input id="comm2-63" type="text" class="command" style="width: 1em;" value="r" />
</form>
<span id="commSav2-63" class="commSav" >r</span>
<div id="mathAns2-63" ></div>
</div>


<div class="math">
<table>
<tr><td>
<math xmlns="&mathml;" mathsize="big" display="block"><mstyle><mrow><mo>[</mo><mrow><mi>a</mi><mo>=</mo><mrow><mo>[</mo><mrow><mi>b</mi><mo>=</mo><mn>1</mn></mrow><mo>,</mo><mrow><mi>c</mi><mo>=</mo><mn>2</mn></mrow><mo>]</mo></mrow></mrow><mo>,</mo><mrow><mi>b</mi><mo>=</mo><mn>10</mn></mrow><mo>]</mo></mrow></mstyle></math>
</td></tr>
</table>
</div>




<div class="returnType">
Type: Record(a: Record(b: Integer,c: Integer),b: Integer)
</div>





</div><a href="book-contents.xhtml" style="margin-right: 10px;">Book Contents</a>
<a href="section-2.3.xhtml" style="margin-right: 10px;">Previous Section 2.3 Declarations</a><a href="section-2.5.xhtml" style="margin-right: 10px;">Next Section 2.5 Unions</a>
<a href="book-index.xhtml">Book Index</a></body>
</html>