<?xml version="1.0" encoding="UTF-8" ?>

<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.1 plus MathML 2.0//EN"
"http://www.w3.org/TR/MathML2/dtd/xhtml-math11-f.dtd" [
<!ENTITY mathml "http://www.w3.org/1998/Math/MathML">
]>

<html xmlns="http://www.w3.org/1999/xhtml"
      xmlns:xlink="http://www.w3.org/1999/xlink" >


  <head>
    <title>Section7.1</title>
    <link rel="stylesheet" type="text/css" href="graphicstyle.css" />
    <script type="text/javascript" src="bookax1.js" />
  </head>

  <body>
<a href="book-contents.xhtml" style="margin-right: 10px;">Book Contents</a><a href="section-7.0.xhtml" style="margin-right: 10px;">Previous Section 7.0 Graphics</a><a href="section-7.2.xhtml" style="margin-right: 10px;">Next Section 7.2 Three-Dimensional Graphics</a>
<a href="book-index.xhtml">Book Index</a><div class="section"  id="sec-7.1">
<h2 class="sectiontitle">7.1  Two-Dimensional Graphics</h2>


<a name="ugGraphTwoD" class="label"/>


<p>The FriCAS two-dimensional graphics package provides the ability
to <span class="index">graphics:two-dimensional</span><a name="chapter-7-3"/> display
</p>



<ul>
<li>
 curves defined by functions of a single real variable
</li>
<li> curves defined by parametric equations
</li>
<li> implicit non-singular curves defined by polynomial equations
</li>
<li> planar graphs generated from lists of point components.
</li>
</ul>



<p>These graphs can be modified by specifying various options, such as
calculating points in the polar coordinate system or changing the size
of the graph viewport window.
</p>



<a name="subsec-7.1.1"/>
<div class="subsection"  id="subsec-7.1.1">
<h3 class="subsectitle">7.1.1  Plotting Two-Dimensional Functions of One Variable</h3>


<a name="ugGraphTwoDPlot" class="label"/>


<p><span class="index">curve:one variable function</span><a name="chapter-7-4"/> The first kind of
two-dimensional graph is that of a curve defined by a function
 <math xmlns="&mathml;" mathsize="big"><mstyle><mrow><mi>y</mi><mo>=</mo><mi>f</mi><mo>(</mo><mi>x</mi><mo>)</mo></mrow></mstyle></math> over a finite interval of the  <math xmlns="&mathml;" mathsize="big"><mstyle><mi>x</mi></mstyle></math> axis.
</p>




<div class="boxed2">


<div class="boxed">



<p>The general format for drawing a function defined by a formula  <math xmlns="&mathml;" mathsize="big"><mstyle><mrow><mi>f</mi><mo>(</mo><mi>x</mi><mo>)</mo></mrow></mstyle></math> is:
</p>



<div class="center" style="text-align: center;">


<p><span class="teletype">draw(f(x), x = a..b, <span class="italic">options</span>)</span>
</p>



</div>



<p>where  <math xmlns="&mathml;" mathsize="big"><mstyle><mrow><mi>a</mi><mo>.</mo><mo>.</mo><mi>b</mi></mrow></mstyle></math> defines the range of  <math xmlns="&mathml;" mathsize="big"><mstyle><mi>x</mi></mstyle></math>, and where <span class="italic">options</span>
prescribes zero or more options as described in
<a href="section-7.1.xhtml#ugGraphTwoDOptions" class="ref" >ugGraphTwoDOptions</a> .  An
example of an option is  <math xmlns="&mathml;" mathsize="big"><mstyle><mrow><mi>curveColor</mi><mo>=</mo><mo>=</mo><mi>bright</mi><mi>red</mi><mo>(</mo><mo>)</mo><mo>.</mo></mrow></mstyle></math> An alternative
format involving functions  <math xmlns="&mathml;" mathsize="big"><mstyle><mi>f</mi></mstyle></math> and  <math xmlns="&mathml;" mathsize="big"><mstyle><mi>g</mi></mstyle></math> is also available.<br/>
</p>



</div>
</div>



<p>A simple way to plot a function is to use a formula.  The first
argument is the formula.  For the second argument, write the name of
the independent variable (here,  <math xmlns="&mathml;" mathsize="big"><mstyle><mi>x</mi></mstyle></math>), followed by an <span class="italic"><span class="teletype">=</span></span>, and the
range of values.
</p>


<p>Display this formula over the range  <math xmlns="&mathml;" mathsize="big"><mstyle><mrow><mn>0</mn><mo>&#x2264;</mo><mi>x</mi><mo>&#x2264;</mo><mn>6</mn></mrow></mstyle></math>.
FriCAS converts your formula to a compiled function so that the
results can be computed quickly and efficiently. 
</p>




<div class="spadgraph" style="width: 20em">
draw(sin(tan(x)) - tan(sin(x)),x = 0..6)
</div>
























<p>Once again the formula is converted to a compiled function before any
points were computed.  If you want to graph the same function on
several intervals, it is a good idea to define the function first so
that the function has to be compiled only once.
</p>


<p>This time we first define the function.
</p>



<div id="spadComm7-1" class="spadComm" >
<form id="formComm7-1" action="javascript:makeRequest('7-1');" >
<input id="comm7-1" type="text" class="command" style="width: 18em;" value="f(x) == (x-1)*(x-2)*(x-3) " />
</form>
<span id="commSav7-1" class="commSav" >f(x) == (x-1)*(x-2)*(x-3) </span>
<div id="mathAns7-1" ></div>
</div>







<div class="returnType">
Type: Void
</div>





<p>To draw the function, the first argument is its name and the second is
just the range with no independent variable.
</p>



<div class="spadgraph" style="width: 7em">
draw(f, 0..4) 
</div>







</div>



<a name="subsec-7.1.2"/>
<div class="subsection"  id="subsec-7.1.2">
<h3 class="subsectitle">7.1.2  Plotting Two-Dimensional Parametric Plane Curves</h3>


<a name="ugGraphTwoDPar" class="label"/>


<p>The second kind of two-dimensional graph is that of
<span class="index">parametric plane curve</span><a name="chapter-7-5"/> curves produced by parametric
equations.  <span class="index">curve:parametric plane</span><a name="chapter-7-6"/> Let  <math xmlns="&mathml;" mathsize="big"><mstyle><mrow><mi>x</mi><mo>=</mo><mi>f</mi><mo>(</mo><mi>t</mi><mo>)</mo></mrow></mstyle></math> and 
 <math xmlns="&mathml;" mathsize="big"><mstyle><mrow><mi>y</mi><mo>=</mo><mi>g</mi><mo>(</mo><mi>t</mi><mo>)</mo></mrow></mstyle></math> be formulas or two functions  <math xmlns="&mathml;" mathsize="big"><mstyle><mi>f</mi></mstyle></math> and  <math xmlns="&mathml;" mathsize="big"><mstyle><mi>g</mi></mstyle></math> as the parameter  <math xmlns="&mathml;" mathsize="big"><mstyle><mi>t</mi></mstyle></math>
ranges over an interval  <math xmlns="&mathml;" mathsize="big"><mstyle><mrow><mo>[</mo><mi>a</mi><mo>,</mo><mi>b</mi><mo>]</mo></mrow></mstyle></math>.  The function <span style="font-weight: bold;"> curve</span> takes the
two functions  <math xmlns="&mathml;" mathsize="big"><mstyle><mi>f</mi></mstyle></math> and  <math xmlns="&mathml;" mathsize="big"><mstyle><mi>g</mi></mstyle></math> as its parameters.
</p>




<div class="boxed2">


<div class="boxed">



<p>The general format for drawing a two-dimensional plane curve defined by
parametric formulas  <math xmlns="&mathml;" mathsize="big"><mstyle><mrow><mi>x</mi><mo>=</mo><mi>f</mi><mo>(</mo><mi>t</mi><mo>)</mo></mrow></mstyle></math> and  <math xmlns="&mathml;" mathsize="big"><mstyle><mrow><mi>y</mi><mo>=</mo><mi>g</mi><mo>(</mo><mi>t</mi><mo>)</mo></mrow></mstyle></math> is:
</p>



<div class="center" style="text-align: center;">


<p><span class="teletype">draw(curve(f(t), g(t)), t = a..b, <span class="italic">options</span>)</span>
</p>



</div>



<p>where  <math xmlns="&mathml;" mathsize="big"><mstyle><mrow><mi>a</mi><mo>.</mo><mo>.</mo><mi>b</mi></mrow></mstyle></math> defines the range of the independent variable  <math xmlns="&mathml;" mathsize="big"><mstyle><mi>t</mi></mstyle></math>, and
where <span class="italic">options</span> prescribes zero or more options as described in
<a href="section-7.2.xhtml#ugGraphThreeDOptions" class="ref" >ugGraphThreeDOptions</a> .  An
example of an option is  <math xmlns="&mathml;" mathsize="big"><mstyle><mrow><mi>curveColor</mi><mo>=</mo><mo>=</mo><mi>bright</mi><mi>red</mi><mo>(</mo><mo>)</mo><mo>.</mo></mrow></mstyle></math>
</p>


</div>
</div>



<p>Here's an example:
</p>


<p>Define a parametric curve using a range involving  <math xmlns="&mathml;" mathsize="big"><mstyle><mrow><mo>%</mo><mi>pi</mi></mrow></mstyle></math>, FriCAS's way
of saying  <math xmlns="&mathml;" mathsize="big"><mstyle><mi>&#x03C0;</mi></mstyle></math>.  For parametric curves, FriCAS
compiles two functions, one for each of the functions  <math xmlns="&mathml;" mathsize="big"><mstyle><mi>f</mi></mstyle></math> and  <math xmlns="&mathml;" mathsize="big"><mstyle><mi>g</mi></mstyle></math>.
</p>



<div class="spadgraph" style="width: 40em">
draw(curve(sin(t)*sin(2*t)*sin(3*t), sin(4*t)*sin(5*t)*sin(6*t)), t = 0..2*%pi)
</div>





<p>The title may be an arbitrary string and is an optional argument to
the <span style="font-weight: bold;"> draw</span> command.
</p>



<div class="spadgraph" style="width: 21em">
draw(curve(cos(t), sin(t)), t = 0..2*%pi)
</div>





<p>If you plan on plotting  <math xmlns="&mathml;" mathsize="big"><mstyle><mrow><mi>x</mi><mo>=</mo><mi>f</mi><mo>(</mo><mi>t</mi><mo>)</mo></mrow></mstyle></math>,  <math xmlns="&mathml;" mathsize="big"><mstyle><mrow><mi>y</mi><mo>=</mo><mi>g</mi><mo>(</mo><mi>t</mi><mo>)</mo></mrow></mstyle></math> as  <math xmlns="&mathml;" mathsize="big"><mstyle><mi>t</mi></mstyle></math> ranges over
several intervals, you may want to define functions  <math xmlns="&mathml;" mathsize="big"><mstyle><mi>f</mi></mstyle></math> and  <math xmlns="&mathml;" mathsize="big"><mstyle><mi>g</mi></mstyle></math> first,
so that they need not be recompiled every time you create a new graph.
Here's an example:
</p>


<p>As before, you can first define the functions you wish to draw.
</p>



<div id="spadComm7-2" class="spadComm" >
<form id="formComm7-2" action="javascript:makeRequest('7-2');" >
<input id="comm7-2" type="text" class="command" style="width: 22em;" value="f(t:DFLOAT):DFLOAT == sin(3*t/4) " />
</form>
<span id="commSav7-2" class="commSav" >f(t:DFLOAT):DFLOAT == sin(3*t/4) </span>
<div id="mathAns7-2" ></div>
</div>




<div class="verbatim"><br />
&nbsp;&nbsp;&nbsp;Function&nbsp;declaration&nbsp;f&nbsp;:&nbsp;DoubleFloat&nbsp;-&gt;&nbsp;DoubleFloat&nbsp;has&nbsp;been&nbsp;<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;added&nbsp;to&nbsp;workspace.<br />
</div>




<div class="returnType">
Type: Void
</div>



<p>FriCAS compiles them to map <span class="teletype">DoubleFloat</span> values to <span class="teletype">DoubleFloat</span> 
values.
</p>



<div id="spadComm7-3" class="spadComm" >
<form id="formComm7-3" action="javascript:makeRequest('7-3');" >
<input id="comm7-3" type="text" class="command" style="width: 20em;" value="g(t:DFLOAT):DFLOAT == sin(t) " />
</form>
<span id="commSav7-3" class="commSav" >g(t:DFLOAT):DFLOAT == sin(t) </span>
<div id="mathAns7-3" ></div>
</div>




<div class="verbatim"><br />
&nbsp;&nbsp;&nbsp;Function&nbsp;declaration&nbsp;f&nbsp;:&nbsp;DoubleFloat&nbsp;-&gt;&nbsp;DoubleFloat&nbsp;has&nbsp;been&nbsp;added&nbsp;<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;to&nbsp;workspace.<br />
</div>




<div class="returnType">
Type: Void
</div>



<p>Give to <span class="teletype">curve</span> the names of the functions, then write the range
without the name of the independent variable.
</p>



<div class="spadgraph" style="width: 13em">
draw(curve(f,g),0..%pi) 
</div>





<p>Here is another look at the same curve but over a different
range. Notice that  <math xmlns="&mathml;" mathsize="big"><mstyle><mi>f</mi></mstyle></math> and  <math xmlns="&mathml;" mathsize="big"><mstyle><mi>g</mi></mstyle></math> are not recompiled.  Also note that
FriCAS provides a default title based on the first function specified
in <span style="font-weight: bold;"> curve</span>.
</p>



<div class="spadgraph" style="width: 17em">
draw(curve(f,g),-4*%pi..4*%pi) 
</div>








</div>



<a name="subsec-7.1.3"/>
<div class="subsection"  id="subsec-7.1.3">
<h3 class="subsectitle">7.1.3  Plotting Plane Algebraic Curves</h3>


<a name="ugGraphTwoDPlane" class="label"/>


<p>A third kind of two-dimensional graph is a non-singular
<span class="italic">solution curve</span> <span class="index">curve:plane algebraic</span><a name="chapter-7-7"/> in a rectangular
region of the plane.  A solution curve is a curve defined by a
polynomial equation  <math xmlns="&mathml;" mathsize="big"><mstyle><mrow><mi>p</mi><mo>(</mo><mi>x</mi><mo>,</mo><mi>y</mi><mo>)</mo><mo>=</mo><mn>0</mn></mrow></mstyle></math>.  <span class="index">plane algebraic curve</span><a name="chapter-7-8"/>
Non-singular means that the curve is <span class="italic">smooth</span> in that it does not
cross itself or come to a point (cusp).  Algebraically, this means
that for any point  <math xmlns="&mathml;" mathsize="big"><mstyle><mrow><mo>(</mo><mi>x</mi><mo>,</mo><mi>y</mi><mo>)</mo></mrow></mstyle></math> on the curve, that is, a point such that
 <math xmlns="&mathml;" mathsize="big"><mstyle><mrow><mi>p</mi><mo>(</mo><mi>x</mi><mo>,</mo><mi>y</mi><mo>)</mo><mo>=</mo><mn>0</mn></mrow></mstyle></math>, the partial derivatives 
 <math xmlns="&mathml;" mathsize="big"><mstyle><mrow><mfrac><mrow><mo>&#x2202;</mo><mi>p</mi></mrow><mrow><mo>&#x2202;</mo><mi>x</mi></mrow></mfrac><mo>(</mo><mi>x</mi><mo>,</mo><mi>y</mi><mo>)</mo></mrow></mstyle></math> and 
 <math xmlns="&mathml;" mathsize="big"><mstyle><mrow><mfrac><mrow><mo>&#x2202;</mo><mi>p</mi></mrow><mrow><mo>&#x2202;</mo><mi>y</mi></mrow></mfrac><mo>(</mo><mi>x</mi><mo>,</mo><mi>y</mi><mo>)</mo></mrow></mstyle></math> are not both zero.
<span class="index">curve:smooth</span><a name="chapter-7-9"/> <span class="index">curve:non-singular</span><a name="chapter-7-10"/> <span class="index">smooth curve</span><a name="chapter-7-11"/>
<span class="index">non-singular curve</span><a name="chapter-7-12"/>
</p>




<div class="boxed2">


<div class="boxed">



<p>The general format for drawing a non-singular solution curve given by
a polynomial of the form  <math xmlns="&mathml;" mathsize="big"><mstyle><mrow><mi>p</mi><mo>(</mo><mi>x</mi><mo>,</mo><mi>y</mi><mo>)</mo><mo>=</mo><mn>0</mn></mrow></mstyle></math> is:
</p>



<div class="center" style="text-align: center;">


<p><span class="teletype">draw(p(x,y) = 0, x, y, range == [a..b, c..d], <span class="italic">options</span>)</span>
</p>



</div>



<p>where the second and third arguments name the first and second
independent variables of  <math xmlns="&mathml;" mathsize="big"><mstyle><mi>p</mi></mstyle></math>.  A <span class="teletype">range</span> option is always given to
designate a bounding rectangular region of the plane
 <math xmlns="&mathml;" mathsize="big"><mstyle><mrow><mi>a</mi><mo>&#x2264;</mo><mi>x</mi><mo>&#x2264;</mo><mi>b</mi><mo>,</mo><mi>c</mi><mo>&#x2264;</mo><mi>y</mi><mo>&#x2264;</mo><mi>d</mi></mrow></mstyle></math>.
Zero or more additional options as described in
<a href="section-7.1.xhtml#ugGraphTwoDOptions" class="ref" >ugGraphTwoDOptions</a>  may be given.<br/>
</p>



</div>
</div>



<p>We require that the polynomial has rational or integral coefficients.
Here is an algebraic curve example (<span class="italic">Cartesian ovals</span>):
<span class="index">Cartesian:ovals</span><a name="chapter-7-13"/>
</p>




<div id="spadComm7-4" class="spadComm" >
<form id="formComm7-4" action="javascript:makeRequest('7-4');" >
<input id="comm7-4" type="text" class="command" style="width: 43em;" value="p := ((x^2 + y^2 + 1) - 8*x)^2 - (8*(x^2 + y^2 + 1)-4*x-1) " />
</form>
<span id="commSav7-4" class="commSav" >p := ((x^2 + y^2 + 1) - 8*x)^2 - (8*(x^2 + y^2 + 1)-4*x-1) </span>
<div id="mathAns7-4" ></div>
</div>



<div class="math">
<table>
<tr><td>
<math xmlns="&mathml;" mathsize="big" display="block"><mstyle><mrow><mrow><msup><mi>y</mi><mn>4</mn></msup></mrow><mo>+</mo><mrow><mrow><mo>(</mo><mrow><mn>2</mn><mspace width="0.5 em" /><mrow><msup><mi>x</mi><mn>2</mn></msup></mrow></mrow><mo>-</mo><mrow><mn>16</mn><mspace width="0.5 em" /><mi>x</mi></mrow><mo>-</mo><mn>6</mn><mo>)</mo></mrow><mspace width="0.5 em" /><mrow><msup><mi>y</mi><mn>2</mn></msup></mrow></mrow><mo>+</mo><mrow><msup><mi>x</mi><mn>4</mn></msup></mrow><mo>-</mo><mrow><mn>16</mn><mspace width="0.5 em" /><mrow><msup><mi>x</mi><mn>3</mn></msup></mrow></mrow><mo>+</mo><mrow><mn>58</mn><mspace width="0.5 em" /><mrow><msup><mi>x</mi><mn>2</mn></msup></mrow></mrow><mo>-</mo><mrow><mn>12</mn><mspace width="0.5 em" /><mi>x</mi></mrow><mo>-</mo><mn>6</mn></mrow></mstyle></math>
</td></tr>
</table>
</div>





<div class="returnType">
Type: Polynomial Integer
</div>



<p>The first argument is always expressed as an equation of the form  <math xmlns="&mathml;" mathsize="big"><mstyle><mrow><mi>p</mi><mo>=</mo><mn>0</mn></mrow></mstyle></math>
where  <math xmlns="&mathml;" mathsize="big"><mstyle><mi>p</mi></mstyle></math> is a polynomial.
</p>



<div class="spadgraph" style="width: 22em">
draw(p = 0, x, y, range == [-1..11, -7..7]) 
</div>








</div>



<a name="subsec-7.1.4"/>
<div class="subsection"  id="subsec-7.1.4">
<h3 class="subsectitle">7.1.4  Two-Dimensional Options</h3>


<a name="ugGraphTwoDOptions" class="label"/>


<p>The <span style="font-weight: bold;"> draw</span> commands take an optional list of options, such as <span class="teletype">title</span> shown above.  Each option is given by the syntax: 
<span class="italic">name</span> <span class="teletype">==</span> <span class="italic">value</span>.  
Here is a list of the available options in the
order that they are described below.
</p>


<p><table class="begintabular">
<tr><td>adaptive</td><td>clip</td><td>unit</td></tr>
<tr><td>clip</td><td>curveColor</td><td>range</td></tr>
<tr><td>toScale</td><td>pointColor</td><td>coordinates</td></tr>
</table>
</p>


<p>The  <math xmlns="&mathml;" mathsize="big"><mstyle><mi>adaptive</mi></mstyle></math> option turns adaptive plotting on or off.
<span class="index">adaptive plotting</span><a name="chapter-7-14"/> Adaptive plotting uses an algorithm that
traverses a graph and computes more points for those parts of the
graph with high curvature.  The higher the curvature of a region is,
the more points the algorithm computes.  
<span class="index">graphics:2D options:adaptive</span><a name="chapter-7-15"/>
</p>


<p>The <span class="teletype">adaptive</span> option is normally on.  Here we turn it off.
</p>



<div class="spadgraph" style="width: 26em">
draw(sin(1/x),x=-2*%pi..2*%pi, adaptive == false)
</div>






<p>The <span class="teletype">clip</span> option turns clipping on or off.  
<span class="index">graphics:2D options:clipping</span><a name="chapter-7-16"/> 
If on, large values are cut off according to
<span class="spadfunFrom" >clipPointsDefault</span><span class="index">clipPointsDefault</span><a name="chapter-7-17"/><span class="index">GraphicsDefaults</span><a name="chapter-7-18"/>.
</p>




<div class="spadgraph" style="width: 22em">
draw(tan(x),x=-2*%pi..2*%pi, clip == true)
</div>






<p>Option <span class="teletype">toScale</span> does plotting to scale if <span class="teletype">true</span> or uses the
entire viewport if <span class="teletype">false</span>.  The default can be determined using
<span class="spadfunFrom" >drawToScale</span><span class="index">drawToScale</span><a name="chapter-7-19"/><span class="index">GraphicsDefaults</span><a name="chapter-7-20"/>.  
<span class="index">graphics:2D options:to scale</span><a name="chapter-7-21"/>
</p>




<div class="spadgraph" style="width: 31em">
draw(sin(x),x=-%pi..%pi, toScale == true, unit == [1.0,1.0])
</div>






<p>Option <span class="teletype">clip</span> with a range sets point clipping of a graph within
the <span class="index">graphics:2D options:clip in a range</span><a name="chapter-7-22"/> ranges specified in
the list  <math xmlns="&mathml;" mathsize="big"><mstyle><mrow><mo>[</mo><mi>x</mi><mi>range</mi><mo>,</mo><mi>y</mi><mi>range</mi><mo>]</mo></mrow></mstyle></math>.  <span class="index">clipping</span><a name="chapter-7-23"/> If only one range is
specified, clipping applies to the y-axis.
</p>



<div class="spadgraph" style="width: 44em">
draw(sec(x),x=-2*%pi..2*%pi, clip == [-2*%pi..2*%pi,-%pi..%pi], unit == [1.0,1.0])
</div>






<p>Option <span class="teletype">curveColor</span> sets the color of the graph curves or lines to
be the <span class="index">graphics:2D options:curve color</span><a name="chapter-7-24"/> indicated palette color
<span class="index">curve:color</span><a name="chapter-7-25"/> (see <a href="section-7.1.xhtml#ugGraphColor" class="ref" >ugGraphColor</a>  and
<a href="section-7.1.xhtml#ugGraphColorPalette" class="ref" >ugGraphColorPalette</a> ).  
<span class="index">color:curve</span><a name="chapter-7-26"/>
</p>




<div class="spadgraph" style="width: 27em">
draw(sin(x),x=-%pi..%pi, curveColor == bright red())
</div>






<p>Option <span class="teletype">pointColor</span> sets the color of the graph points to the
indicated <span class="index">graphics:2D options:point color</span><a name="chapter-7-27"/> palette color (see
<a href="section-7.1.xhtml#ugGraphColor" class="ref" >ugGraphColor</a>  and 
<a href="section-7.1.xhtml#ugGraphColorPalette" class="ref" >ugGraphColorPalette</a> ).
<span class="index">color:point</span><a name="chapter-7-28"/>
</p>



<div class="spadgraph" style="width: 29em">
draw(sin(x),x=-%pi..%pi, pointColor == pastel yellow())
</div>






<p>Option <span class="teletype">unit</span> sets the intervals at which the axis units are
plotted <span class="index">graphics:2D options:set units</span><a name="chapter-7-29"/> according to the
indicated steps [ <math xmlns="&mathml;" mathsize="big"><mstyle><mi>x</mi></mstyle></math> interval,  <math xmlns="&mathml;" mathsize="big"><mstyle><mi>y</mi></mstyle></math> interval].
</p>



<div class="spadgraph" style="width: 37em">
draw(curve(9*sin(3*t/4),8*sin(t)), t = -4*%pi..4*%pi, unit == [2.0,1.0])
</div>






<p>Option <span class="teletype">range</span> sets the range of variables in a graph to be within
the ranges <span class="index">graphics:2D options:range</span><a name="chapter-7-30"/> for solving plane
algebraic curve plots.
</p>



<div class="spadgraph" style="width: 39em">
draw(y^2 + y - (x^3 - x) = 0, x, y, range == [-2..2,-2..1], unit==[1.0,1.0])
</div>






<p>A second example of a solution plot.
</p>



<div class="spadgraph" style="width: 38em">
draw(x^2 + y^2 = 1, x, y, range == [-3/2..3/2,-3/2..3/2], unit==[0.5,0.5])
</div>






<p>Option  <math xmlns="&mathml;" mathsize="big"><mstyle><mi>coordinates</mi></mstyle></math> indicates the coordinate system in which the
graph <span class="index">graphics:2D options:coordinates</span><a name="chapter-7-31"/> is plotted.  The default
is to use the Cartesian coordinate system.
<span class="index">Cartesian:coordinate system</span><a name="chapter-7-32"/> For more details, see
<a href="section-7.2.xhtml#ugGraphCoord" class="ref" >ugGraphCoord</a>  
or <span class="teletype">CoordinateSystems</span>.
<span class="index">coordinate system:Cartesian</span><a name="chapter-7-33"/>
</p>




<div class="spadgraph" style="width: 29em">
draw(curve(sin(5*t),t),t=0..2*%pi, coordinates == polar)
</div>








</div>



<a name="subsec-7.1.5"/>
<div class="subsection"  id="subsec-7.1.5">
<h3 class="subsectitle">7.1.5  Color</h3>


<a name="ugGraphColor" class="label"/>


<p>The domain <span class="teletype">Color</span> <span class="index">Color</span><a name="chapter-7-34"/> provides operations for
manipulating <span class="index">graphics:color</span><a name="chapter-7-35"/> colors in two-dimensional
graphs.  <span class="index">color</span><a name="chapter-7-36"/> Colors are objects of <span class="teletype">Color</span>.  Each color
has a <span class="italic">hue</span> and a <span class="italic">weight</span>.  <span class="index">hue</span><a name="chapter-7-37"/> Hues are represented
by integers that range from  <math xmlns="&mathml;" mathsize="big"><mstyle><mn>1</mn></mstyle></math> to the
<span class="spadfunFrom" >numberOfHues()</span><span class="index">numberOfHues()</span><a name="chapter-7-38"/><span class="index">Color</span><a name="chapter-7-39"/>, normally
<span class="index">graphics:color:number of hues</span><a name="chapter-7-40"/>  <math xmlns="&mathml;" mathsize="big"><mstyle><mn>27</mn></mstyle></math>.  <span class="index">weight</span><a name="chapter-7-41"/> Weights
are floats and have the value  <math xmlns="&mathml;" mathsize="big"><mstyle><mrow><mn>1</mn><mo>.</mo><mn>0</mn></mrow></mstyle></math> by default.
</p>


<p><dl>
<dt><span style="font-weight: bold;"> color</span>&nbsp;<span class="funArgs">(integer)</span></dt>
<dd>
creates a color of hue <span class="italic">integer</span> and weight  <math xmlns="&mathml;" mathsize="big"><mstyle><mrow><mn>1</mn><mo>.</mo><mn>0</mn></mrow></mstyle></math>.
</dd>
<dt><span style="font-weight: bold;"> hue</span>&nbsp;<span class="funArgs">(color)</span></dt>
<dd>
returns the hue of <span class="italic">color</span> as an integer.
<span class="index">graphics:color:hue function</span><a name="chapter-7-42"/>
</dd>
<dt><span style="font-weight: bold;"> red</span>&nbsp;<span class="funArgs">()</span></dt>
<dd>
<span class="bold">blue</span>(),
<span class="bold">green</span>(), and <span class="bold">yellow</span>()
<span class="index">graphics:color:primary color functions</span><a name="chapter-7-43"/>
create colors of that hue with weight  <math xmlns="&mathml;" mathsize="big"><mstyle><mrow><mn>1</mn><mo>.</mo><mn>0</mn></mrow></mstyle></math>.
</dd>
<dt> <math xmlns="&mathml;" mathsize="big"><mstyle><mrow><msub><mrow><mtext mathvariant='sans-serif-italic'>color</mtext></mrow><mn>1</mn></msub></mrow></mstyle></math> <span class="teletype">+</span>  <math xmlns="&mathml;" mathsize="big"><mstyle><mrow><msub><mrow><mtext mathvariant='sans-serif-italic'>color</mtext></mrow><mn>2</mn></msub></mrow></mstyle></math></dt>
<dd> returns the
color that results from additively combining the indicated
 <math xmlns="&mathml;" mathsize="big"><mstyle><mrow><msub><mrow><mtext mathvariant='sans-serif-italic'>color</mtext></mrow><mn>1</mn></msub></mrow></mstyle></math> and  <math xmlns="&mathml;" mathsize="big"><mstyle><mrow><msub><mrow><mtext mathvariant='sans-serif-italic'>color</mtext></mrow><mn>2</mn></msub></mrow></mstyle></math>.
Color addition is not commutative: changing the order of the arguments
produces different results.
</dd>
<dt><span class="italic">integer</span> <span class="teletype">*</span> <span class="italic">color</span></dt>
<dd>
changes the weight of <span class="italic">color</span> by <span class="italic">integer</span>
without affecting its hue.
<span class="index">graphics:color:multiply function</span><a name="chapter-7-44"/>
For example,
 <math xmlns="&mathml;" mathsize="big"><mstyle><mrow><mi>red</mi><mo>(</mo><mo>)</mo><mo>+</mo><mn>3</mn><mo>*</mo><mi>yellow</mi><mo>(</mo><mo>)</mo></mrow></mstyle></math> produces a color closer to yellow than to red.
Color multiplication is not associative: changing the order of grouping
<span class="index">color:multiplication</span><a name="chapter-7-45"/>
produces different results.
</dd>
</dl>
</p>


<p>These functions can be used to change the point and curve colors
for two- and three-dimensional graphs.
Use the <span class="teletype">pointColor</span> option for points.
</p>




<div class="spadgraph" style="width: 20em">
draw(x^2,x=-1..1,pointColor == green())
</div>







<p>Use the <span class="teletype">curveColor</span> option for curves.
</p>




<div class="spadgraph" style="width: 27em">
draw(x^2,x=-1..1,curveColor == color(13) + 2*blue())
</div>








</div>



<a name="subsec-7.1.6"/>
<div class="subsection"  id="subsec-7.1.6">
<h3 class="subsectitle">7.1.6  Palette</h3>


<a name="ugGraphColorPalette" class="label"/>

<p><span class="index">graphics:palette</span><a name="chapter-7-46"/>
</p>


<p>Domain <span class="teletype">Palette</span> is the domain of shades of colors:
<span style="font-weight: bold;"> dark</span>, <span style="font-weight: bold;"> dim</span>, <span style="font-weight: bold;"> bright</span>, <span style="font-weight: bold;"> pastel</span>, and <span style="font-weight: bold;"> light</span>,
designated by the integers  <math xmlns="&mathml;" mathsize="big"><mstyle><mn>1</mn></mstyle></math> through  <math xmlns="&mathml;" mathsize="big"><mstyle><mn>5</mn></mstyle></math>, respectively.
<span class="index">Palette</span><a name="chapter-7-47"/>
</p>


<p>Colors are normally <span class="italic">bright.</span>
</p>




<div id="spadComm7-5" class="spadComm" >
<form id="formComm7-5" action="javascript:makeRequest('7-5');" >
<input id="comm7-5" type="text" class="command" style="width: 8em;" value="shade red()" />
</form>
<span id="commSav7-5" class="commSav" >shade red()</span>
<div id="mathAns7-5" ></div>
</div>


<div class="math">
<table>
<tr><td>
<math xmlns="&mathml;" mathsize="big" display="block"><mstyle><mn>3</mn></mstyle></math>
</td></tr>
</table>
</div>




<div class="returnType">
Type: PositiveInteger
</div>



<p>To change the shade of a color, apply the name of a shade to it.
<span class="index">color:shade</span><a name="chapter-7-48"/>
<span class="index">shade</span><a name="chapter-7-49"/>
</p>




<div id="spadComm7-6" class="spadComm" >
<form id="formComm7-6" action="javascript:makeRequest('7-6');" >
<input id="comm7-6" type="text" class="command" style="width: 21em;" value="myFavoriteColor := dark blue() " />
</form>
<span id="commSav7-6" class="commSav" >myFavoriteColor := dark blue() </span>
<div id="mathAns7-6" ></div>
</div>


<div class="math">
<table>
<tr><td>
<math xmlns="&mathml;" mathsize="big" display="block"><mstyle><mrow><mo>[</mo><mrow><mrow><mtext>Hue:</mtext></mrow><mspace width="0.5 em" /><mn>22</mn><mspace width="0.5 em" /><mrow><mtext>Weight:</mtext></mrow><mspace width="0.5 em" /><mrow><mn>1</mn><mo>.</mo><mn>0</mn></mrow></mrow><mo>]</mo><mrow><mtext>from</mtext></mrow><mspace width="0.5 em" /><mrow><mtext>the</mtext></mrow><mspace width="0.5 em" /><mrow><mtext mathvariant='sans-serif-italic'>Dark</mtext></mrow><mspace width="0.5 em" /><mrow><mtext>palette</mtext></mrow></mrow></mstyle></math>
</td></tr>
</table>
</div>




<div class="returnType">
Type: Palette
</div>



<p>The expression  <math xmlns="&mathml;" mathsize="big"><mstyle><mrow><mi>shade</mi><mo>(</mo><mi>color</mi><mo>)</mo></mrow></mstyle></math>
returns the value of a shade of  <math xmlns="&mathml;" mathsize="big"><mstyle><mi>color</mi></mstyle></math>.
</p>




<div id="spadComm7-7" class="spadComm" >
<form id="formComm7-7" action="javascript:makeRequest('7-7');" >
<input id="comm7-7" type="text" class="command" style="width: 15em;" value="shade myFavoriteColor " />
</form>
<span id="commSav7-7" class="commSav" >shade myFavoriteColor </span>
<div id="mathAns7-7" ></div>
</div>


<div class="math">
<table>
<tr><td>
<math xmlns="&mathml;" mathsize="big" display="block"><mstyle><mn>1</mn></mstyle></math>
</td></tr>
</table>
</div>




<div class="returnType">
Type: PositiveInteger
</div>



<p>The expression  <math xmlns="&mathml;" mathsize="big"><mstyle><mrow><mi>hue</mi><mo>(</mo><mi>color</mi><mo>)</mo></mrow></mstyle></math> returns its hue.
</p>




<div id="spadComm7-8" class="spadComm" >
<form id="formComm7-8" action="javascript:makeRequest('7-8');" >
<input id="comm7-8" type="text" class="command" style="width: 14em;" value="hue myFavoriteColor " />
</form>
<span id="commSav7-8" class="commSav" >hue myFavoriteColor </span>
<div id="mathAns7-8" ></div>
</div>


<div class="math">
<table>
<tr><td>
<math xmlns="&mathml;" mathsize="big" display="block"><mstyle><mrow><mrow><mtext>Hue:</mtext></mrow><mspace width="0.5 em" /><mn>22</mn><mspace width="0.5 em" /><mrow><mtext>Weight:</mtext></mrow><mspace width="0.5 em" /><mrow><mn>1</mn><mo>.</mo><mn>0</mn></mrow></mrow></mstyle></math>
</td></tr>
</table>
</div>




<div class="returnType">
Type: Color
</div>



<p>Palettes can be used in specifying colors in two-dimensional graphs.
</p>




<div class="spadgraph" style="width: 22em">
draw(x^2,x=-1..1,curveColor == dark blue())
</div>









</div>



<a name="subsec-7.1.7"/>
<div class="subsection"  id="subsec-7.1.7">
<h3 class="subsectitle">7.1.7  Two-Dimensional Control-Panel</h3>


<a name="ugGraphTwoDControl" class="label"/>


<p><span class="index">graphics:2D control-panel</span><a name="chapter-7-50"/>
Once you have created a viewport, move your mouse to the viewport and click
with your left mouse button to display a control-panel.
The panel is displayed on the side of the viewport closest to
where you clicked.  Each of the buttons which toggle on and off show the
current state of the graph.
</p>




<a name="subsubsec-7.1.7.1"/>
<div class="subsubsection"  id="subsubsec-7.1.7.1">
<h3 class="subsubsectitle">7.1.7.1  Transformations</h3>


<p><span class="index">graphics:2D control-panel:transformations</span><a name="chapter-7-51"/>
</p>


<p>Object transformations are executed from the control-panel by mouse-activated
potentiometer windows.
</p>


<p><dl>
<dt>Scale:</dt>
<dd> To scale a graph, click on a mouse button
<span class="index">graphics:2D control-panel:scale</span><a name="chapter-7-52"/>
within the <span style="font-weight: bold;"> Scale</span> window in the upper left corner of the control-panel.
The axes along which the scaling is to occur are indicated by setting the
toggles above the arrow.
With <span class="teletype">X On</span> and <span class="teletype">Y On</span> appearing, both axes are selected and scaling
is uniform.
If either is not selected, for example, if <span class="teletype">X Off</span> appears, scaling is
non-uniform.
</dd>
<dt>Translate:</dt>
<dd> To translate a graph, click the mouse in the
<span class="index">graphics:2D control-panel:translate</span><a name="chapter-7-53"/>
<span style="font-weight: bold;"> Translate</span> window in the direction you wish the graph to move.
This window is located in the upper right corner of the control-panel.
Along the top of the <span style="font-weight: bold;"> Translate</span> window are two buttons for selecting
the direction of translation.
Translation along both coordinate axes results when <span class="teletype">X On</span> and <span class="teletype">Y
On</span> appear or along one axis when one is on, for example, <span class="teletype">X On</span> and
<span class="teletype">Y Off</span> appear.
</dd>
</dl>
</p>




</div>



<a name="subsubsec-7.1.7.2"/>
<div class="subsubsection"  id="subsubsec-7.1.7.2">
<h3 class="subsubsectitle">7.1.7.2  Messages</h3>


<p><span class="index">graphics:2D control-panel:messages</span><a name="chapter-7-54"/>
</p>


<p>The window directly below the transformation potentiometer windows is
used to display system messages relating to the viewport and the control-panel.
The following format is displayed: <br />
</p>




<div class="center" style="text-align: center;">


<p>[scaleX, scaleY]  <math xmlns="&mathml;" mathsize="big"><mstyle><mo>&gt;</mo></mstyle></math>graph <math xmlns="&mathml;" mathsize="big"><mstyle><mo>&lt;</mo></mstyle></math> [translateX, translateY] <br />
</p>



</div>


<p>The two values to the left show the scale factor along the <span class="teletype">X</span> and
<span class="teletype">Y</span> coordinate axes.  The two values to the right show the distance of
translation from the center in the <span class="teletype">X</span> and <span class="teletype">Y</span> directions.  The number
in the center shows which graph in the viewport this data pertains to.
When multiple graphs exist in the same viewport,
the graph must be selected (see <span class="italic">Multiple Graphs,</span> below) in
order for its transformation data to be shown, otherwise the number
is 1.
</p>




</div>



<a name="subsubsec-7.1.7.3"/>
<div class="subsubsection"  id="subsubsec-7.1.7.3">
<h3 class="subsubsectitle">7.1.7.3  Multiple Graphs</h3>



<p><span class="index">graphics:2D control-panel:multiple graphs</span><a name="chapter-7-55"/>
The <span style="font-weight: bold;"> Graphs</span> window contains buttons that allow the placement
of two-dimensional graphs into one of nine available slots in any other
two-dimensional viewport.
In the center of the window are numeral buttons from one to nine
that show whether a graph is displayed in the viewport.
Below each number button is a button showing whether a graph
that is present is selected for application of some
transformation.
When the caret symbol is displayed, then the graph in that slot
will be manipulated.
Initially, the graph for which the viewport is created occupies
the first slot, is displayed, and is selected.
</p>



<p><dl>
<dt>Clear:</dt>
<dd>  The <span style="font-weight: bold;"> Clear</span> button deselects every viewport graph slot.
<span class="index">graphics:2D control-panel:clear</span><a name="chapter-7-56"/>
A graph slot is reselected by selecting the button below its number.
</dd>
<dt>Query:</dt>
<dd>  The <span style="font-weight: bold;"> Query</span> button is used to display the scale and
<span class="index">graphics:2D control-panel:query</span><a name="chapter-7-57"/>
translate data for the indicated graph.  When this button is selected the
message <span class="italic">Click on the graph to query</span> appears.  Select a slot
number button from the <span style="font-weight: bold;"> Graphs</span> window. The scaling factor and translation
offset of the graph are then displayed in the message window.
</dd>
<dt>Pick:</dt>
<dd>  The <span style="font-weight: bold;"> Pick</span> button is used to select a graph
<span class="index">graphics:2D control-panel:pick</span><a name="chapter-7-58"/>
to be placed or dropped into the indicated viewport.  When this button is
selected, the message <span class="italic">Click on the graph to pick</span> appears.
Click on the slot with the graph number of the desired
graph.  The graph information is held waiting for
you to execute a <span style="font-weight: bold;"> Drop</span> in some other graph.
</dd>
<dt>Drop:</dt>
<dd>  Once a graph has been picked up using the <span style="font-weight: bold;"> Pick</span> button,
<span class="index">graphics:2D control-panel:drop</span><a name="chapter-7-59"/>
the <span style="font-weight: bold;"> Drop</span> button places it into a new viewport slot.
The message <span class="italic">Click on the graph to drop</span> appears in the message
window when the <span style="font-weight: bold;"> Drop</span> button is selected.
By selecting one of the slot number buttons in the <span style="font-weight: bold;"> Graphs</span>
window, the graph currently being held is dropped into this slot
and displayed.
</dd>
</dl>
</p>




</div>



<a name="subsubsec-7.1.7.4"/>
<div class="subsubsection"  id="subsubsec-7.1.7.4">
<h3 class="subsubsectitle">7.1.7.4  Buttons</h3>


<p><span class="index">graphics:2D control-panel:buttons</span><a name="chapter-7-60"/>
</p>



<p><dl>
<dt>Axes</dt>
<dd> turns the coordinate axes on or off.
<span class="index">graphics:2D control-panel:axes</span><a name="chapter-7-61"/>
</dd>
<dt>Units</dt>
<dd> turns the units along the <span class="teletype">x</span>
and <span class="teletype">y</span> axis on or off.
<span class="index">graphics:2D control-panel:units</span><a name="chapter-7-62"/>
</dd>
<dt>Box</dt>
<dd> encloses the area of the viewport graph
in a bounding box, or removes the box if already enclosed.
<span class="index">graphics:2D control-panel:box</span><a name="chapter-7-63"/>
</dd>
<dt>Pts</dt>
<dd> turns on or off the display of points.
<span class="index">graphics:2D control-panel:points</span><a name="chapter-7-64"/>
</dd>
<dt>Lines</dt>
<dd> turns on or off the display
of lines connecting points.
<span class="index">graphics:2D control-panel:lines</span><a name="chapter-7-65"/>
</dd>
<dt>PS</dt>
<dd> writes the current viewport contents to
<span class="index">graphics:2D control-panel:ps</span><a name="chapter-7-66"/>
a file <span style="font-weight: bold;"> axiom2D.ps</span> or to a name specified in the user's <span style="font-weight: bold;">
<span class="index">graphics:.Xdefaults:PostScript file name</span><a name="chapter-7-67"/>
.Xdefaults</span> file.
<span class="index">file:.Xdefaults @<span style="font-weight: bold;"> .Xdefaults</span><a name="chapter-7-68"/></span>
The file is placed in the directory from which FriCAS or the <span style="font-weight: bold;">
viewAlone</span> program was invoked.
<span class="index">PostScript</span><a name="chapter-7-69"/>
</dd>
<dt>Reset</dt>
<dd> resets the object transformation
characteristics and attributes back to their initial states.
<span class="index">graphics:2D control-panel:reset</span><a name="chapter-7-70"/>
</dd>
<dt>Hide</dt>
<dd> makes the control-panel disappear.
<span class="index">graphics:2D control-panel:hide</span><a name="chapter-7-71"/>
</dd>
<dt>Quit</dt>
<dd> queries whether the current viewport
<span class="index">graphics:2D control-panel:quit</span><a name="chapter-7-72"/>
session should be terminated.
</dd>
</dl>
</p>




</div>




</div>



<a name="subsec-7.1.8"/>
<div class="subsection"  id="subsec-7.1.8">
<h3 class="subsectitle">7.1.8  Operations for Two-Dimensional Graphics</h3>


<a name="ugGraphTwoDops" class="label"/>


<p>Here is a summary of useful FriCAS operations for two-dimensional
graphics.
Each operation name is followed by a list of arguments.
Each argument is written as a variable informally named according
to the type of the argument (for example, <span class="italic">integer</span>).
If appropriate, a default value for an argument is given in
parentheses immediately following the name.
</p>



<p><dl>
<dt><span style="font-weight: bold;"> adaptive</span>&nbsp;<span class="funArgs">(<span class="optArg">[boolean<span class="argDef" >(true)</span>]</span>)</span></dt>
<dd>
<span class="index">adaptive plotting</span><a name="chapter-7-73"/>
sets or indicates whether graphs are plotted
<span class="index">graphics:set 2D defaults:adaptive</span><a name="chapter-7-74"/>
according to the adaptive refinement algorithm.
</dd>
<dt><span style="font-weight: bold;"> axesColorDefault</span>&nbsp;<span class="funArgs">(<span class="optArg">[color<span class="argDef" >(dark blue())</span>]</span>)</span></dt>
<dd>
sets or indicates the default color of the
<span class="index">graphics:set 2D defaults:axes color</span><a name="chapter-7-75"/>
axes in a two-dimensional graph viewport.
</dd>
<dt><span style="font-weight: bold;"> clipPointsDefault</span>&nbsp;<span class="funArgs">(<span class="optArg">[boolean<span class="argDef" >(false)</span>]</span>)</span></dt>
<dd>
sets or
indicates whether point clipping is
<span class="index">graphics:set 2D defaults:clip points</span><a name="chapter-7-76"/>
to be applied as the default for graph plots.
</dd>
<dt><span style="font-weight: bold;"> drawToScale</span>&nbsp;<span class="funArgs">(<span class="optArg">[boolean<span class="argDef" >(false)</span>]</span>)</span></dt>
<dd>
sets or
indicates whether the plot of a graph
<span class="index">graphics:set 2D defaults:to scale</span><a name="chapter-7-77"/>
is <span class="italic">to scale</span> or uses the entire viewport space as the default.
</dd>
<dt><span style="font-weight: bold;"> lineColorDefault</span>&nbsp;<span class="funArgs">(<span class="optArg">[color<span class="argDef" >(pastel yellow())</span>]</span>)</span></dt>
<dd>
sets or indicates the default color of the
<span class="index">graphics:set 2D defaults:line color</span><a name="chapter-7-78"/>
lines or curves in a two-dimensional graph viewport.
</dd>
<dt><span style="font-weight: bold;"> maxPoints</span>&nbsp;<span class="funArgs">(<span class="optArg">[integer<span class="argDef" >(500)</span>]</span>)</span></dt>
<dd>
sets or indicates
the default maximum number of
<span class="index">graphics:set 2D defaults:max points</span><a name="chapter-7-79"/>
possible points to be used when constructing a two-dimensional graph.
</dd>
<dt><span style="font-weight: bold;"> minPoints</span>&nbsp;<span class="funArgs">(<span class="optArg">[integer<span class="argDef" >(21)</span>]</span>)</span></dt>
<dd>
sets or indicates the default minimum number of
<span class="index">graphics:set 2D defaults:min points</span><a name="chapter-7-80"/>
possible points to be used when constructing a two-dimensional graph.
</dd>
<dt><span style="font-weight: bold;"> pointColorDefault</span>&nbsp;<span class="funArgs">(<span class="optArg">[color<span class="argDef" >(bright red())</span>]</span>)</span></dt>
<dd>
sets or indicates the default color of the
<span class="index">graphics:set 2D defaults:point color</span><a name="chapter-7-81"/>
points in a two-dimensional graph viewport.
</dd>
<dt><span style="font-weight: bold;"> pointSizeDefault</span>&nbsp;<span class="funArgs">(<span class="optArg">[integer<span class="argDef" >(5)</span>]</span>)</span></dt>
<dd>
sets or indicates the default size of the
<span class="index">graphics:set 2D defaults:point size</span><a name="chapter-7-82"/>
dot used to plot points in a two-dimensional graph.
</dd>
<dt><span style="font-weight: bold;"> screenResolution</span>&nbsp;<span class="funArgs">(<span class="optArg">[integer<span class="argDef" >(600)</span>]</span>)</span></dt>
<dd>
sets or indicates the default screen
<span class="index">graphics:set 2D defaults:screen resolution</span><a name="chapter-7-83"/>
resolution constant used in setting the computation limit of adaptively
<span class="index">adaptive plotting</span><a name="chapter-7-84"/>
generated curve plots.
</dd>
<dt><span style="font-weight: bold;"> unitsColorDefault</span>&nbsp;<span class="funArgs">(<span class="optArg">[color<span class="argDef" >(dim green())</span>]</span>)</span></dt>
<dd>
sets or indicates the default color of the
<span class="index">graphics:set 2D defaults:units color</span><a name="chapter-7-85"/>
unit labels in a two-dimensional graph viewport.
</dd>
<dt><span style="font-weight: bold;"> viewDefaults</span>&nbsp;<span class="funArgs">()</span></dt>
<dd>
resets the default settings for the following
<span class="index">graphics:set 2D defaults:reset viewport</span><a name="chapter-7-86"/>
attributes:  point color, line color, axes color, units color, point size,
viewport upper left-hand corner position, and the viewport size.
</dd>
<dt><span style="font-weight: bold;"> viewPosDefault</span>&nbsp;<span class="funArgs">(<span class="optArg">[list<span class="argDef" >([100,100])</span>]</span>)</span></dt>
<dd>
sets or indicates the default position of the
<span class="index">graphics:set 2D defaults:viewport position</span><a name="chapter-7-87"/>
upper left-hand corner of a two-dimensional viewport, relative to the
display root window.
The upper left-hand corner of the display is considered to be at the
(0, 0) position.
</dd>
<dt><span style="font-weight: bold;"> viewSizeDefault</span>&nbsp;<span class="funArgs">(<span class="optArg">[list<span class="argDef" >([200,200])</span>]</span>)</span></dt>
<dd>
sets or
indicates the default size in which two
<span class="index">graphics:set 2D defaults:viewport size</span><a name="chapter-7-88"/>
dimensional viewport windows are shown.
It is defined by a width and then a height.
</dd>
<dt><span style="font-weight: bold;"> viewWriteAvailable</span>&nbsp;<span class="funArgs">(<span class="optArg">[list<span class="argDef" >(["pixmap","bitmap", "postscript", "image"])</span>]</span>)</span></dt>
<dd>
indicates the possible file types
<span class="index">graphics:2D defaults:available viewport writes</span><a name="chapter-7-89"/>
that can be created with the <span class="spadfunFrom" >write</span><span class="index">write</span><a name="chapter-7-90"/><span class="index">TwoDimensionalViewport</span><a name="chapter-7-91"/> function.
</dd>
<dt><span style="font-weight: bold;"> viewWriteDefault</span>&nbsp;<span class="funArgs">(<span class="optArg">[list<span class="argDef" >([])</span>]</span>)</span></dt>
<dd>
sets or indicates the default types of files, in
<span class="index">graphics:set 2D defaults:write viewport</span><a name="chapter-7-92"/>
addition to the <span style="font-weight: bold;"> data</span> file, that are created when a
<span style="font-weight: bold;"> write</span> function is executed on a viewport.
</dd>
<dt><span style="font-weight: bold;"> units</span>&nbsp;<span class="funArgs">(viewport, integer<span class="argDef" >(1)</span>, string<span class="argDef" >("off")</span>)</span></dt>
<dd>
turns the units on or off for the graph with index <span class="italic">integer</span>.
</dd>
<dt><span style="font-weight: bold;"> axes</span>&nbsp;<span class="funArgs">(viewport, integer<span class="argDef" >(1)</span>, string<span class="argDef" >("on")</span>)</span></dt>
<dd>
turns the axes on
<span class="index">graphics:2D commands:axes</span><a name="chapter-7-93"/>
or off for the graph with index <span class="italic">integer</span>.
</dd>
<dt><span style="font-weight: bold;"> close</span>&nbsp;<span class="funArgs">(viewport)</span></dt>
<dd>
closes <span class="italic">viewport</span>.
<span class="index">graphics:2D commands:close</span><a name="chapter-7-94"/>
</dd>
<dt><span style="font-weight: bold;"> connect</span>&nbsp;<span class="funArgs">(viewport, integer<span class="argDef" >(1)</span>, string<span class="argDef" >("on")</span>)</span></dt>
<dd>
declares whether lines
<span class="index">graphics:2D commands:connect</span><a name="chapter-7-95"/>
connecting the points are displayed or not.
</dd>
<dt><span style="font-weight: bold;"> controlPanel</span>&nbsp;<span class="funArgs">(viewport, string<span class="argDef" >("off")</span>)</span></dt>
<dd>
declares
whether the two-dimensional control-panel is automatically displayed
or not.
</dd>
<dt><span style="font-weight: bold;"> graphs</span>&nbsp;<span class="funArgs">(viewport)</span></dt>
<dd>
returns a list
<span class="index">graphics:2D commands:graphs</span><a name="chapter-7-96"/>
describing the state of each graph.
If the graph state is not being used this is shown by <span class="teletype">"undefined"</span>,
otherwise a description of the graph's contents is shown.
</dd>
<dt><span style="font-weight: bold;"> graphStates</span>&nbsp;<span class="funArgs">(viewport)</span></dt>
<dd>
displays
<span class="index">graphics:2D commands:state of graphs</span><a name="chapter-7-97"/>
a list of all the graph states available for <span class="italic">viewport</span>, giving the
values for every property.
</dd>
<dt><span style="font-weight: bold;"> key</span>&nbsp;<span class="funArgs">(viewport)</span></dt>
<dd>
returns the process
<span class="index">graphics:2D commands:key</span><a name="chapter-7-98"/>
ID number for <span class="italic">viewport</span>.
</dd>
<dt><span style="font-weight: bold;"> move</span>&nbsp;<span class="funArgs">(viewport,
 <math xmlns="&mathml;" mathsize="big"><mstyle><mrow><msub><mi>integer</mi><mi>x</mi></msub></mrow></mstyle></math>(viewPosDefault),
 <math xmlns="&mathml;" mathsize="big"><mstyle><mrow><msub><mi>integer</mi><mi>y</mi></msub></mrow></mstyle></math>(viewPosDefault))</span></dt>
<dd>
moves <span class="italic">viewport</span> on the screen so that the
<span class="index">graphics:2D commands:move</span><a name="chapter-7-99"/>
upper left-hand corner of <span class="italic">viewport</span> is at the position <span class="italic">(x,y)</span>.
</dd>
<dt><span style="font-weight: bold;"> options</span>&nbsp;<span class="funArgs">(viewport)</span></dt>
<dd>
returns a list
<span class="index">graphics:2D commands:options</span><a name="chapter-7-100"/>
of all the <span class="teletype">DrawOption</span>s used by <span class="italic">viewport</span>.
</dd>
<dt><span style="font-weight: bold;"> points</span>&nbsp;<span class="funArgs">(viewport, integer<span class="argDef" >(1)</span>, string<span class="argDef" >("on")</span>)</span></dt>
<dd>
specifies whether the graph points for graph <span class="italic">integer</span> are
<span class="index">graphics:2D commands:points</span><a name="chapter-7-101"/>
to be displayed or not.
</dd>
<dt><span style="font-weight: bold;"> region</span>&nbsp;<span class="funArgs">(viewport, integer<span class="argDef" >(1)</span>, string<span class="argDef" >("off")</span>)</span></dt>
<dd>
declares whether graph <span class="italic">integer</span> is or is not to be displayed
with a bounding rectangle.
</dd>
<dt><span style="font-weight: bold;"> reset</span>&nbsp;<span class="funArgs">(viewport)</span></dt>
<dd>
resets all the properties of <span class="italic">viewport</span>.
</dd>
<dt><span style="font-weight: bold;"> resize</span>&nbsp;<span class="funArgs">(viewport,
 <math xmlns="&mathml;" mathsize="big"><mstyle><mrow><msub><mi>integer</mi><mi>width</mi></msub></mrow></mstyle></math>, <math xmlns="&mathml;" mathsize="big"><mstyle><mrow><msub><mi>integer</mi><mi>height</mi></msub></mrow></mstyle></math>)</span></dt>
<dd>
<span class="index">graphics:2D commands:resize</span><a name="chapter-7-102"/>
resizes <span class="italic">viewport</span> with a new <span class="italic">width</span> and <span class="italic">height</span>.
</dd>
<dt><span style="font-weight: bold;"> scale</span>&nbsp;<span class="funArgs">(viewport,  <math xmlns="&mathml;" mathsize="big"><mstyle><mrow><msub><mi>integer</mi><mi>n</mi></msub></mrow></mstyle></math><span class="argDef" >(1)</span>,
 <math xmlns="&mathml;" mathsize="big"><mstyle><mrow><msub><mi>integer</mi><mi>x</mi></msub></mrow></mstyle></math><span class="argDef" >(0.9)</span>,  <math xmlns="&mathml;" mathsize="big"><mstyle><mrow><msub><mi>integer</mi><mi>y</mi></msub></mrow></mstyle></math><span class="argDef" >(0.9)</span>)</span></dt>
<dd>
scales values for the
<span class="index">graphics:2D commands:scale</span><a name="chapter-7-103"/>
<span class="italic">x</span> and <span class="italic">y</span> coordinates of graph <span class="italic">n</span>.
</dd>
<dt><span style="font-weight: bold;"> show</span>&nbsp;<span class="funArgs">(viewport,  <math xmlns="&mathml;" mathsize="big"><mstyle><mrow><msub><mi>integer</mi><mi>n</mi></msub></mrow></mstyle></math><span class="argDef" >(1)</span>,
string<span class="argDef" >("on")</span>)</span></dt>
<dd>
indicates if graph <span class="italic">n</span> is shown or not.
</dd>
<dt><span style="font-weight: bold;"> title</span>&nbsp;<span class="funArgs">(viewport, string<span class="argDef" >("FriCAS 2D")</span>)</span></dt>
<dd>
designates the title for <span class="italic">viewport</span>.
</dd>
<dt><span style="font-weight: bold;"> translate</span>&nbsp;<span class="funArgs">(viewport,
 <math xmlns="&mathml;" mathsize="big"><mstyle><mrow><msub><mi>integer</mi><mi>n</mi></msub></mrow></mstyle></math><span class="argDef" >(1)</span>,
 <math xmlns="&mathml;" mathsize="big"><mstyle><mrow><msub><mi>float</mi><mi>x</mi></msub></mrow></mstyle></math><span class="argDef" >(0.0)</span>,  <math xmlns="&mathml;" mathsize="big"><mstyle><mrow><msub><mi>float</mi><mi>y</mi></msub></mrow></mstyle></math><span class="argDef" >(0.0)</span>)</span></dt>
<dd>
<span class="index">graphics:2D commands:translate</span><a name="chapter-7-104"/>
causes graph <span class="italic">n</span> to be moved <span class="italic">x</span> and <span class="italic">y</span> units in the respective directions.
</dd>
<dt><span style="font-weight: bold;"> write</span>&nbsp;<span class="funArgs">(viewport,  <math xmlns="&mathml;" mathsize="big"><mstyle><mrow><msub><mi>string</mi><mi>directory</mi></msub></mrow></mstyle></math>,
<span class="optArg">[strings]</span>)</span></dt>
<dd>
if no third argument is given, writes the <span style="font-weight: bold;"> data</span> file onto the directory
with extension <span style="font-weight: bold;"> data</span>.
The third argument can be a single string or a list of strings with some or
all the entries <span class="teletype">"pixmap"</span>, <span class="teletype">"bitmap"</span>, <span class="teletype">"postscript"</span>, and
<span class="teletype">"image"</span>.
</dd>
</dl>
</p>




</div>



<a name="subsec-7.1.9"/>
<div class="subsection"  id="subsec-7.1.9">
<h3 class="subsectitle">7.1.9  Addendum: Building Two-Dimensional Graphs</h3>


<a name="ugGraphTwoDbuild" class="label"/>


<p>In this section we demonstrate how to create two-dimensional graphs from
lists of points and give an example showing how to read the lists
of points from a file.
</p>



<a name="subsubsec-7.1.9.1"/>
<div class="subsubsection"  id="subsubsec-7.1.9.1">
<h3 class="subsubsectitle">7.1.9.1  Creating a Two-Dimensional Viewport from a List of Points</h3>



<p>FriCAS creates lists of points in a two-dimensional viewport by utilizing
the <span class="teletype">GraphImage</span> and <span class="teletype">TwoDimensionalViewport</span> domains.
In this example, the <span class="spadfunFrom" >makeGraphImage</span><span class="index">makeGraphImage</span><a name="chapter-7-105"/><span class="index">GraphImage</span><a name="chapter-7-106"/>
function takes a list of lists of points parameter, a list of colors for
each point in the graph, a list of colors for each line in the graph, and
a list of sizes for each point in the graph.
</p>



<p>The following expressions create a list of lists of points which will be read
by FriCAS and made into a two-dimensional viewport.
</p>




<div id="spadComm7-9" class="spadComm" >
<form id="formComm7-9" action="javascript:makeRequest('7-9');" >
<input id="comm7-9" type="text" class="command" style="width: 22em;" value="p1 := point [1,1]$(Point DFLOAT) " />
</form>
<span id="commSav7-9" class="commSav" >p1 := point [1,1]$(Point DFLOAT) </span>
<div id="mathAns7-9" ></div>
</div>


<div class="math">
<table>
<tr><td>
<math xmlns="&mathml;" mathsize="big" display="block"><mstyle><mrow><mo>[</mo><mrow><mn>1</mn><mo>.</mo><mn>0</mn></mrow><mo>,</mo><mrow><mn>1</mn><mo>.</mo><mn>0</mn></mrow><mo>]</mo></mrow></mstyle></math>
</td></tr>
</table>
</div>




<div class="returnType">
Type: Point DoubleFloat
</div>





<div id="spadComm7-10" class="spadComm" >
<form id="formComm7-10" action="javascript:makeRequest('7-10');" >
<input id="comm7-10" type="text" class="command" style="width: 22em;" value="p2 := point [0,1]$(Point DFLOAT) " />
</form>
<span id="commSav7-10" class="commSav" >p2 := point [0,1]$(Point DFLOAT) </span>
<div id="mathAns7-10" ></div>
</div>


<div class="math">
<table>
<tr><td>
<math xmlns="&mathml;" mathsize="big" display="block"><mstyle><mrow><mo>[</mo><mrow><mn>0</mn><mo>.</mo><mn>0</mn></mrow><mo>,</mo><mrow><mn>1</mn><mo>.</mo><mn>0</mn></mrow><mo>]</mo></mrow></mstyle></math>
</td></tr>
</table>
</div>




<div class="returnType">
Type: Point DoubleFloat
</div>





<div id="spadComm7-11" class="spadComm" >
<form id="formComm7-11" action="javascript:makeRequest('7-11');" >
<input id="comm7-11" type="text" class="command" style="width: 22em;" value="p3 := point [0,0]$(Point DFLOAT) " />
</form>
<span id="commSav7-11" class="commSav" >p3 := point [0,0]$(Point DFLOAT) </span>
<div id="mathAns7-11" ></div>
</div>


<div class="math">
<table>
<tr><td>
<math xmlns="&mathml;" mathsize="big" display="block"><mstyle><mrow><mo>[</mo><mrow><mn>0</mn><mo>.</mo><mn>0</mn></mrow><mo>,</mo><mrow><mn>0</mn><mo>.</mo><mn>0</mn></mrow><mo>]</mo></mrow></mstyle></math>
</td></tr>
</table>
</div>




<div class="returnType">
Type: Point DoubleFloat
</div>





<div id="spadComm7-12" class="spadComm" >
<form id="formComm7-12" action="javascript:makeRequest('7-12');" >
<input id="comm7-12" type="text" class="command" style="width: 22em;" value="p4 := point [1,0]$(Point DFLOAT) " />
</form>
<span id="commSav7-12" class="commSav" >p4 := point [1,0]$(Point DFLOAT) </span>
<div id="mathAns7-12" ></div>
</div>


<div class="math">
<table>
<tr><td>
<math xmlns="&mathml;" mathsize="big" display="block"><mstyle><mrow><mo>[</mo><mrow><mn>1</mn><mo>.</mo><mn>0</mn></mrow><mo>,</mo><mrow><mn>0</mn><mo>.</mo><mn>0</mn></mrow><mo>]</mo></mrow></mstyle></math>
</td></tr>
</table>
</div>




<div class="returnType">
Type: Point DoubleFloat
</div>





<div id="spadComm7-13" class="spadComm" >
<form id="formComm7-13" action="javascript:makeRequest('7-13');" >
<input id="comm7-13" type="text" class="command" style="width: 23em;" value="p5 := point [1,.5]$(Point DFLOAT) " />
</form>
<span id="commSav7-13" class="commSav" >p5 := point [1,.5]$(Point DFLOAT) </span>
<div id="mathAns7-13" ></div>
</div>


<div class="math">
<table>
<tr><td>
<math xmlns="&mathml;" mathsize="big" display="block"><mstyle><mrow><mo>[</mo><mrow><mn>1</mn><mo>.</mo><mn>0</mn></mrow><mo>,</mo><mrow><mn>0</mn><mo>.</mo><mn>5</mn></mrow><mo>]</mo></mrow></mstyle></math>
</td></tr>
</table>
</div>




<div class="returnType">
Type: Point DoubleFloat
</div>





<div id="spadComm7-14" class="spadComm" >
<form id="formComm7-14" action="javascript:makeRequest('7-14');" >
<input id="comm7-14" type="text" class="command" style="width: 23em;" value="p6 := point [.5,0]$(Point DFLOAT) " />
</form>
<span id="commSav7-14" class="commSav" >p6 := point [.5,0]$(Point DFLOAT) </span>
<div id="mathAns7-14" ></div>
</div>


<div class="math">
<table>
<tr><td>
<math xmlns="&mathml;" mathsize="big" display="block"><mstyle><mrow><mo>[</mo><mrow><mn>0</mn><mo>.</mo><mn>5</mn></mrow><mo>,</mo><mrow><mn>0</mn><mo>.</mo><mn>0</mn></mrow><mo>]</mo></mrow></mstyle></math>
</td></tr>
</table>
</div>




<div class="returnType">
Type: Point DoubleFloat
</div>





<div id="spadComm7-15" class="spadComm" >
<form id="formComm7-15" action="javascript:makeRequest('7-15');" >
<input id="comm7-15" type="text" class="command" style="width: 24em;" value="p7 := point [0,0.5]$(Point DFLOAT) " />
</form>
<span id="commSav7-15" class="commSav" >p7 := point [0,0.5]$(Point DFLOAT) </span>
<div id="mathAns7-15" ></div>
</div>


<div class="math">
<table>
<tr><td>
<math xmlns="&mathml;" mathsize="big" display="block"><mstyle><mrow><mo>[</mo><mrow><mn>0</mn><mo>.</mo><mn>0</mn></mrow><mo>,</mo><mrow><mn>0</mn><mo>.</mo><mn>5</mn></mrow><mo>]</mo></mrow></mstyle></math>
</td></tr>
</table>
</div>




<div class="returnType">
Type: Point DoubleFloat
</div>





<div id="spadComm7-16" class="spadComm" >
<form id="formComm7-16" action="javascript:makeRequest('7-16');" >
<input id="comm7-16" type="text" class="command" style="width: 23em;" value="p8 := point [.5,1]$(Point DFLOAT) " />
</form>
<span id="commSav7-16" class="commSav" >p8 := point [.5,1]$(Point DFLOAT) </span>
<div id="mathAns7-16" ></div>
</div>


<div class="math">
<table>
<tr><td>
<math xmlns="&mathml;" mathsize="big" display="block"><mstyle><mrow><mo>[</mo><mrow><mn>0</mn><mo>.</mo><mn>5</mn></mrow><mo>,</mo><mrow><mn>1</mn><mo>.</mo><mn>0</mn></mrow><mo>]</mo></mrow></mstyle></math>
</td></tr>
</table>
</div>




<div class="returnType">
Type: Point DoubleFloat
</div>





<div id="spadComm7-17" class="spadComm" >
<form id="formComm7-17" action="javascript:makeRequest('7-17');" >
<input id="comm7-17" type="text" class="command" style="width: 25em;" value="p9 := point [.25,.25]$(Point DFLOAT) " />
</form>
<span id="commSav7-17" class="commSav" >p9 := point [.25,.25]$(Point DFLOAT) </span>
<div id="mathAns7-17" ></div>
</div>


<div class="math">
<table>
<tr><td>
<math xmlns="&mathml;" mathsize="big" display="block"><mstyle><mrow><mo>[</mo><mrow><mn>0</mn><mo>.</mo><mn>25</mn></mrow><mo>,</mo><mrow><mn>0</mn><mo>.</mo><mn>25</mn></mrow><mo>]</mo></mrow></mstyle></math>
</td></tr>
</table>
</div>




<div class="returnType">
Type: Point DoubleFloat
</div>





<div id="spadComm7-18" class="spadComm" >
<form id="formComm7-18" action="javascript:makeRequest('7-18');" >
<input id="comm7-18" type="text" class="command" style="width: 26em;" value="p10 := point [.25,.75]$(Point DFLOAT) " />
</form>
<span id="commSav7-18" class="commSav" >p10 := point [.25,.75]$(Point DFLOAT) </span>
<div id="mathAns7-18" ></div>
</div>


<div class="math">
<table>
<tr><td>
<math xmlns="&mathml;" mathsize="big" display="block"><mstyle><mrow><mo>[</mo><mrow><mn>0</mn><mo>.</mo><mn>25</mn></mrow><mo>,</mo><mrow><mn>0</mn><mo>.</mo><mn>75</mn></mrow><mo>]</mo></mrow></mstyle></math>
</td></tr>
</table>
</div>




<div class="returnType">
Type: Point DoubleFloat
</div>





<div id="spadComm7-19" class="spadComm" >
<form id="formComm7-19" action="javascript:makeRequest('7-19');" >
<input id="comm7-19" type="text" class="command" style="width: 26em;" value="p11 := point [.75,.75]$(Point DFLOAT) " />
</form>
<span id="commSav7-19" class="commSav" >p11 := point [.75,.75]$(Point DFLOAT) </span>
<div id="mathAns7-19" ></div>
</div>


<div class="math">
<table>
<tr><td>
<math xmlns="&mathml;" mathsize="big" display="block"><mstyle><mrow><mo>[</mo><mrow><mn>0</mn><mo>.</mo><mn>75</mn></mrow><mo>,</mo><mrow><mn>0</mn><mo>.</mo><mn>75</mn></mrow><mo>]</mo></mrow></mstyle></math>
</td></tr>
</table>
</div>




<div class="returnType">
Type: Point DoubleFloat
</div>





<div id="spadComm7-20" class="spadComm" >
<form id="formComm7-20" action="javascript:makeRequest('7-20');" >
<input id="comm7-20" type="text" class="command" style="width: 26em;" value="p12 := point [.75,.25]$(Point DFLOAT) " />
</form>
<span id="commSav7-20" class="commSav" >p12 := point [.75,.25]$(Point DFLOAT) </span>
<div id="mathAns7-20" ></div>
</div>


<div class="math">
<table>
<tr><td>
<math xmlns="&mathml;" mathsize="big" display="block"><mstyle><mrow><mo>[</mo><mrow><mn>0</mn><mo>.</mo><mn>75</mn></mrow><mo>,</mo><mrow><mn>0</mn><mo>.</mo><mn>25</mn></mrow><mo>]</mo></mrow></mstyle></math>
</td></tr>
</table>
</div>




<div class="returnType">
Type: Point DoubleFloat
</div>



<p>Finally, here is the list.
</p>




<div id="spadComm7-21" class="spadComm" >
<form id="formComm7-21" action="javascript:makeRequest('7-21');" >
<input id="comm7-21" type="text" class="command" style="width: 84em;" value="llp := [ [p1,p2], [p2,p3], [p3,p4], [p4,p1], [p5,p6], [p6,p7], [p7,p8], [p8,p5], [p9,p10], [p10,p11], [p11,p12], [p12,p9] ]  " />
</form>
<span id="commSav7-21" class="commSav" >llp := [ [p1,p2], [p2,p3], [p3,p4], [p4,p1], [p5,p6], [p6,p7], [p7,p8], [p8,p5], [p9,p10], [p10,p11], [p11,p12], [p12,p9] ]  </span>
<div id="mathAns7-21" ></div>
</div>


<div class="math">
<table>
<tr><td>
<math xmlns="&mathml;" mathsize="big" display="block"><mstyle><mrow><mo>[</mo><mrow><mo>[</mo><mrow><mo>[</mo><mrow><mn>1</mn><mo>.</mo><mn>0</mn></mrow><mo>,</mo><mrow><mn>1</mn><mo>.</mo><mn>0</mn></mrow><mo>]</mo></mrow><mo>,</mo><mrow><mo>[</mo><mrow><mn>0</mn><mo>.</mo><mn>0</mn></mrow><mo>,</mo><mrow><mn>1</mn><mo>.</mo><mn>0</mn></mrow><mo>]</mo></mrow><mo>]</mo></mrow><mo>,</mo><mrow><mo>[</mo><mrow><mo>[</mo><mrow><mn>0</mn><mo>.</mo><mn>0</mn></mrow><mo>,</mo><mrow><mn>1</mn><mo>.</mo><mn>0</mn></mrow><mo>]</mo></mrow><mo>,</mo><mrow><mo>[</mo><mrow><mn>0</mn><mo>.</mo><mn>0</mn></mrow><mo>,</mo><mrow><mn>0</mn><mo>.</mo><mn>0</mn></mrow><mo>]</mo></mrow><mo>]</mo></mrow><mo>,</mo><mrow><mo>[</mo><mrow><mo>[</mo><mrow><mn>0</mn><mo>.</mo><mn>0</mn></mrow><mo>,</mo><mrow><mn>0</mn><mo>.</mo><mn>0</mn></mrow><mo>]</mo></mrow><mo>,</mo><mrow><mo>[</mo><mrow><mn>1</mn><mo>.</mo><mn>0</mn></mrow><mo>,</mo><mrow><mn>0</mn><mo>.</mo><mn>0</mn></mrow><mo>]</mo></mrow><mo>]</mo></mrow><mo>,</mo><mrow><mo>[</mo><mrow><mo>[</mo><mrow><mn>1</mn><mo>.</mo><mn>0</mn></mrow><mo>,</mo><mrow><mn>0</mn><mo>.</mo><mn>0</mn></mrow><mo>]</mo></mrow><mo>,</mo><mrow><mo>[</mo><mrow><mn>1</mn><mo>.</mo><mn>0</mn></mrow><mo>,</mo><mrow><mn>1</mn><mo>.</mo><mn>0</mn></mrow><mo>]</mo></mrow><mo>]</mo></mrow><mo>,</mo><mrow><mo>[</mo><mrow><mo>[</mo><mrow><mn>1</mn><mo>.</mo><mn>0</mn></mrow><mo>,</mo><mrow><mn>0</mn><mo>.</mo><mn>5</mn></mrow><mo>]</mo></mrow><mo>,</mo><mrow><mo>[</mo><mrow><mn>0</mn><mo>.</mo><mn>5</mn></mrow><mo>,</mo><mrow><mn>0</mn><mo>.</mo><mn>0</mn></mrow><mo>]</mo></mrow><mo>]</mo></mrow><mo>,</mo><mrow><mo>[</mo><mrow><mo>[</mo><mrow><mn>0</mn><mo>.</mo><mn>5</mn></mrow><mo>,</mo><mrow><mn>0</mn><mo>.</mo><mn>0</mn></mrow><mo>]</mo></mrow><mo>,</mo><mrow><mo>[</mo><mrow><mn>0</mn><mo>.</mo><mn>0</mn></mrow><mo>,</mo><mrow><mn>0</mn><mo>.</mo><mn>5</mn></mrow><mo>]</mo></mrow><mo>]</mo></mrow><mo>,</mo><mrow><mo>[</mo><mrow><mo>[</mo><mrow><mn>0</mn><mo>.</mo><mn>0</mn></mrow><mo>,</mo><mrow><mn>0</mn><mo>.</mo><mn>5</mn></mrow><mo>]</mo></mrow><mo>,</mo><mrow><mo>[</mo><mrow><mn>0</mn><mo>.</mo><mn>5</mn></mrow><mo>,</mo><mrow><mn>1</mn><mo>.</mo><mn>0</mn></mrow><mo>]</mo></mrow><mo>]</mo></mrow><mo>,</mo><mrow><mo>[</mo><mrow><mo>[</mo><mrow><mn>0</mn><mo>.</mo><mn>5</mn></mrow><mo>,</mo><mrow><mn>1</mn><mo>.</mo><mn>0</mn></mrow><mo>]</mo></mrow><mo>,</mo><mrow><mo>[</mo><mrow><mn>1</mn><mo>.</mo><mn>0</mn></mrow><mo>,</mo><mrow><mn>0</mn><mo>.</mo><mn>5</mn></mrow><mo>]</mo></mrow><mo>]</mo></mrow><mo>,</mo><mrow><mo>[</mo><mrow><mo>[</mo><mrow><mn>0</mn><mo>.</mo><mn>25</mn></mrow><mo>,</mo><mrow><mn>0</mn><mo>.</mo><mn>25</mn></mrow><mo>]</mo></mrow><mo>,</mo><mrow><mo>[</mo><mrow><mn>0</mn><mo>.</mo><mn>25</mn></mrow><mo>,</mo><mrow><mn>0</mn><mo>.</mo><mn>75</mn></mrow><mo>]</mo></mrow><mo>]</mo></mrow><mo>,</mo><mrow><mo>[</mo><mrow><mo>[</mo><mrow><mn>0</mn><mo>.</mo><mn>25</mn></mrow><mo>,</mo><mrow><mn>0</mn><mo>.</mo><mn>75</mn></mrow><mo>]</mo></mrow><mo>,</mo><mrow><mo>[</mo><mrow><mn>0</mn><mo>.</mo><mn>75</mn></mrow><mo>,</mo><mrow><mn>0</mn><mo>.</mo><mn>75</mn></mrow><mo>]</mo></mrow><mo>]</mo></mrow><mo>,</mo><mrow><mo>[</mo><mrow><mo>[</mo><mrow><mn>0</mn><mo>.</mo><mn>75</mn></mrow><mo>,</mo><mrow><mn>0</mn><mo>.</mo><mn>75</mn></mrow><mo>]</mo></mrow><mo>,</mo><mrow><mo>[</mo><mrow><mn>0</mn><mo>.</mo><mn>75</mn></mrow><mo>,</mo><mrow><mn>0</mn><mo>.</mo><mn>25</mn></mrow><mo>]</mo></mrow><mo>]</mo></mrow><mo>,</mo><mrow><mo>[</mo><mrow><mo>[</mo><mrow><mn>0</mn><mo>.</mo><mn>75</mn></mrow><mo>,</mo><mrow><mn>0</mn><mo>.</mo><mn>25</mn></mrow><mo>]</mo></mrow><mo>,</mo><mrow><mo>[</mo><mrow><mn>0</mn><mo>.</mo><mn>25</mn></mrow><mo>,</mo><mrow><mn>0</mn><mo>.</mo><mn>25</mn></mrow><mo>]</mo></mrow><mo>]</mo></mrow><mo>]</mo></mrow></mstyle></math>
</td></tr>
</table>
</div>




<div class="returnType">
Type: List List Point DoubleFloat
</div>



<p>Now we set the point sizes for all components of the graph.
</p>




<div id="spadComm7-22" class="spadComm" >
<form id="formComm7-22" action="javascript:makeRequest('7-22');" >
<input id="comm7-22" type="text" class="command" style="width: 19em;" value="size1 := 6::PositiveInteger " />
</form>
<span id="commSav7-22" class="commSav" >size1 := 6::PositiveInteger </span>
<div id="mathAns7-22" ></div>
</div>


<div class="math">
<table>
<tr><td>
<math xmlns="&mathml;" mathsize="big" display="block"><mstyle><mn>6</mn></mstyle></math>
</td></tr>
</table>
</div>




<div class="returnType">
Type: PositiveInteger
</div>





<div id="spadComm7-23" class="spadComm" >
<form id="formComm7-23" action="javascript:makeRequest('7-23');" >
<input id="comm7-23" type="text" class="command" style="width: 19em;" value="size2 := 8::PositiveInteger " />
</form>
<span id="commSav7-23" class="commSav" >size2 := 8::PositiveInteger </span>
<div id="mathAns7-23" ></div>
</div>


<div class="math">
<table>
<tr><td>
<math xmlns="&mathml;" mathsize="big" display="block"><mstyle><mn>8</mn></mstyle></math>
</td></tr>
</table>
</div>




<div class="returnType">
Type: PositiveInteger
</div>





<div id="spadComm7-24" class="spadComm" >
<form id="formComm7-24" action="javascript:makeRequest('7-24');" >
<input id="comm7-24" type="text" class="command" style="width: 20em;" value="size3 := 10::PositiveInteger " />
</form>
<span id="commSav7-24" class="commSav" >size3 := 10::PositiveInteger </span>
<div id="mathAns7-24" ></div>
</div>





<div id="spadComm7-25" class="spadComm" >
<form id="formComm7-25" action="javascript:makeRequest('7-25');" >
<input id="comm7-25" type="text" class="command" style="width: 64em;" value="lsize := [size1, size1, size1, size1, size2, size2, size2, size2, size3, size3, size3, size3]  " />
</form>
<span id="commSav7-25" class="commSav" >lsize := [size1, size1, size1, size1, size2, size2, size2, size2, size3, size3, size3, size3]  </span>
<div id="mathAns7-25" ></div>
</div>


<div class="math">
<table>
<tr><td>
<math xmlns="&mathml;" mathsize="big" display="block"><mstyle><mrow><mo>[</mo><mn>6</mn><mo>,</mo><mn>6</mn><mo>,</mo><mn>6</mn><mo>,</mo><mn>6</mn><mo>,</mo><mn>8</mn><mo>,</mo><mn>8</mn><mo>,</mo><mn>8</mn><mo>,</mo><mn>8</mn><mo>,</mo><mi>size3</mi><mo>,</mo><mi>size3</mi><mo>,</mo><mi>size3</mi><mo>,</mo><mi>size3</mi><mo>]</mo></mrow></mstyle></math>
</td></tr>
</table>
</div>




<div class="returnType">
Type: List Polynomial Integer
</div>



<p>Here are the colors for the points.
</p>




<div id="spadComm7-26" class="spadComm" >
<form id="formComm7-26" action="javascript:makeRequest('7-26');" >
<input id="comm7-26" type="text" class="command" style="width: 14em;" value="pc1 := pastel red() " />
</form>
<span id="commSav7-26" class="commSav" >pc1 := pastel red() </span>
<div id="mathAns7-26" ></div>
</div>


<div class="math">
<table>
<tr><td>
<math xmlns="&mathml;" mathsize="big" display="block"><mstyle><mrow><mo>[</mo><mrow><mtext><mrow><mtext>Hue:</mtext></mrow></mtext><mn>1</mn><mtext><mrow><mtext>Weight:</mtext></mrow></mtext><mrow><mn>1</mn><mo>.</mo><mn>0</mn></mrow></mrow><mtext><mrow><mtext>]fromthe</mtext></mrow></mtext><mi>Pastel</mi><mtext><mrow><mtext>palette</mtext></mrow></mtext></mrow></mstyle></math>
</td></tr>
</table>
</div>




<div class="returnType">
Type: Palette
</div>





<div id="spadComm7-27" class="spadComm" >
<form id="formComm7-27" action="javascript:makeRequest('7-27');" >
<input id="comm7-27" type="text" class="command" style="width: 13em;" value="pc2 := dim green() " />
</form>
<span id="commSav7-27" class="commSav" >pc2 := dim green() </span>
<div id="mathAns7-27" ></div>
</div>


<div class="math">
<table>
<tr><td>
<math xmlns="&mathml;" mathsize="big" display="block"><mstyle><mrow><mo>[</mo><mrow><mtext><mrow><mtext>Hue:</mtext></mrow></mtext><mn>14</mn><mtext><mrow><mtext>Weight:</mtext></mrow></mtext><mrow><mn>1</mn><mo>.</mo><mn>0</mn></mrow></mrow><mtext><mrow><mtext>]fromthe</mtext></mrow></mtext><mi>Dim</mi><mtext><mrow><mtext>palette</mtext></mrow></mtext></mrow></mstyle></math>
</td></tr>
</table>
</div>




<div class="returnType">
Type: Palette
</div>





<div id="spadComm7-28" class="spadComm" >
<form id="formComm7-28" action="javascript:makeRequest('7-28');" >
<input id="comm7-28" type="text" class="command" style="width: 16em;" value="pc3 := pastel yellow() " />
</form>
<span id="commSav7-28" class="commSav" >pc3 := pastel yellow() </span>
<div id="mathAns7-28" ></div>
</div>


<div class="math">
<table>
<tr><td>
<math xmlns="&mathml;" mathsize="big" display="block"><mstyle><mrow><mo>[</mo><mrow><mtext><mrow><mtext>Hue:</mtext></mrow></mtext><mn>11</mn><mtext><mrow><mtext>Weight:</mtext></mrow></mtext><mrow><mn>1</mn><mo>.</mo><mn>0</mn></mrow></mrow><mtext><mrow><mtext>]fromthe</mtext></mrow></mtext><mi>Pastel</mi><mtext><mrow><mtext>palette</mtext></mrow></mtext></mrow></mstyle></math>
</td></tr>
</table>
</div>




<div class="returnType">
Type: Palette
</div>





<div id="spadComm7-29" class="spadComm" >
<form id="formComm7-29" action="javascript:makeRequest('7-29');" >
<input id="comm7-29" type="text" class="command" style="width: 46em;" value="lpc := [pc1, pc1, pc1, pc1, pc2, pc2, pc2, pc2, pc3, pc3, pc3, pc3]  " />
</form>
<span id="commSav7-29" class="commSav" >lpc := [pc1, pc1, pc1, pc1, pc2, pc2, pc2, pc2, pc3, pc3, pc3, pc3]  </span>
<div id="mathAns7-29" ></div>
</div>


<div class="math">
<table>
<tr><td>
<math xmlns="&mathml;" mathsize="big" display="block"><mstyle><mrow><mo>[</mo><mrow><mo>[</mo><mrow><mtext><mrow><mtext>Hue:</mtext></mrow></mtext><mn>1</mn><mtext><mrow><mtext>Weight:</mtext></mrow></mtext><mrow><mn>1</mn><mo>.</mo><mn>0</mn></mrow></mrow><mtext><mrow><mtext>]fromthe</mtext></mrow></mtext><mi>Pastel</mi><mtext><mrow><mtext>palette</mtext></mrow></mtext></mrow><mo>,</mo><mrow><mo>[</mo><mrow><mtext><mrow><mtext>Hue:</mtext></mrow></mtext><mn>1</mn><mtext><mrow><mtext>Weight:</mtext></mrow></mtext><mrow><mn>1</mn><mo>.</mo><mn>0</mn></mrow></mrow><mtext><mrow><mtext>]fromthe</mtext></mrow></mtext><mi>Pastel</mi><mtext><mrow><mtext>palette</mtext></mrow></mtext></mrow><mo>,</mo><mrow><mo>[</mo><mrow><mtext><mrow><mtext>Hue:</mtext></mrow></mtext><mn>1</mn><mtext><mrow><mtext>Weight:</mtext></mrow></mtext><mrow><mn>1</mn><mo>.</mo><mn>0</mn></mrow></mrow><mtext><mrow><mtext>]fromthe</mtext></mrow></mtext><mi>Pastel</mi><mtext><mrow><mtext>palette</mtext></mrow></mtext></mrow><mo>,</mo><mrow><mo>[</mo><mrow><mtext><mrow><mtext>Hue:</mtext></mrow></mtext><mn>1</mn><mtext><mrow><mtext>Weight:</mtext></mrow></mtext><mrow><mn>1</mn><mo>.</mo><mn>0</mn></mrow></mrow><mtext><mrow><mtext>]fromthe</mtext></mrow></mtext><mi>Pastel</mi><mtext><mrow><mtext>palette</mtext></mrow></mtext></mrow><mo>,</mo><mrow><mo>[</mo><mrow><mtext><mrow><mtext>Hue:</mtext></mrow></mtext><mn>14</mn><mtext><mrow><mtext>Weight:</mtext></mrow></mtext><mrow><mn>1</mn><mo>.</mo><mn>0</mn></mrow></mrow><mtext><mrow><mtext>]fromthe</mtext></mrow></mtext><mi>Dim</mi><mtext><mrow><mtext>palette</mtext></mrow></mtext></mrow><mo>,</mo><mrow><mo>[</mo><mrow><mtext><mrow><mtext>Hue:</mtext></mrow></mtext><mn>14</mn><mtext><mrow><mtext>Weight:</mtext></mrow></mtext><mrow><mn>1</mn><mo>.</mo><mn>0</mn></mrow></mrow><mtext><mrow><mtext>]fromthe</mtext></mrow></mtext><mi>Dim</mi><mtext><mrow><mtext>palette</mtext></mrow></mtext></mrow><mo>,</mo><mrow><mo>[</mo><mrow><mtext><mrow><mtext>Hue:</mtext></mrow></mtext><mn>14</mn><mtext><mrow><mtext>Weight:</mtext></mrow></mtext><mrow><mn>1</mn><mo>.</mo><mn>0</mn></mrow></mrow><mtext><mrow><mtext>]fromthe</mtext></mrow></mtext><mi>Dim</mi><mtext><mrow><mtext>palette</mtext></mrow></mtext></mrow><mo>,</mo><mrow><mo>[</mo><mrow><mtext><mrow><mtext>Hue:</mtext></mrow></mtext><mn>14</mn><mtext><mrow><mtext>Weight:</mtext></mrow></mtext><mrow><mn>1</mn><mo>.</mo><mn>0</mn></mrow></mrow><mtext><mrow><mtext>]fromthe</mtext></mrow></mtext><mi>Dim</mi><mtext><mrow><mtext>palette</mtext></mrow></mtext></mrow><mo>,</mo><mrow><mo>[</mo><mrow><mtext><mrow><mtext>Hue:</mtext></mrow></mtext><mn>11</mn><mtext><mrow><mtext>Weight:</mtext></mrow></mtext><mrow><mn>1</mn><mo>.</mo><mn>0</mn></mrow></mrow><mtext><mrow><mtext>]fromthe</mtext></mrow></mtext><mi>Pastel</mi><mtext><mrow><mtext>palette</mtext></mrow></mtext></mrow><mo>,</mo><mrow><mo>[</mo><mrow><mtext><mrow><mtext>Hue:</mtext></mrow></mtext><mn>11</mn><mtext><mrow><mtext>Weight:</mtext></mrow></mtext><mrow><mn>1</mn><mo>.</mo><mn>0</mn></mrow></mrow><mtext><mrow><mtext>]fromthe</mtext></mrow></mtext><mi>Pastel</mi><mtext><mrow><mtext>palette</mtext></mrow></mtext></mrow><mo>,</mo><mrow><mo>[</mo><mrow><mtext><mrow><mtext>Hue:</mtext></mrow></mtext><mn>11</mn><mtext><mrow><mtext>Weight:</mtext></mrow></mtext><mrow><mn>1</mn><mo>.</mo><mn>0</mn></mrow></mrow><mtext><mrow><mtext>]fromthe</mtext></mrow></mtext><mi>Pastel</mi><mtext><mrow><mtext>palette</mtext></mrow></mtext></mrow><mo>,</mo><mrow><mo>[</mo><mrow><mtext><mrow><mtext>Hue:</mtext></mrow></mtext><mn>11</mn><mtext><mrow><mtext>Weight:</mtext></mrow></mtext><mrow><mn>1</mn><mo>.</mo><mn>0</mn></mrow></mrow><mtext><mrow><mtext>]fromthe</mtext></mrow></mtext><mi>Pastel</mi><mtext><mrow><mtext>palette</mtext></mrow></mtext></mrow><mo>]</mo></mrow></mstyle></math>
</td></tr>
</table>
</div>




<div class="returnType">
Type: List Palette
</div>



<p>Here are the colors for the lines.
</p>




<div id="spadComm7-30" class="spadComm" >
<form id="formComm7-30" action="javascript:makeRequest('7-30');" >
<input id="comm7-30" type="text" class="command" style="width: 119em;" value="lc := [pastel blue(), light yellow(), dim green(), bright red(), light green(), dim yellow(), bright blue(), dark red(), pastel red(), light blue(), dim green(), light yellow()] " />
</form>
<span id="commSav7-30" class="commSav" >lc := [pastel blue(), light yellow(), dim green(), bright red(), light green(), dim yellow(), bright blue(), dark red(), pastel red(), light blue(), dim green(), light yellow()] </span>
<div id="mathAns7-30" ></div>
</div>


<div class="math">
<table>
<tr><td>
<math xmlns="&mathml;" mathsize="big" display="block"><mstyle><mrow><mo>[</mo><mrow><mo>[</mo><mrow><mtext><mrow><mtext>Hue:</mtext></mrow></mtext><mn>22</mn><mtext><mrow><mtext>Weight:</mtext></mrow></mtext><mrow><mn>1</mn><mo>.</mo><mn>0</mn></mrow></mrow><mtext><mrow><mtext>]fromthe</mtext></mrow></mtext><mi>Pastel</mi><mtext><mrow><mtext>palette</mtext></mrow></mtext></mrow><mo>,</mo><mrow><mo>[</mo><mrow><mtext><mrow><mtext>Hue:</mtext></mrow></mtext><mn>11</mn><mtext><mrow><mtext>Weight:</mtext></mrow></mtext><mrow><mn>1</mn><mo>.</mo><mn>0</mn></mrow></mrow><mtext><mrow><mtext>]fromthe</mtext></mrow></mtext><mi>Light</mi><mtext><mrow><mtext>palette</mtext></mrow></mtext></mrow><mo>,</mo><mrow><mo>[</mo><mrow><mtext><mrow><mtext>Hue:</mtext></mrow></mtext><mn>14</mn><mtext><mrow><mtext>Weight:</mtext></mrow></mtext><mrow><mn>1</mn><mo>.</mo><mn>0</mn></mrow></mrow><mtext><mrow><mtext>]fromthe</mtext></mrow></mtext><mi>Dim</mi><mtext><mrow><mtext>palette</mtext></mrow></mtext></mrow><mo>,</mo><mrow><mo>[</mo><mrow><mtext><mrow><mtext>Hue:</mtext></mrow></mtext><mn>1</mn><mtext><mrow><mtext>Weight:</mtext></mrow></mtext><mrow><mn>1</mn><mo>.</mo><mn>0</mn></mrow></mrow><mtext><mrow><mtext>]fromthe</mtext></mrow></mtext><mi>Bright</mi><mtext><mrow><mtext>palette</mtext></mrow></mtext></mrow><mo>,</mo><mrow><mo>[</mo><mrow><mtext><mrow><mtext>Hue:</mtext></mrow></mtext><mn>14</mn><mtext><mrow><mtext>Weight:</mtext></mrow></mtext><mrow><mn>1</mn><mo>.</mo><mn>0</mn></mrow></mrow><mtext><mrow><mtext>]fromthe</mtext></mrow></mtext><mi>Light</mi><mtext><mrow><mtext>palette</mtext></mrow></mtext></mrow><mo>,</mo><mrow><mo>[</mo><mrow><mtext><mrow><mtext>Hue:</mtext></mrow></mtext><mn>11</mn><mtext><mrow><mtext>Weight:</mtext></mrow></mtext><mrow><mn>1</mn><mo>.</mo><mn>0</mn></mrow></mrow><mtext><mrow><mtext>]fromthe</mtext></mrow></mtext><mi>Dim</mi><mtext><mrow><mtext>palette</mtext></mrow></mtext></mrow><mo>,</mo><mrow><mo>[</mo><mrow><mtext><mrow><mtext>Hue:</mtext></mrow></mtext><mn>22</mn><mtext><mrow><mtext>Weight:</mtext></mrow></mtext><mrow><mn>1</mn><mo>.</mo><mn>0</mn></mrow></mrow><mtext><mrow><mtext>]fromthe</mtext></mrow></mtext><mi>Bright</mi><mtext><mrow><mtext>palette</mtext></mrow></mtext></mrow><mo>,</mo><mrow><mo>[</mo><mrow><mtext><mrow><mtext>Hue:</mtext></mrow></mtext><mn>1</mn><mtext><mrow><mtext>Weight:</mtext></mrow></mtext><mrow><mn>1</mn><mo>.</mo><mn>0</mn></mrow></mrow><mtext><mrow><mtext>]fromthe</mtext></mrow></mtext><mi>Dark</mi><mtext><mrow><mtext>palette</mtext></mrow></mtext></mrow><mo>,</mo><mrow><mo>[</mo><mrow><mtext><mrow><mtext>Hue:</mtext></mrow></mtext><mn>1</mn><mtext><mrow><mtext>Weight:</mtext></mrow></mtext><mrow><mn>1</mn><mo>.</mo><mn>0</mn></mrow></mrow><mtext><mrow><mtext>]fromthe</mtext></mrow></mtext><mi>Pastel</mi><mtext><mrow><mtext>palette</mtext></mrow></mtext></mrow><mo>,</mo><mrow><mo>[</mo><mrow><mtext><mrow><mtext>Hue:</mtext></mrow></mtext><mn>22</mn><mtext><mrow><mtext>Weight:</mtext></mrow></mtext><mrow><mn>1</mn><mo>.</mo><mn>0</mn></mrow></mrow><mtext><mrow><mtext>]fromthe</mtext></mrow></mtext><mi>Light</mi><mtext><mrow><mtext>palette</mtext></mrow></mtext></mrow><mo>,</mo><mrow><mo>[</mo><mrow><mtext><mrow><mtext>Hue:</mtext></mrow></mtext><mn>14</mn><mtext><mrow><mtext>Weight:</mtext></mrow></mtext><mrow><mn>1</mn><mo>.</mo><mn>0</mn></mrow></mrow><mtext><mrow><mtext>]fromthe</mtext></mrow></mtext><mi>Dim</mi><mtext><mrow><mtext>palette</mtext></mrow></mtext></mrow><mo>,</mo><mrow><mo>[</mo><mrow><mtext><mrow><mtext>Hue:</mtext></mrow></mtext><mn>11</mn><mtext><mrow><mtext>Weight:</mtext></mrow></mtext><mrow><mn>1</mn><mo>.</mo><mn>0</mn></mrow></mrow><mtext><mrow><mtext>]fromthe</mtext></mrow></mtext><mi>Light</mi><mtext><mrow><mtext>palette</mtext></mrow></mtext></mrow><mo>]</mo></mrow></mstyle></math>
</td></tr>
</table>
</div>




<div class="returnType">
Type: List Palette
</div>



<p>Now the <span class="teletype">GraphImage</span> is created according to the component
specifications indicated above.
</p>




<div id="spadComm7-31" class="spadComm" >
<form id="formComm7-31" action="javascript:makeRequest('7-31');" >
<input id="comm7-31" type="text" class="command" style="width: 32em;" value="g := makeGraphImage(llp,lpc,lc,lsize)$GRIMAGE  " />
</form>
<span id="commSav7-31" class="commSav" >g := makeGraphImage(llp,lpc,lc,lsize)$GRIMAGE  </span>
<div id="mathAns7-31" ></div>
</div>



<p>The <span class="spadfunFrom" >makeViewport2D</span><span class="index">makeViewport2D</span><a name="chapter-7-107"/><span class="index">TwoDimensionalViewport</span><a name="chapter-7-108"/> function now
creates a <span class="teletype">TwoDimensionalViewport</span> for this graph according to the
list of options specified within the brackets.
</p>




<div class="spadgraph" style="width: 21em">
makeViewport2D(g,[title("Lines")])$VIEW2D 
</div>





<p>This example demonstrates the use of the <span class="teletype">GraphImage</span> functions
<span class="spadfunFrom" >component</span><span class="index">component</span><a name="chapter-7-109"/><span class="index">GraphImage</span><a name="chapter-7-110"/> and <span class="spadfunFrom" >appendPoint</span><span class="index">appendPoint</span><a name="chapter-7-111"/><span class="index">GraphImage</span><a name="chapter-7-112"/>
in adding points to an empty <span class="teletype">GraphImage</span>.
</p>




<div id="spadComm7-32" class="spadComm" >
<form id="formComm7-32" action="javascript:makeRequest('7-32');" >
<input id="comm7-32" type="text" class="command" style="width: 8em;" value=")clear all " />
</form>
<span id="commSav7-32" class="commSav" >)clear all </span>
<div id="mathAns7-32" ></div>
</div>





<div id="spadComm7-33" class="spadComm" >
<form id="formComm7-33" action="javascript:makeRequest('7-33');" >
<input id="comm7-33" type="text" class="command" style="width: 18em;" value="g := graphImage()$GRIMAGE " />
</form>
<span id="commSav7-33" class="commSav" >g := graphImage()$GRIMAGE </span>
<div id="mathAns7-33" ></div>
</div>


<div class="math">
<table>
<tr><td>
<math xmlns="&mathml;" mathsize="big" display="block"><mstyle><mrow><mtext><mrow><mtext>Graphwith</mtext></mrow></mtext><mn>0</mn><mtext><mrow><mtext>pointlists</mtext></mrow></mtext></mrow></mstyle></math>
</td></tr>
</table>
</div>




<div class="returnType">
Type: GraphImage
</div>





<div id="spadComm7-34" class="spadComm" >
<form id="formComm7-34" action="javascript:makeRequest('7-34');" >
<input id="comm7-34" type="text" class="command" style="width: 22em;" value="p1 := point [0,0]$(Point DFLOAT) " />
</form>
<span id="commSav7-34" class="commSav" >p1 := point [0,0]$(Point DFLOAT) </span>
<div id="mathAns7-34" ></div>
</div>


<div class="math">
<table>
<tr><td>
<math xmlns="&mathml;" mathsize="big" display="block"><mstyle><mrow><mo>[</mo><mrow><mn>0</mn><mo>.</mo><mn>0</mn></mrow><mo>,</mo><mrow><mn>0</mn><mo>.</mo><mn>0</mn></mrow><mo>]</mo></mrow></mstyle></math>
</td></tr>
</table>
</div>




<div class="returnType">
Type: Point DoubleFloat
</div>





<div id="spadComm7-35" class="spadComm" >
<form id="formComm7-35" action="javascript:makeRequest('7-35');" >
<input id="comm7-35" type="text" class="command" style="width: 25em;" value="p2 := point [.25,.25]$(Point DFLOAT) " />
</form>
<span id="commSav7-35" class="commSav" >p2 := point [.25,.25]$(Point DFLOAT) </span>
<div id="mathAns7-35" ></div>
</div>


<div class="math">
<table>
<tr><td>
<math xmlns="&mathml;" mathsize="big" display="block"><mstyle><mrow><mo>[</mo><mrow><mn>0</mn><mo>.</mo><mn>25</mn></mrow><mo>,</mo><mrow><mn>0</mn><mo>.</mo><mn>25</mn></mrow><mo>]</mo></mrow></mstyle></math>
</td></tr>
</table>
</div>




<div class="returnType">
Type: Point DoubleFloat
</div>





<div id="spadComm7-36" class="spadComm" >
<form id="formComm7-36" action="javascript:makeRequest('7-36');" >
<input id="comm7-36" type="text" class="command" style="width: 24em;" value="p3 := point [.5,.5]$(Point DFLOAT) " />
</form>
<span id="commSav7-36" class="commSav" >p3 := point [.5,.5]$(Point DFLOAT) </span>
<div id="mathAns7-36" ></div>
</div>


<div class="math">
<table>
<tr><td>
<math xmlns="&mathml;" mathsize="big" display="block"><mstyle><mrow><mo>[</mo><mrow><mn>0</mn><mo>.</mo><mn>5</mn></mrow><mo>,</mo><mrow><mn>0</mn><mo>.</mo><mn>5</mn></mrow><mo>]</mo></mrow></mstyle></math>
</td></tr>
</table>
</div>




<div class="returnType">
Type: Point DoubleFloat
</div>





<div id="spadComm7-37" class="spadComm" >
<form id="formComm7-37" action="javascript:makeRequest('7-37');" >
<input id="comm7-37" type="text" class="command" style="width: 25em;" value="p4 := point [.75,.75]$(Point DFLOAT) " />
</form>
<span id="commSav7-37" class="commSav" >p4 := point [.75,.75]$(Point DFLOAT) </span>
<div id="mathAns7-37" ></div>
</div>


<div class="math">
<table>
<tr><td>
<math xmlns="&mathml;" mathsize="big" display="block"><mstyle><mrow><mo>[</mo><mrow><mn>0</mn><mo>.</mo><mn>75</mn></mrow><mo>,</mo><mrow><mn>0</mn><mo>.</mo><mn>75</mn></mrow><mo>]</mo></mrow></mstyle></math>
</td></tr>
</table>
</div>




<div class="returnType">
Type: Point DoubleFloat
</div>





<div id="spadComm7-38" class="spadComm" >
<form id="formComm7-38" action="javascript:makeRequest('7-38');" >
<input id="comm7-38" type="text" class="command" style="width: 22em;" value="p5 := point [1,1]$(Point DFLOAT) " />
</form>
<span id="commSav7-38" class="commSav" >p5 := point [1,1]$(Point DFLOAT) </span>
<div id="mathAns7-38" ></div>
</div>


<div class="math">
<table>
<tr><td>
<math xmlns="&mathml;" mathsize="big" display="block"><mstyle><mrow><mo>[</mo><mrow><mn>1</mn><mo>.</mo><mn>0</mn></mrow><mo>,</mo><mrow><mn>1</mn><mo>.</mo><mn>0</mn></mrow><mo>]</mo></mrow></mstyle></math>
</td></tr>
</table>
</div>




<div class="returnType">
Type: Point DoubleFloat
</div>





<div id="spadComm7-39" class="spadComm" >
<form id="formComm7-39" action="javascript:makeRequest('7-39');" >
<input id="comm7-39" type="text" class="command" style="width: 16em;" value="component(g,p1)$GRIMAGE" />
</form>
<span id="commSav7-39" class="commSav" >component(g,p1)$GRIMAGE</span>
<div id="mathAns7-39" ></div>
</div>




<div class="returnType">
Type: Void
</div>





<div id="spadComm7-40" class="spadComm" >
<form id="formComm7-40" action="javascript:makeRequest('7-40');" >
<input id="comm7-40" type="text" class="command" style="width: 16em;" value="component(g,p2)$GRIMAGE" />
</form>
<span id="commSav7-40" class="commSav" >component(g,p2)$GRIMAGE</span>
<div id="mathAns7-40" ></div>
</div>




<div class="returnType">
Type: Void
</div>





<div id="spadComm7-41" class="spadComm" >
<form id="formComm7-41" action="javascript:makeRequest('7-41');" >
<input id="comm7-41" type="text" class="command" style="width: 17em;" value="appendPoint(g,p3)$GRIMAGE" />
</form>
<span id="commSav7-41" class="commSav" >appendPoint(g,p3)$GRIMAGE</span>
<div id="mathAns7-41" ></div>
</div>




<div class="returnType">
Type: Void
</div>





<div id="spadComm7-42" class="spadComm" >
<form id="formComm7-42" action="javascript:makeRequest('7-42');" >
<input id="comm7-42" type="text" class="command" style="width: 17em;" value="appendPoint(g,p4)$GRIMAGE" />
</form>
<span id="commSav7-42" class="commSav" >appendPoint(g,p4)$GRIMAGE</span>
<div id="mathAns7-42" ></div>
</div>




<div class="returnType">
Type: Void
</div>





<div id="spadComm7-43" class="spadComm" >
<form id="formComm7-43" action="javascript:makeRequest('7-43');" >
<input id="comm7-43" type="text" class="command" style="width: 17em;" value="appendPoint(g,p5)$GRIMAGE" />
</form>
<span id="commSav7-43" class="commSav" >appendPoint(g,p5)$GRIMAGE</span>
<div id="mathAns7-43" ></div>
</div>




<div class="returnType">
Type: Void
</div>





<div id="spadComm7-44" class="spadComm" >
<form id="formComm7-44" action="javascript:makeRequest('7-44');" >
<input id="comm7-44" type="text" class="command" style="width: 22em;" value="g1 := makeGraphImage(g)$GRIMAGE  " />
</form>
<span id="commSav7-44" class="commSav" >g1 := makeGraphImage(g)$GRIMAGE  </span>
<div id="mathAns7-44" ></div>
</div>



<p>Here is the graph.
</p>




<div class="spadgraph" style="width: 25em">
makeViewport2D(g1,[title("Graph Points")])$VIEW2D 
</div>







<p>A list of points can also be made into a <span class="teletype">GraphImage</span> by using
the operation <span class="spadfunFrom" >coerce</span><span class="index">coerce</span><a name="chapter-7-113"/><span class="index">GraphImage</span><a name="chapter-7-114"/>.  It is equivalent to adding
each point to  <math xmlns="&mathml;" mathsize="big"><mstyle><mi>g2</mi></mstyle></math> using <span class="spadfunFrom" >component</span><span class="index">component</span><a name="chapter-7-115"/><span class="index">GraphImage</span><a name="chapter-7-116"/>.
</p>




<div id="spadComm7-45" class="spadComm" >
<form id="formComm7-45" action="javascript:makeRequest('7-45');" >
<input id="comm7-45" type="text" class="command" style="width: 36em;" value="g2 := coerce([ [p1],[p2],[p3],[p4],[p5] ])$GRIMAGE   " />
</form>
<span id="commSav7-45" class="commSav" >g2 := coerce([ [p1],[p2],[p3],[p4],[p5] ])$GRIMAGE   </span>
<div id="mathAns7-45" ></div>
</div>



<p>Now, create an empty <span class="teletype">TwoDimensionalViewport</span>.
</p>




<div id="spadComm7-46" class="spadComm" >
<form id="formComm7-46" action="javascript:makeRequest('7-46');" >
<input id="comm7-46" type="text" class="command" style="width: 17em;" value="v := viewport2D()$VIEW2D " />
</form>
<span id="commSav7-46" class="commSav" >v := viewport2D()$VIEW2D </span>
<div id="mathAns7-46" ></div>
</div>





<div id="spadComm7-47" class="spadComm" >
<form id="formComm7-47" action="javascript:makeRequest('7-47');" >
<input id="comm7-47" type="text" class="command" style="width: 28em;" value='options(v,[title("Just Points")])$VIEW2D ' />
</form>
<span id="commSav7-47" class="commSav" >options(v,[title("Just Points")])$VIEW2D </span>
<div id="mathAns7-47" ></div>
</div>



<p>Place the graph into the viewport.
</p>




<div id="spadComm7-48" class="spadComm" >
<form id="formComm7-48" action="javascript:makeRequest('7-48');" >
<input id="comm7-48" type="text" class="command" style="width: 16em;" value="putGraph(v,g2,1)$VIEW2D " />
</form>
<span id="commSav7-48" class="commSav" >putGraph(v,g2,1)$VIEW2D </span>
<div id="mathAns7-48" ></div>
</div>



<p>Take a look.
</p>




<div class="spadgraph" style="width: 13em">
makeViewport2D(v)$VIEW2D 
</div>







</div>



<a name="subsubsec-7.1.9.2"/>
<div class="subsubsection"  id="subsubsec-7.1.9.2">
<h3 class="subsubsectitle">7.1.9.2  Creating a Two-Dimensional Viewport of a List of Points from a File</h3>



<p>The following three functions read a list of points from a
file and then draw the points and the connecting lines. The
points are stored in the file in readable form as floating point numbers
(specifically, <span class="teletype">DoubleFloat</span> values) as an alternating
stream of  <math xmlns="&mathml;" mathsize="big"><mstyle><mi>x</mi></mstyle></math>- and  <math xmlns="&mathml;" mathsize="big"><mstyle><mi>y</mi></mstyle></math>-values. For example,
</p>



<div class="verbatim"><br />
0.0&nbsp;0.0&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1.0&nbsp;1.0&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2.0&nbsp;4.0<br />
3.0&nbsp;9.0&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;4.0&nbsp;16.0&nbsp;&nbsp;&nbsp;&nbsp;5.0&nbsp;25.0<br />
</div>





<div class="verbatim"><br />
drawPoints(lp:List&nbsp;Point&nbsp;DoubleFloat):VIEW2D&nbsp;==<br />
&nbsp;&nbsp;g&nbsp;:=&nbsp;graphImage()$GRIMAGE<br />
&nbsp;&nbsp;for&nbsp;p&nbsp;in&nbsp;lp&nbsp;repeat<br />
&nbsp;&nbsp;&nbsp;&nbsp;component(g,p,pointColorDefault(),lineColorDefault(),<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;pointSizeDefault())<br />
&nbsp;&nbsp;gi&nbsp;:=&nbsp;makeGraphImage(g)$GRIMAGE<br />
&nbsp;&nbsp;makeViewport2D(gi,[title("Points")])$VIEW2D<br />
<br />
drawLines(lp:List&nbsp;Point&nbsp;DoubleFloat):VIEW2D&nbsp;==<br />
&nbsp;&nbsp;g&nbsp;:=&nbsp;graphImage()$GRIMAGE<br />
&nbsp;&nbsp;component(g,&nbsp;lp,&nbsp;pointColorDefault(),&nbsp;lineColorDefault(),<br />
&nbsp;&nbsp;&nbsp;&nbsp;pointSizeDefault())$GRIMAGE<br />
&nbsp;&nbsp;gi&nbsp;:=&nbsp;makeGraphImage(g)$GRIMAGE<br />
&nbsp;&nbsp;makeViewport2D(gi,[title("Points")])$VIEW2D<br />
<br />
plotData2D(name,&nbsp;title)&nbsp;==<br />
&nbsp;&nbsp;f:File(DFLOAT)&nbsp;:=&nbsp;open(name,"input")<br />
&nbsp;&nbsp;lp:LIST(Point&nbsp;DFLOAT)&nbsp;:=&nbsp;empty()<br />
&nbsp;&nbsp;while&nbsp;((x&nbsp;:=&nbsp;readIfCan!(f))&nbsp;case&nbsp;DFLOAT)&nbsp;repeat<br />
&nbsp;&nbsp;&nbsp;&nbsp;y&nbsp;:&nbsp;DFLOAT&nbsp;:=&nbsp;read!(f)<br />
&nbsp;&nbsp;&nbsp;&nbsp;lp&nbsp;:=&nbsp;cons(point&nbsp;[x,y]$(Point&nbsp;DFLOAT),&nbsp;lp)<br />
&nbsp;&nbsp;&nbsp;&nbsp;lp<br />
&nbsp;&nbsp;close!(f)<br />
&nbsp;&nbsp;drawPoints(lp)<br />
&nbsp;&nbsp;drawLines(lp)<br />
</div>



<p>This command will actually create the viewport and the graph if
the point data is in the file  <math xmlns="&mathml;" mathsize="big"><mstyle><mrow><mo>"</mo><mi>file</mi><mo>.</mo><mi>data</mi><mo>"</mo></mrow></mstyle></math>.
</p>



<div class="verbatim"><br />
plotData2D("file.data",&nbsp;"2D&nbsp;Data&nbsp;Plot")<br />
</div>





</div>




</div>



<a name="subsec-7.1.10"/>
<div class="subsection"  id="subsec-7.1.10">
<h3 class="subsectitle">7.1.10  Addendum: Appending a Graph to a Viewport Window Containing a Graph</h3>


<a name="ugGraphTwoDappend" class="label"/>


<p>This section demonstrates how to append a two-dimensional graph to a viewport
already containing other graphs.
The default <span style="font-weight: bold;"> draw</span> command places a graph into the first
<span class="teletype">GraphImage</span> slot position of the <span class="teletype">TwoDimensionalViewport</span>.
</p>


<p>This graph is in the first slot in its viewport.
</p>




<div id="spadComm7-49" class="spadComm" >
<form id="formComm7-49" action="javascript:makeRequest('7-49');" >
<input id="comm7-49" type="text" class="command" style="width: 21em;" value="v1 := draw(sin(x),x=0..2*%pi) " />
</form>
<span id="commSav7-49" class="commSav" >v1 := draw(sin(x),x=0..2*%pi) </span>
<div id="mathAns7-49" ></div>
</div>



<p>So is this graph.
</p>




<div id="spadComm7-50" class="spadComm" >
<form id="formComm7-50" action="javascript:makeRequest('7-50');" >
<input id="comm7-50" type="text" class="command" style="width: 38em;" value="v2 := draw(cos(x),x=0..2*%pi, curveColor==light red()) " />
</form>
<span id="commSav7-50" class="commSav" >v2 := draw(cos(x),x=0..2*%pi, curveColor==light red()) </span>
<div id="mathAns7-50" ></div>
</div>



<p>The operation <span class="spadfunFrom" >getGraph</span><span class="index">getGraph</span><a name="chapter-7-117"/><span class="index">TwoDimensionalViewport</span><a name="chapter-7-118"/>
retrieves the <span class="teletype">GraphImage</span>  <math xmlns="&mathml;" mathsize="big"><mstyle><mi>g1</mi></mstyle></math> from the first slot position
in the viewport  <math xmlns="&mathml;" mathsize="big"><mstyle><mi>v1</mi></mstyle></math>.
</p>




<div id="spadComm7-51" class="spadComm" >
<form id="formComm7-51" action="javascript:makeRequest('7-51');" >
<input id="comm7-51" type="text" class="command" style="width: 14em;" value="g1 := getGraph(v1,1) " />
</form>
<span id="commSav7-51" class="commSav" >g1 := getGraph(v1,1) </span>
<div id="mathAns7-51" ></div>
</div>



<p>Now <span class="spadfunFrom" >putGraph</span><span class="index">putGraph</span><a name="chapter-7-119"/><span class="index">TwoDimensionalViewport</span><a name="chapter-7-120"/>
places  <math xmlns="&mathml;" mathsize="big"><mstyle><mi>g1</mi></mstyle></math> into the the second slot position of  <math xmlns="&mathml;" mathsize="big"><mstyle><mi>v2</mi></mstyle></math>.
</p>




<div id="spadComm7-52" class="spadComm" >
<form id="formComm7-52" action="javascript:makeRequest('7-52');" >
<input id="comm7-52" type="text" class="command" style="width: 12em;" value="putGraph(v2,g1,2) " />
</form>
<span id="commSav7-52" class="commSav" >putGraph(v2,g1,2) </span>
<div id="mathAns7-52" ></div>
</div>



<p>Display the new <span class="teletype">TwoDimensionalViewport</span> containing both graphs.
</p>




<div class="spadgraph" style="width: 10em">
makeViewport2D(v2) 
</div>









</div>




</div><a href="book-contents.xhtml" style="margin-right: 10px;">Book Contents</a>
<a href="section-7.0.xhtml" style="margin-right: 10px;">Previous Section 7.0 Graphics</a><a href="section-7.2.xhtml" style="margin-right: 10px;">Next Section 7.2 Three-Dimensional Graphics</a>
<a href="book-index.xhtml">Book Index</a></body>
</html>