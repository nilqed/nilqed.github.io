<?xml version="1.0" encoding="UTF-8" ?>

<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.1 plus MathML 2.0//EN"
"http://www.w3.org/TR/MathML2/dtd/xhtml-math11-f.dtd" [
<!ENTITY mathml "http://www.w3.org/1998/Math/MathML">
]>

<html xmlns="http://www.w3.org/1999/xhtml"
      xmlns:xlink="http://www.w3.org/1999/xlink" >


  <head>
    <title>Section9.58</title>
    <link rel="stylesheet" type="text/css" href="graphicstyle.css" />
    <script type="text/javascript" src="bookax1.js" />
  </head>

  <body>
<a href="book-contents.xhtml" style="margin-right: 10px;">Book Contents</a><a href="section-9.57.xhtml" style="margin-right: 10px;">Previous Section 9.57  OneDimensionalArray</a><a href="section-9.59.xhtml" style="margin-right: 10px;">Next Section 9.59 OrderedVariableList</a>
<a href="book-index.xhtml">Book Index</a><div class="section"  id="sec-9.58">
<h2 class="sectiontitle">9.58  Operator</h2>


<a name="OperatorXmpPage" class="label"/>


<p>Given any ring <span class="teletype">R</span>, the ring of the <span class="teletype">Integer</span>-linear operators
over <span class="teletype">R</span> is called <span class="teletype">Operator(R)</span>.  To create an operator over
<span class="teletype">R</span>, first create a basic operator using the operation 
<span class="teletype">operator</span>, and then convert it to <span class="teletype">Operator(R)</span> for the <span class="teletype">R</span>
you want.
</p>


<p>We choose <span class="teletype">R</span> to be the two by two matrices over the integers.
</p>




<div id="spadComm9-1" class="spadComm" >
<form id="formComm9-1" action="javascript:makeRequest('9-1');" >
<input id="comm9-1" type="text" class="command" style="width: 14em;" value="R := SQMATRIX(2, INT)" />
</form>
<span id="commSav9-1" class="commSav" >R := SQMATRIX(2, INT)</span>
<div id="mathAns9-1" ></div>
</div>


<div class="math">
<table>
<tr><td>
<math xmlns="&mathml;" mathsize="big" display="block"><mstyle><mrow><mi>SquareMatrix</mi><mo>(</mo><mn>2</mn><mo>,</mo><mi>Integer</mi><mo>)</mo></mrow></mstyle></math>
</td></tr>
</table>
</div>




<div class="returnType">
Type: Domain
</div>



<p>Create the operator <span class="teletype">tilde</span> on <span class="teletype">R</span>.
</p>




<div id="spadComm9-2" class="spadComm" >
<form id="formComm9-2" action="javascript:makeRequest('9-2');" >
<input id="comm9-2" type="text" class="command" style="width: 22em;" value='t := operator("tilde") :: OP(R) ' />
</form>
<span id="commSav9-2" class="commSav" >t := operator("tilde") :: OP(R) </span>
<div id="mathAns9-2" ></div>
</div>


<div class="math">
<table>
<tr><td>
<math xmlns="&mathml;" mathsize="big" display="block"><mstyle><mi>tilde</mi></mstyle></math>
</td></tr>
</table>
</div>




<div class="returnType">
Type: Operator SquareMatrix(2,Integer)
</div>



<p>Since <span class="teletype">Operator</span> is unexposed we must either package-call operations
from it, or expose it explicitly.  For convenience we will do the latter.
</p>


<p>Expose <span class="teletype">Operator</span>.
</p>




<div id="spadComm9-3" class="spadComm" >
<form id="formComm9-3" action="javascript:makeRequest('9-3');" >
<input id="comm9-3" type="text" class="command" style="width: 25em;" value=")set expose add constructor Operator " />
</form>
<span id="commSav9-3" class="commSav" >)set expose add constructor Operator </span>
<div id="mathAns9-3" ></div>
</div>




<div class="verbatim"><br />
&nbsp;&nbsp;&nbsp;Operator&nbsp;is&nbsp;now&nbsp;explicitly&nbsp;exposed&nbsp;in&nbsp;frame&nbsp;G82322&nbsp;<br />
</div>



<p>To attach an evaluation function (from <span class="teletype">R</span> to <span class="teletype">R</span>) to an
operator over <span class="teletype">R</span>, use <span class="teletype">evaluate(op, f)</span> where <span class="teletype">op</span> is an
operator over <span class="teletype">R</span> and <span class="teletype">f</span> is a function <span class="teletype">R -> R</span>.  This
needs to be done only once when the operator is defined.  Note that
<span class="teletype">f</span> must be <span class="teletype">Integer</span>-linear (that is, 
<span class="teletype">f(ax+y) = a f(x) + f(y)</span> for any integer <span class="teletype">a</span>, and any <span class="teletype">x</span> 
and <span class="teletype">y</span> in <span class="teletype">R</span>).
</p>


<p>We now attach the transpose map to the above operator <span class="teletype">t</span>.
</p>




<div id="spadComm9-4" class="spadComm" >
<form id="formComm9-4" action="javascript:makeRequest('9-4');" >
<input id="comm9-4" type="text" class="command" style="width: 20em;" value="evaluate(t, m +-> transpose m)" />
</form>
<span id="commSav9-4" class="commSav" >evaluate(t, m +-> transpose m)</span>
<div id="mathAns9-4" ></div>
</div>


<div class="math">
<table>
<tr><td>
<math xmlns="&mathml;" mathsize="big" display="block"><mstyle><mi>tilde</mi></mstyle></math>
</td></tr>
</table>
</div>




<div class="returnType">
Type: Operator SquareMatrix(2,Integer)
</div>



<p>Operators can be manipulated formally as in any ring: <span class="teletype">+</span> is
the pointwise addition and <span class="teletype">*</span> is composition.  Any element
<span class="teletype">x</span> of <span class="teletype">R</span> can be converted to an operator 
 <math xmlns="&mathml;" mathsize="big"><mstyle><mrow><msub><mi>op</mi><mi>x</mi></msub></mrow></mstyle></math> over <span class="teletype">R</span>, and the evaluation function of
 <math xmlns="&mathml;" mathsize="big"><mstyle><mrow><msub><mi>op</mi><mi>x</mi></msub></mrow></mstyle></math> is left-multiplication by <span class="teletype">x</span>.
</p>


<p>Multiplying on the left by this matrix swaps the two rows.
</p>




<div id="spadComm9-5" class="spadComm" >
<form id="formComm9-5" action="javascript:makeRequest('9-5');" >
<input id="comm9-5" type="text" class="command" style="width: 23em;" value="s : R := matrix [ [0, 1], [1, 0] ]" />
</form>
<span id="commSav9-5" class="commSav" >s : R := matrix [ [0, 1], [1, 0] ]</span>
<div id="mathAns9-5" ></div>
</div>


<div class="math">
<table>
<tr><td>
<math xmlns="&mathml;" mathsize="big" display="block"><mstyle><mrow><mo>[</mo><mtable><mtr><mtd><mn>0</mn></mtd><mtd><mn>1</mn></mtd></mtr><mtr><mtd><mn>1</mn></mtd><mtd><mn>0</mn></mtd></mtr></mtable><mo>]</mo></mrow></mstyle></math>
</td></tr>
</table>
</div>




<div class="returnType">
Type: SquareMatrix(2,Integer)
</div>



<p>Can you guess what is the action of the following operator?
</p>




<div id="spadComm9-6" class="spadComm" >
<form id="formComm9-6" action="javascript:makeRequest('9-6');" >
<input id="comm9-6" type="text" class="command" style="width: 8em;" value="rho := t * s" />
</form>
<span id="commSav9-6" class="commSav" >rho := t * s</span>
<div id="mathAns9-6" ></div>
</div>


<div class="math">
<table>
<tr><td>
<math xmlns="&mathml;" mathsize="big" display="block"><mstyle><mrow><mi>tilde</mi><mspace width="0.5 em" /><mrow><mo>[</mo><mtable><mtr><mtd><mn>0</mn></mtd><mtd><mn>1</mn></mtd></mtr><mtr><mtd><mn>1</mn></mtd><mtd><mn>0</mn></mtd></mtr></mtable><mo>]</mo></mrow></mrow></mstyle></math>
</td></tr>
</table>
</div>




<div class="returnType">
Type: Operator SquareMatrix(2,Integer)
</div>



<p>Hint: applying <span class="teletype">rho</span> four times gives the identity, so
<span class="teletype">rho^4-1</span> should return 0 when applied to any two by two matrix.
</p>




<div id="spadComm9-7" class="spadComm" >
<form id="formComm9-7" action="javascript:makeRequest('9-7');" >
<input id="comm9-7" type="text" class="command" style="width: 10em;" value="z := rho^4 - 1" />
</form>
<span id="commSav9-7" class="commSav" >z := rho^4 - 1</span>
<div id="mathAns9-7" ></div>
</div>


<div class="math">
<table>
<tr><td>
<math xmlns="&mathml;" mathsize="big" display="block"><mstyle><mrow><mo>-</mo><mn>1</mn><mo>+</mo><mrow><mi>tilde</mi><mspace width="0.5 em" /><mrow><mo>[</mo><mtable><mtr><mtd><mn>0</mn></mtd><mtd><mn>1</mn></mtd></mtr><mtr><mtd><mn>1</mn></mtd><mtd><mn>0</mn></mtd></mtr></mtable><mo>]</mo></mrow><mspace width="0.5 em" /><mi>tilde</mi><mspace width="0.5 em" /><mrow><mo>[</mo><mtable><mtr><mtd><mn>0</mn></mtd><mtd><mn>1</mn></mtd></mtr><mtr><mtd><mn>1</mn></mtd><mtd><mn>0</mn></mtd></mtr></mtable><mo>]</mo></mrow><mspace width="0.5 em" /><mi>tilde</mi><mspace width="0.5 em" /><mrow><mo>[</mo><mtable><mtr><mtd><mn>0</mn></mtd><mtd><mn>1</mn></mtd></mtr><mtr><mtd><mn>1</mn></mtd><mtd><mn>0</mn></mtd></mtr></mtable><mo>]</mo></mrow><mspace width="0.5 em" /><mi>tilde</mi><mspace width="0.5 em" /><mrow><mo>[</mo><mtable><mtr><mtd><mn>0</mn></mtd><mtd><mn>1</mn></mtd></mtr><mtr><mtd><mn>1</mn></mtd><mtd><mn>0</mn></mtd></mtr></mtable><mo>]</mo></mrow></mrow></mrow></mstyle></math>
</td></tr>
</table>
</div>




<div class="returnType">
Type: Operator SquareMatrix(2,Integer)
</div>



<p>Now check with this matrix.
</p>




<div id="spadComm9-8" class="spadComm" >
<form id="formComm9-8" action="javascript:makeRequest('9-8');" >
<input id="comm9-8" type="text" class="command" style="width: 22em;" value="m:R := matrix [ [1, 2], [3, 4] ]" />
</form>
<span id="commSav9-8" class="commSav" >m:R := matrix [ [1, 2], [3, 4] ]</span>
<div id="mathAns9-8" ></div>
</div>


<div class="math">
<table>
<tr><td>
<math xmlns="&mathml;" mathsize="big" display="block"><mstyle><mrow><mo>[</mo><mtable><mtr><mtd><mn>1</mn></mtd><mtd><mn>2</mn></mtd></mtr><mtr><mtd><mn>3</mn></mtd><mtd><mn>4</mn></mtd></mtr></mtable><mo>]</mo></mrow></mstyle></math>
</td></tr>
</table>
</div>




<div class="returnType">
Type: SquareMatrix(2,Integer)
</div>





<div id="spadComm9-9" class="spadComm" >
<form id="formComm9-9" action="javascript:makeRequest('9-9');" >
<input id="comm9-9" type="text" class="command" style="width: 2em;" value="z m" />
</form>
<span id="commSav9-9" class="commSav" >z m</span>
<div id="mathAns9-9" ></div>
</div>


<div class="math">
<table>
<tr><td>
<math xmlns="&mathml;" mathsize="big" display="block"><mstyle><mrow><mo>[</mo><mtable><mtr><mtd><mn>0</mn></mtd><mtd><mn>0</mn></mtd></mtr><mtr><mtd><mn>0</mn></mtd><mtd><mn>0</mn></mtd></mtr></mtable><mo>]</mo></mrow></mstyle></math>
</td></tr>
</table>
</div>




<div class="returnType">
Type: SquareMatrix(2,Integer)
</div>



<p>As you have probably guessed by now, <span class="teletype">rho</span> acts on matrices
by rotating the elements clockwise.
</p>




<div id="spadComm9-10" class="spadComm" >
<form id="formComm9-10" action="javascript:makeRequest('9-10');" >
<input id="comm9-10" type="text" class="command" style="width: 4em;" value="rho m" />
</form>
<span id="commSav9-10" class="commSav" >rho m</span>
<div id="mathAns9-10" ></div>
</div>


<div class="math">
<table>
<tr><td>
<math xmlns="&mathml;" mathsize="big" display="block"><mstyle><mrow><mo>[</mo><mtable><mtr><mtd><mn>3</mn></mtd><mtd><mn>1</mn></mtd></mtr><mtr><mtd><mn>4</mn></mtd><mtd><mn>2</mn></mtd></mtr></mtable><mo>]</mo></mrow></mstyle></math>
</td></tr>
</table>
</div>




<div class="returnType">
Type: SquareMatrix(2,Integer)
</div>





<div id="spadComm9-11" class="spadComm" >
<form id="formComm9-11" action="javascript:makeRequest('9-11');" >
<input id="comm9-11" type="text" class="command" style="width: 6em;" value="rho rho m" />
</form>
<span id="commSav9-11" class="commSav" >rho rho m</span>
<div id="mathAns9-11" ></div>
</div>


<div class="math">
<table>
<tr><td>
<math xmlns="&mathml;" mathsize="big" display="block"><mstyle><mrow><mo>[</mo><mtable><mtr><mtd><mn>4</mn></mtd><mtd><mn>3</mn></mtd></mtr><mtr><mtd><mn>2</mn></mtd><mtd><mn>1</mn></mtd></mtr></mtable><mo>]</mo></mrow></mstyle></math>
</td></tr>
</table>
</div>




<div class="returnType">
Type: SquareMatrix(2,Integer)
</div>





<div id="spadComm9-12" class="spadComm" >
<form id="formComm9-12" action="javascript:makeRequest('9-12');" >
<input id="comm9-12" type="text" class="command" style="width: 7em;" value="(rho^3) m" />
</form>
<span id="commSav9-12" class="commSav" >(rho^3) m</span>
<div id="mathAns9-12" ></div>
</div>


<div class="math">
<table>
<tr><td>
<math xmlns="&mathml;" mathsize="big" display="block"><mstyle><mrow><mo>[</mo><mtable><mtr><mtd><mn>2</mn></mtd><mtd><mn>4</mn></mtd></mtr><mtr><mtd><mn>1</mn></mtd><mtd><mn>3</mn></mtd></mtr></mtable><mo>]</mo></mrow></mstyle></math>
</td></tr>
</table>
</div>




<div class="returnType">
Type: SquareMatrix(2,Integer)
</div>



<p>Do the swapping of rows and transposition commute?  We can check by
computing their bracket.
</p>




<div id="spadComm9-13" class="spadComm" >
<form id="formComm9-13" action="javascript:makeRequest('9-13');" >
<input id="comm9-13" type="text" class="command" style="width: 12em;" value="b := t * s - s * t" />
</form>
<span id="commSav9-13" class="commSav" >b := t * s - s * t</span>
<div id="mathAns9-13" ></div>
</div>


<div class="math">
<table>
<tr><td>
<math xmlns="&mathml;" mathsize="big" display="block"><mstyle><mrow><mo>-</mo><mrow><mrow><mo>[</mo><mtable><mtr><mtd><mn>0</mn></mtd><mtd><mn>1</mn></mtd></mtr><mtr><mtd><mn>1</mn></mtd><mtd><mn>0</mn></mtd></mtr></mtable><mo>]</mo></mrow><mspace width="0.5 em" /><mi>tilde</mi></mrow><mo>+</mo><mrow><mi>tilde</mi><mspace width="0.5 em" /><mrow><mo>[</mo><mtable><mtr><mtd><mn>0</mn></mtd><mtd><mn>1</mn></mtd></mtr><mtr><mtd><mn>1</mn></mtd><mtd><mn>0</mn></mtd></mtr></mtable><mo>]</mo></mrow></mrow></mrow></mstyle></math>
</td></tr>
</table>
</div>




<div class="returnType">
Type: Operator SquareMatrix(2,Integer)
</div>



<p>Now apply it to <span class="teletype">m</span>.
</p>




<div id="spadComm9-14" class="spadComm" >
<form id="formComm9-14" action="javascript:makeRequest('9-14');" >
<input id="comm9-14" type="text" class="command" style="width: 3em;" value="b m " />
</form>
<span id="commSav9-14" class="commSav" >b m </span>
<div id="mathAns9-14" ></div>
</div>


<div class="math">
<table>
<tr><td>
<math xmlns="&mathml;" mathsize="big" display="block"><mstyle><mrow><mo>[</mo><mtable><mtr><mtd><mn>1</mn></mtd><mtd><mo>-</mo><mn>3</mn></mtd></mtr><mtr><mtd><mn>3</mn></mtd><mtd><mo>-</mo><mn>1</mn></mtd></mtr></mtable><mo>]</mo></mrow></mstyle></math>
</td></tr>
</table>
</div>




<div class="returnType">
Type: SquareMatrix(2,Integer)
</div>


<p> 
Next we demonstrate how to define a differential operator on a
polynomial ring.
</p>


<p>This is the recursive definition of the <span class="teletype">n</span>-th Legendre polynomial.
</p>




<div class="verbatim"><br />
L&nbsp;n&nbsp;==<br />
&nbsp;&nbsp;n&nbsp;=&nbsp;0&nbsp;=&gt;&nbsp;1<br />
&nbsp;&nbsp;n&nbsp;=&nbsp;1&nbsp;=&gt;&nbsp;x<br />
&nbsp;&nbsp;(2*n-1)/n&nbsp;*&nbsp;x&nbsp;*&nbsp;L(n-1)&nbsp;-&nbsp;(n-1)/n&nbsp;*&nbsp;L(n-2)<br />
</div>




<div class="returnType">
Void
</div>



<p>Create the differential operator  <math xmlns="&mathml;" mathsize="big"><mstyle><mfrac><mi>d</mi><mi>dx</mi></mfrac></mstyle></math> on polynomials in <span class="teletype">x</span> 
over the rational numbers.
</p>




<div id="spadComm9-15" class="spadComm" >
<form id="formComm9-15" action="javascript:makeRequest('9-15');" >
<input id="comm9-15" type="text" class="command" style="width: 28em;" value='dx := operator("D") :: OP(POLY FRAC INT) ' />
</form>
<span id="commSav9-15" class="commSav" >dx := operator("D") :: OP(POLY FRAC INT) </span>
<div id="mathAns9-15" ></div>
</div>


<div class="math">
<table>
<tr><td>
<math xmlns="&mathml;" mathsize="big" display="block"><mstyle><mi>D</mi></mstyle></math>
</td></tr>
</table>
</div>




<div class="returnType">
Type: Operator Polynomial Fraction Integer
</div>



<p>Now attach the map to it.
</p>




<div id="spadComm9-16" class="spadComm" >
<form id="formComm9-16" action="javascript:makeRequest('9-16');" >
<input id="comm9-16" type="text" class="command" style="width: 20em;" value="evaluate(dx, p +-> D(p, 'x)) " />
</form>
<span id="commSav9-16" class="commSav" >evaluate(dx, p +-> D(p, 'x)) </span>
<div id="mathAns9-16" ></div>
</div>


<div class="math">
<table>
<tr><td>
<math xmlns="&mathml;" mathsize="big" display="block"><mstyle><mi>D</mi></mstyle></math>
</td></tr>
</table>
</div>




<div class="returnType">
Type: Operator Polynomial Fraction Integer
</div>



<p>This is the differential equation satisfied by the <span class="teletype">n</span>-th
Legendre polynomial.
</p>




<div id="spadComm9-17" class="spadComm" >
<form id="formComm9-17" action="javascript:makeRequest('9-17');" >
<input id="comm9-17" type="text" class="command" style="width: 33em;" value="E n == (1 - x^2) * dx^2 - 2 * x * dx + n*(n+1) " />
</form>
<span id="commSav9-17" class="commSav" >E n == (1 - x^2) * dx^2 - 2 * x * dx + n*(n+1) </span>
<div id="mathAns9-17" ></div>
</div>




<div class="returnType">
Void
</div>



<p>Now we verify this for <span class="teletype">n = 15</span>.  Here is the polynomial.
</p>




<div id="spadComm9-18" class="spadComm" >
<form id="formComm9-18" action="javascript:makeRequest('9-18');" >
<input id="comm9-18" type="text" class="command" style="width: 4em;" value="L 15 " />
</form>
<span id="commSav9-18" class="commSav" >L 15 </span>
<div id="mathAns9-18" ></div>
</div>


<div class="math">
<table>
<tr><td>
<math xmlns="&mathml;" mathsize="big" display="block"><mstyle><mrow><mtable><mtr><mtd><mrow><mfrac><mn>9694845</mn><mn>2048</mn></mfrac><mspace width="0.5 em" /><mrow><msup><mi>x</mi><mn>15</mn></msup></mrow></mrow><mo>-</mo><mrow><mfrac><mn>35102025</mn><mn>2048</mn></mfrac><mspace width="0.5 em" /><mrow><msup><mi>x</mi><mn>13</mn></msup></mrow></mrow><mo>+</mo><mrow><mfrac><mn>50702925</mn><mn>2048</mn></mfrac><mspace width="0.5 em" /><mrow><msup><mi>x</mi><mn>11</mn></msup></mrow></mrow><mo>-</mo><mrow><mfrac><mn>37182145</mn><mn>2048</mn></mfrac><mspace width="0.5 em" /><mrow><msup><mi>x</mi><mn>9</mn></msup></mrow></mrow><mo>+</mo><mrow><mfrac><mn>14549535</mn><mn>2048</mn></mfrac><mspace width="0.5 em" /><mrow><msup><mi>x</mi><mn>7</mn></msup></mrow></mrow><mo>-</mo></mtd></mtr><mtr><mtd></mtd></mtr><mtr><mtd><mrow><mfrac><mn>2909907</mn><mn>2048</mn></mfrac><mspace width="0.5 em" /><mrow><msup><mi>x</mi><mn>5</mn></msup></mrow></mrow><mo>+</mo><mrow><mfrac><mn>255255</mn><mn>2048</mn></mfrac><mspace width="0.5 em" /><mrow><msup><mi>x</mi><mn>3</mn></msup></mrow></mrow><mo>-</mo><mrow><mfrac><mn>6435</mn><mn>2048</mn></mfrac><mspace width="0.5 em" /><mi>x</mi></mrow></mtd></mtr></mtable></mrow></mstyle></math>
</td></tr>
</table>
</div>




<div class="returnType">
Type: Polynomial Fraction Integer
</div>



<p>Here is the operator.
</p>




<div id="spadComm9-19" class="spadComm" >
<form id="formComm9-19" action="javascript:makeRequest('9-19');" >
<input id="comm9-19" type="text" class="command" style="width: 4em;" value="E 15 " />
</form>
<span id="commSav9-19" class="commSav" >E 15 </span>
<div id="mathAns9-19" ></div>
</div>


<div class="math">
<table>
<tr><td>
<math xmlns="&mathml;" mathsize="big" display="block"><mstyle><mrow><mn>240</mn><mo>-</mo><mrow><mn>2</mn><mspace width="0.5 em" /><mi>x</mi><mspace width="0.5 em" /><mi>D</mi></mrow><mo>-</mo><mrow><mrow><mo>(</mo><mrow><msup><mi>x</mi><mn>2</mn></msup></mrow><mo>-</mo><mn>1</mn><mo>)</mo></mrow><mspace width="0.5 em" /><mrow><msup><mi>D</mi><mn>2</mn></msup></mrow></mrow></mrow></mstyle></math>
</td></tr>
</table>
</div>




<div class="returnType">
Type: Operator Polynomial Fraction Integer
</div>



<p>Here is the evaluation.
</p>




<div id="spadComm9-20" class="spadComm" >
<form id="formComm9-20" action="javascript:makeRequest('9-20');" >
<input id="comm9-20" type="text" class="command" style="width: 9em;" value="(E 15)(L 15) " />
</form>
<span id="commSav9-20" class="commSav" >(E 15)(L 15) </span>
<div id="mathAns9-20" ></div>
</div>


<div class="math">
<table>
<tr><td>
<math xmlns="&mathml;" mathsize="big" display="block"><mstyle><mn>0</mn></mstyle></math>
</td></tr>
</table>
</div>




<div class="returnType">
Type: Polynomial Fraction Integer
</div>





</div><a href="book-contents.xhtml" style="margin-right: 10px;">Book Contents</a><a href="section-9.57.xhtml" style="margin-right: 10px;">Previous Section 9.57  OneDimensionalArray</a><a href="section-9.59.xhtml" style="margin-right: 10px;">Next Section 9.59 OrderedVariableList</a>
<a href="book-index.xhtml">Book Index</a></body>
</html>