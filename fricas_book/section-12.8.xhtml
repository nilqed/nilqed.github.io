<?xml version="1.0" encoding="UTF-8" ?>

<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.1 plus MathML 2.0//EN"
"http://www.w3.org/TR/MathML2/dtd/xhtml-math11-f.dtd" [
<!ENTITY mathml "http://www.w3.org/1998/Math/MathML">
]>

<html xmlns="http://www.w3.org/1999/xhtml"
      xmlns:xlink="http://www.w3.org/1999/xlink" >


  <head>
    <title>Section12.8</title>
    <link rel="stylesheet" type="text/css" href="graphicstyle.css" />
    <script type="text/javascript" src="bookax1.js" />
  </head>

  <body>
<a href="book-contents.xhtml" style="margin-right: 10px;">Book Contents</a><a href="section-12.7.xhtml" style="margin-right: 10px;">Previous Section 12.7 FriCASs</a><a href="section-12.9.xhtml" style="margin-right: 10px;">Next Section 12.9 Attributes</a>
<a href="book-index.xhtml">Book Index</a><div class="section"  id="sec-12.8">
<h2 class="sectiontitle">12.8  Correctness</h2>


<a name="ugCategoriesCorrectness" class="label"/>


<p>While such statements are only comments,
<span class="index">correctness</span><a name="chapter-12-20"/>
FriCAS can enforce their intention simply by shifting the burden of
responsibility onto the author of a domain.
A domain belongs to category  <math xmlns="&mathml;" mathsize="big"><mstyle><mi>Ring</mi></mstyle></math> only if the
author asserts that the domain  belongs to <span class="teletype">Ring</span> or
to a category that extends <span class="teletype">Ring</span>.
</p>


<p>This principle of assertion is important for large user-extendable
systems.
FriCAS has a large library of operations offering facilities in
many areas.
Names such as <span style="font-weight: bold;"> norm</span> and <span style="font-weight: bold;"> product</span>, for example, have
diverse meanings in diverse contexts.
An inescapable hindrance to users would be to force those who wish to
extend FriCAS to always invent new names for operations.
 I don't think disambiguate is really a word, though I like it
FriCAS allows you to reuse names, and then use context to disambiguate one
from another.
</p>


<p>Here is another example of why this is important.
Some languages, such as <span style="font-weight: bold;"> APL</span>,
<span class="index">APL</span><a name="chapter-12-21"/>
denote the <span class="teletype">Boolean</span> constants <span class="teletype">true</span> and
<span class="teletype">false</span> by the integers  <math xmlns="&mathml;" mathsize="big"><mstyle><mn>1</mn></mstyle></math> and  <math xmlns="&mathml;" mathsize="big"><mstyle><mn>0</mn></mstyle></math>.
You may want to let infix operators  <math xmlns="&mathml;" mathsize="big"><mstyle><mo>+</mo></mstyle></math> and  <math xmlns="&mathml;" mathsize="big"><mstyle><mo>*</mo></mstyle></math> serve as the logical
operators <span style="font-weight: bold;"> or</span> and <span style="font-weight: bold;"> and</span>, respectively.
But note this: <span class="teletype">Boolean</span> is not a ring.
The <span class="italic">inverse axiom</span> for <span class="teletype">Ring</span> states:
</p>




<div class="center" style="text-align: center;">


<p>Every element  <math xmlns="&mathml;" mathsize="big"><mstyle><mi>x</mi></mstyle></math> has an additive inverse  <math xmlns="&mathml;" mathsize="big"><mstyle><mi>y</mi></mstyle></math> such that
 <math xmlns="&mathml;" mathsize="big"><mstyle><mrow><mi>x</mi><mo>+</mo><mi>y</mi><mo>=</mo><mn>0</mn></mrow></mstyle></math>.
</p>



</div>



<p><span class="teletype">Boolean</span> is not a ring since <span class="teletype">true</span> has
no inverse---there is no inverse element  <math xmlns="&mathml;" mathsize="big"><mstyle><mi>a</mi></mstyle></math> such that
 <math xmlns="&mathml;" mathsize="big"><mstyle><mrow><mn>1</mn><mo>+</mo><mi>a</mi><mo>=</mo><mn>0</mn></mrow></mstyle></math> (in terms of booleans, <span class="teletype">(true or a) = false</span>).
Nonetheless, FriCAS <span class="italic">could</span> easily and correctly implement
<span class="teletype">Boolean</span> this way.
<span class="teletype">Boolean</span> simply would not assert that it is of category
<span class="teletype">Ring</span>.
Thus the ``<span class="teletype">+</span>'' for <span class="teletype">Boolean</span> values
is not confused with the one for <span class="teletype">Ring</span>.
Since the <span class="teletype">Polynomial</span> constructor requires its argument
to be a ring, FriCAS would then refuse to build the
domain <span class="teletype">Polynomial(Boolean)</span>. Also, FriCAS would refuse to
wrongfully apply algorithms to <span class="teletype">Boolean</span> elements that  presume that the
ring axioms for ``<span class="teletype">+</span>'' hold.
</p>




</div><a href="book-contents.xhtml" style="margin-right: 10px;">Book Contents</a>
<a href="section-12.7.xhtml" style="margin-right: 10px;">Previous Section 12.7 FriCASs</a><a href="section-12.9.xhtml" style="margin-right: 10px;">Next Section 12.9 Attributes</a>
<a href="book-index.xhtml">Book Index</a></body>
</html>