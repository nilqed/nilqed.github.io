<?xml version="1.0" encoding="UTF-8" ?>

<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.1 plus MathML 2.0//EN"
"http://www.w3.org/TR/MathML2/dtd/xhtml-math11-f.dtd" [
<!ENTITY mathml "http://www.w3.org/1998/Math/MathML">
]>

<html xmlns="http://www.w3.org/1999/xhtml"
      xmlns:xlink="http://www.w3.org/1999/xlink" >


  <head>
    <title>Section9.75</title>
    <link rel="stylesheet" type="text/css" href="graphicstyle.css" />
    <script type="text/javascript" src="bookax1.js" />
  </head>

  <body>
<a href="book-contents.xhtml" style="margin-right: 10px;">Book Contents</a><a href="section-9.74.xhtml" style="margin-right: 10px;">Previous Section 9.74 SquareMatrix</a><a href="section-9.76.xhtml" style="margin-right: 10px;">Next Section 9.76 Stream</a>
<a href="book-index.xhtml">Book Index</a><div class="section"  id="sec-9.75">
<h2 class="sectiontitle">9.75  SquareFreeRegularTriangularSet</h2>


<a name="SquareFreeRegularTriangularSetXmpPage" class="label"/>


<p>The <span class="teletype">SquareFreeRegularTriangularSet</span> domain constructor implements
square-free regular triangular sets.  See the 
<span class="teletype">RegularTriangularSet</span> domain constructor for general regular
triangular sets.  Let <span class="em">T</span> be a regular triangular set consisting
of polynomials <span class="em">t1, ..., tm</span> ordered by increasing main variables.
The regular triangular set <span class="em">T</span> is square-free if <span class="em">T</span> is empty
or if <span class="em">t1, ..., tm-1</span> is square-free and if the polynomial 
<span class="em">tm</span> is square-free as a univariate polynomial with coefficients in the
tower of simple extensions associated with <span class="em">t1, ..., tm-1</span>.
</p>


<p>The main interest of square-free regular triangular sets is that their
associated towers of simple extensions are product of fields.
Consequently, the saturated ideal of a square-free regular triangular
set is radical.  This property simplifies some of the operations
related to regular triangular sets.  However, building square-free
regular triangular sets is generally more expensive than building
general regular triangular sets.
</p>


<p>As the <span class="teletype">RegularTriangularSet</span> domain constructor, the 
<span class="teletype">SquareFreeRegularTriangularSet</span> domain constructor also implements a
method for solving polynomial systems by means of regular triangular
sets.  This is in fact the same method with some adaptations to take
into account the fact that the computed regular chains are
square-free.  Note that it is also possible to pass from a
decomposition into general regular triangular sets to a decomposition
into square-free regular triangular sets.  This conversion is used
internally by the <span class="teletype">LazardSetSolvingPackage</span> package constructor.
</p>


<p><span style="font-weight: bold;"> N.B.</span> When solving polynomial systems with the 
<span class="teletype">SquareFreeRegularTriangularSet</span> domain constructor or the 
<span class="teletype">LazardSetSolvingPackage</span> package constructor, decompositions have no
redundant components.  See also <span class="teletype">LexTriangularPackage</span> and 
<span class="teletype">ZeroDimensionalSolvePackage</span> for the case of algebraic systems with a
finite number of (complex) solutions.
</p>


<p>We shall explain now how to use the constructor 
<span class="teletype">SquareFreeRegularTriangularSet</span>.
</p>


<p>This constructor takes four arguments.
The first one, <span style="font-weight: bold;"> R</span>, is the coefficient ring of the polynomials;
it must belong to the category <span class="teletype">GcdDomain</span>.
The second one, <span style="font-weight: bold;"> E</span>, is the exponent monoid of the polynomials;
it must belong to the category <span class="teletype">OrderedAbelianMonoidSup</span>.
the third one, <span style="font-weight: bold;"> V</span>, is the ordered set of variables;
it must belong to the category <span class="teletype">OrderedSet</span>.
The last one is the polynomial ring;
it must belong to the category <span class="teletype">RecursivePolynomialCategory(R,E,V)</span>.
The abbreviation for <span class="teletype">SquareFreeRegularTriangularSet</span> is
<span class="teletype">SREGSET</span>.
</p>


<p>Note that the way of understanding triangular decompositions 
is detailed in the example of the <span class="teletype">RegularTriangularSet</span>
constructor.
</p>


<p>Let us illustrate the use of this constructor with one example
(Donati-Traverso).  Define the coefficient ring.
</p>




<div id="spadComm9-61" class="spadComm" >
<form id="formComm9-61" action="javascript:makeRequest('9-61');" >
<input id="comm9-61" type="text" class="command" style="width: 9em;" value="R := Integer " />
</form>
<span id="commSav9-61" class="commSav" >R := Integer </span>
<div id="mathAns9-61" ></div>
</div>


<div class="math">
<table>
<tr><td>
<math xmlns="&mathml;" mathsize="big" display="block"><mstyle><mi>Integer</mi></mstyle></math>
</td></tr>
</table>
</div>




<div class="returnType">
Type: Domain
</div>



<p>Define the list of variables,
</p>




<div id="spadComm9-62" class="spadComm" >
<form id="formComm9-62" action="javascript:makeRequest('9-62');" >
<input id="comm9-62" type="text" class="command" style="width: 20em;" value="ls : List Symbol := [x,y,z,t] " />
</form>
<span id="commSav9-62" class="commSav" >ls : List Symbol := [x,y,z,t] </span>
<div id="mathAns9-62" ></div>
</div>


<div class="math">
<table>
<tr><td>
<math xmlns="&mathml;" mathsize="big" display="block"><mstyle><mrow><mo>[</mo><mi>x</mi><mo>,</mo><mi>y</mi><mo>,</mo><mi>z</mi><mo>,</mo><mi>t</mi><mo>]</mo></mrow></mstyle></math>
</td></tr>
</table>
</div>




<div class="returnType">
Type: List Symbol
</div>



<p>and make it an ordered set;
</p>




<div id="spadComm9-63" class="spadComm" >
<form id="formComm9-63" action="javascript:makeRequest('9-63');" >
<input id="comm9-63" type="text" class="command" style="width: 10em;" value="V := OVAR(ls)  " />
</form>
<span id="commSav9-63" class="commSav" >V := OVAR(ls)  </span>
<div id="mathAns9-63" ></div>
</div>


<div class="math">
<table>
<tr><td>
<math xmlns="&mathml;" mathsize="big" display="block"><mstyle><mrow><mtext><mrow><mtext>OrderedVariableList[x,y,z,t]</mtext></mrow></mtext></mrow></mstyle></math>
</td></tr>
</table>
</div>




<div class="returnType">
Type: Domain
</div>



<p>then define the exponent monoid.
</p>




<div id="spadComm9-64" class="spadComm" >
<form id="formComm9-64" action="javascript:makeRequest('9-64');" >
<input id="comm9-64" type="text" class="command" style="width: 17em;" value="E := IndexedExponents V  " />
</form>
<span id="commSav9-64" class="commSav" >E := IndexedExponents V  </span>
<div id="mathAns9-64" ></div>
</div>


<div class="math">
<table>
<tr><td>
<math xmlns="&mathml;" mathsize="big" display="block"><mstyle><mrow><mtext><mrow><mtext>IndexedExponentsOrderedVariableList[x,y,z,t]</mtext></mrow></mtext></mrow></mstyle></math>
</td></tr>
</table>
</div>




<div class="returnType">
Type: Domain
</div>



<p>Define the polynomial ring.
</p>




<div id="spadComm9-65" class="spadComm" >
<form id="formComm9-65" action="javascript:makeRequest('9-65');" >
<input id="comm9-65" type="text" class="command" style="width: 10em;" value="P := NSMP(R, V)" />
</form>
<span id="commSav9-65" class="commSav" >P := NSMP(R, V)</span>
<div id="mathAns9-65" ></div>
</div>


<div class="math">
<table>
<tr><td>
<math xmlns="&mathml;" mathsize="big" display="block"><mstyle><mrow><mtext><mrow><mtext>NewSparseMultivariatePolynomial(Integer,OrderedVariableList[x,y,z,t])</mtext></mrow></mtext></mrow></mstyle></math>
</td></tr>
</table>
</div>




<div class="returnType">
Type: Domain
</div>



<p>Let the variables be polynomial.
</p>




<div id="spadComm9-66" class="spadComm" >
<form id="formComm9-66" action="javascript:makeRequest('9-66');" >
<input id="comm9-66" type="text" class="command" style="width: 8em;" value="x: P := 'x  " />
</form>
<span id="commSav9-66" class="commSav" >x: P := 'x  </span>
<div id="mathAns9-66" ></div>
</div>


<div class="math">
<table>
<tr><td>
<math xmlns="&mathml;" mathsize="big" display="block"><mstyle><mi>x</mi></mstyle></math>
</td></tr>
</table>
</div>




<div class="returnType">
Type: 
NewSparseMultivariatePolynomial(Integer,OrderedVariableList [x,y,z,t])
</div>





<div id="spadComm9-67" class="spadComm" >
<form id="formComm9-67" action="javascript:makeRequest('9-67');" >
<input id="comm9-67" type="text" class="command" style="width: 8em;" value="y: P := 'y  " />
</form>
<span id="commSav9-67" class="commSav" >y: P := 'y  </span>
<div id="mathAns9-67" ></div>
</div>


<div class="math">
<table>
<tr><td>
<math xmlns="&mathml;" mathsize="big" display="block"><mstyle><mi>y</mi></mstyle></math>
</td></tr>
</table>
</div>




<div class="returnType">
Type: 
NewSparseMultivariatePolynomial(Integer,OrderedVariableList [x,y,z,t])
</div>





<div id="spadComm9-68" class="spadComm" >
<form id="formComm9-68" action="javascript:makeRequest('9-68');" >
<input id="comm9-68" type="text" class="command" style="width: 8em;" value="z: P := 'z  " />
</form>
<span id="commSav9-68" class="commSav" >z: P := 'z  </span>
<div id="mathAns9-68" ></div>
</div>


<div class="math">
<table>
<tr><td>
<math xmlns="&mathml;" mathsize="big" display="block"><mstyle><mi>z</mi></mstyle></math>
</td></tr>
</table>
</div>




<div class="returnType">
Type: 
NewSparseMultivariatePolynomial(Integer,OrderedVariableList [x,y,z,t])
</div>





<div id="spadComm9-69" class="spadComm" >
<form id="formComm9-69" action="javascript:makeRequest('9-69');" >
<input id="comm9-69" type="text" class="command" style="width: 8em;" value="t: P := 't  " />
</form>
<span id="commSav9-69" class="commSav" >t: P := 't  </span>
<div id="mathAns9-69" ></div>
</div>


<div class="math">
<table>
<tr><td>
<math xmlns="&mathml;" mathsize="big" display="block"><mstyle><mi>t</mi></mstyle></math>
</td></tr>
</table>
</div>




<div class="returnType">
Type: 
NewSparseMultivariatePolynomial(Integer,OrderedVariableList [x,y,z,t])
</div>



<p>Now call the <span class="teletype">SquareFreeRegularTriangularSet</span> domain constructor.
</p>




<div id="spadComm9-70" class="spadComm" >
<form id="formComm9-70" action="javascript:makeRequest('9-70');" >
<input id="comm9-70" type="text" class="command" style="width: 15em;" value="ST := SREGSET(R,E,V,P)" />
</form>
<span id="commSav9-70" class="commSav" >ST := SREGSET(R,E,V,P)</span>
<div id="mathAns9-70" ></div>
</div>


<div class="math">
<table>
<tr><td>
<math xmlns="&mathml;" mathsize="big" display="block"><mstyle><mrow><mtable><mtr><mtd><mrow><mtext>SquareFreeRegularTriangularSet(Integer,</mtext></mrow></mtd></mtr><mtr><mtd><mrow><mtext>&nbsp;&nbsp;IndexedExponentsOrderedVariableList[x,y,z,t],</mtext></mrow></mtd></mtr><mtr><mtd><mrow><mtext>&nbsp;&nbsp;OrderedVariableList[x,y,z,t],</mtext></mrow></mtd></mtr><mtr><mtd><mrow><mtext>&nbsp;&nbsp;NewSparseMultivariatePolynomial(Integer,</mtext></mrow></mtd></mtr><mtr><mtd><mrow><mtext>&nbsp;&nbsp;OrderedVariableList[x,y,z,t]))</mtext></mrow></mtd></mtr></mtable></mrow></mstyle></math>
</td></tr>
</table>
</div>




<div class="returnType">
Type: Domain
</div>



<p>Define a polynomial system.
</p>




<div id="spadComm9-71" class="spadComm" >
<form id="formComm9-71" action="javascript:makeRequest('9-71');" >
<input id="comm9-71" type="text" class="command" style="width: 20em;" value="p1 := x ^ 31 - x ^ 6 - x - y" />
</form>
<span id="commSav9-71" class="commSav" >p1 := x ^ 31 - x ^ 6 - x - y</span>
<div id="mathAns9-71" ></div>
</div>


<div class="math">
<table>
<tr><td>
<math xmlns="&mathml;" mathsize="big" display="block"><mstyle><mrow><mrow><msup><mi>x</mi><mn>31</mn></msup></mrow><mo>-</mo><mrow><msup><mi>x</mi><mn>6</mn></msup></mrow><mo>-</mo><mi>x</mi><mo>-</mo><mi>y</mi></mrow></mstyle></math>
</td></tr>
</table>
</div>




<div class="returnType">
Type: 
NewSparseMultivariatePolynomial(Integer,OrderedVariableList [x,y,z,t])
</div>





<div id="spadComm9-72" class="spadComm" >
<form id="formComm9-72" action="javascript:makeRequest('9-72');" >
<input id="comm9-72" type="text" class="command" style="width: 12em;" value="p2 := x ^ 8  - z" />
</form>
<span id="commSav9-72" class="commSav" >p2 := x ^ 8  - z</span>
<div id="mathAns9-72" ></div>
</div>


<div class="math">
<table>
<tr><td>
<math xmlns="&mathml;" mathsize="big" display="block"><mstyle><mrow><mrow><msup><mi>x</mi><mn>8</mn></msup></mrow><mo>-</mo><mi>z</mi></mrow></mstyle></math>
</td></tr>
</table>
</div>




<div class="returnType">
Type: 
NewSparseMultivariatePolynomial(Integer,OrderedVariableList [x,y,z,t])
</div>





<div id="spadComm9-73" class="spadComm" >
<form id="formComm9-73" action="javascript:makeRequest('9-73');" >
<input id="comm9-73" type="text" class="command" style="width: 12em;" value="p3 := x ^ 10 - t" />
</form>
<span id="commSav9-73" class="commSav" >p3 := x ^ 10 - t</span>
<div id="mathAns9-73" ></div>
</div>


<div class="math">
<table>
<tr><td>
<math xmlns="&mathml;" mathsize="big" display="block"><mstyle><mrow><mrow><msup><mi>x</mi><mn>10</mn></msup></mrow><mo>-</mo><mi>t</mi></mrow></mstyle></math>
</td></tr>
</table>
</div>




<div class="returnType">
Type: 
NewSparseMultivariatePolynomial(Integer,OrderedVariableList [x,y,z,t])
</div>





<div id="spadComm9-74" class="spadComm" >
<form id="formComm9-74" action="javascript:makeRequest('9-74');" >
<input id="comm9-74" type="text" class="command" style="width: 12em;" value="lp := [p1, p2, p3]" />
</form>
<span id="commSav9-74" class="commSav" >lp := [p1, p2, p3]</span>
<div id="mathAns9-74" ></div>
</div>


<div class="math">
<table>
<tr><td>
<math xmlns="&mathml;" mathsize="big" display="block"><mstyle><mrow><mo>[</mo><mrow><mrow><msup><mi>x</mi><mn>31</mn></msup></mrow><mo>-</mo><mrow><msup><mi>x</mi><mn>6</mn></msup></mrow><mo>-</mo><mi>x</mi><mo>-</mo><mi>y</mi></mrow><mo>,</mo><mrow><mrow><msup><mi>x</mi><mn>8</mn></msup></mrow><mo>-</mo><mi>z</mi></mrow><mo>,</mo><mrow><mrow><msup><mi>x</mi><mn>10</mn></msup></mrow><mo>-</mo><mi>t</mi></mrow><mo>]</mo></mrow></mstyle></math>
</td></tr>
</table>
</div>




<div class="returnType">
Type: 
List NewSparseMultivariatePolynomial(Integer,OrderedVariableList [x,y,z,t])
</div>



<p>First of all, let us solve this system in the sense of Kalkbrener.
</p>




<div id="spadComm9-75" class="spadComm" >
<form id="formComm9-75" action="javascript:makeRequest('9-75');" >
<input id="comm9-75" type="text" class="command" style="width: 13em;" value="zeroSetSplit(lp)$ST" />
</form>
<span id="commSav9-75" class="commSav" >zeroSetSplit(lp)$ST</span>
<div id="mathAns9-75" ></div>
</div>


<div class="math">
<table>
<tr><td>
<math xmlns="&mathml;" mathsize="big" display="block"><mstyle><mrow><mo>[</mo><mrow><mo>{</mo><mrow><mrow><msup><mi>z</mi><mn>5</mn></msup></mrow><mo>-</mo><mrow><msup><mi>t</mi><mn>4</mn></msup></mrow></mrow><mo>,</mo><mrow><mrow><mi>t</mi><mspace width="0.5 em" /><mi>z</mi><mspace width="0.5 em" /><mrow><msup><mi>y</mi><mn>2</mn></msup></mrow></mrow><mo>+</mo><mrow><mn>2</mn><mspace width="0.5 em" /><mrow><msup><mi>z</mi><mn>3</mn></msup></mrow><mspace width="0.5 em" /><mi>y</mi></mrow><mo>-</mo><mrow><msup><mi>t</mi><mn>8</mn></msup></mrow><mo>+</mo><mrow><mn>2</mn><mspace width="0.5 em" /><mrow><msup><mi>t</mi><mn>5</mn></msup></mrow></mrow><mo>+</mo><mrow><msup><mi>t</mi><mn>3</mn></msup></mrow><mo>-</mo><mrow><msup><mi>t</mi><mn>2</mn></msup></mrow></mrow><mo>,</mo><mrow><mrow><mrow><mo>(</mo><mrow><msup><mi>t</mi><mn>4</mn></msup></mrow><mo>-</mo><mi>t</mi><mo>)</mo></mrow><mspace width="0.5 em" /><mi>x</mi></mrow><mo>-</mo><mrow><mi>t</mi><mspace width="0.5 em" /><mi>y</mi></mrow><mo>-</mo><mrow><msup><mi>z</mi><mn>2</mn></msup></mrow></mrow><mo>}</mo></mrow><mo>]</mo></mrow></mstyle></math>
</td></tr>
</table>
</div>




<div class="returnType">
Type: 
List SquareFreeRegularTriangularSet(Integer,
IndexedExponents OrderedVariableList [x,y,z,t],
OrderedVariableList [x,y,z,t],
NewSparseMultivariatePolynomial(Integer,
OrderedVariableList [x,y,z,t]))
</div>



<p>And now in the sense of Lazard (or Wu and other authors).
</p>




<div id="spadComm9-76" class="spadComm" >
<form id="formComm9-76" action="javascript:makeRequest('9-76');" >
<input id="comm9-76" type="text" class="command" style="width: 17em;" value="zeroSetSplit(lp,false)$ST" />
</form>
<span id="commSav9-76" class="commSav" >zeroSetSplit(lp,false)$ST</span>
<div id="mathAns9-76" ></div>
</div>


<div class="math">
<table>
<tr><td>
<math xmlns="&mathml;" mathsize="big" display="block"><mstyle><mrow><mtable><mtr><mtd><mo>[</mo><mrow><mo>{</mo><mrow><mrow><msup><mi>z</mi><mn>5</mn></msup></mrow><mo>-</mo><mrow><msup><mi>t</mi><mn>4</mn></msup></mrow></mrow><mo>,</mo><mrow><mrow><mi>t</mi><mspace width="0.5 em" /><mi>z</mi><mspace width="0.5 em" /><mrow><msup><mi>y</mi><mn>2</mn></msup></mrow></mrow><mo>+</mo><mrow><mn>2</mn><mspace width="0.5 em" /><mrow><msup><mi>z</mi><mn>3</mn></msup></mrow><mspace width="0.5 em" /><mi>y</mi></mrow><mo>-</mo><mrow><msup><mi>t</mi><mn>8</mn></msup></mrow><mo>+</mo><mrow><mn>2</mn><mspace width="0.5 em" /><mrow><msup><mi>t</mi><mn>5</mn></msup></mrow></mrow><mo>+</mo><mrow><msup><mi>t</mi><mn>3</mn></msup></mrow><mo>-</mo><mrow><msup><mi>t</mi><mn>2</mn></msup></mrow></mrow><mo>,</mo><mrow><mrow><mrow><mo>(</mo><mrow><msup><mi>t</mi><mn>4</mn></msup></mrow><mo>-</mo><mi>t</mi><mo>)</mo></mrow><mspace width="0.5 em" /><mi>x</mi></mrow><mo>-</mo><mrow><mi>t</mi><mspace width="0.5 em" /><mi>y</mi></mrow><mo>-</mo><mrow><msup><mi>z</mi><mn>2</mn></msup></mrow></mrow><mo>}</mo></mrow><mo>,</mo></mtd></mtr><mtr><mtd></mtd></mtr><mtr><mtd><mrow><mo>{</mo><mrow><mrow><msup><mi>t</mi><mn>3</mn></msup></mrow><mo>-</mo><mn>1</mn></mrow><mo>,</mo><mrow><mrow><msup><mi>z</mi><mn>5</mn></msup></mrow><mo>-</mo><mi>t</mi></mrow><mo>,</mo><mrow><mrow><mi>t</mi><mspace width="0.5 em" /><mi>y</mi></mrow><mo>+</mo><mrow><msup><mi>z</mi><mn>2</mn></msup></mrow></mrow><mo>,</mo><mrow><mrow><mi>z</mi><mspace width="0.5 em" /><mrow><msup><mi>x</mi><mn>2</mn></msup></mrow></mrow><mo>-</mo><mi>t</mi></mrow><mo>}</mo></mrow><mo>,</mo><mrow><mo>{</mo><mi>t</mi><mo>,</mo><mi>z</mi><mo>,</mo><mi>y</mi><mo>,</mo><mi>x</mi><mo>}</mo></mrow><mo>]</mo></mtd></mtr></mtable></mrow></mstyle></math>
</td></tr>
</table>
</div>




<div class="returnType">
Type: 
List SquareFreeRegularTriangularSet(Integer,
IndexedExponents OrderedVariableList [x,y,z,t],
OrderedVariableList [x,y,z,t],
NewSparseMultivariatePolynomial(Integer,
OrderedVariableList [x,y,z,t]))
</div>



<p>Now to see the difference with the <span class="teletype">RegularTriangularSet</span> domain
constructor, we define:
</p>




<div id="spadComm9-77" class="spadComm" >
<form id="formComm9-77" action="javascript:makeRequest('9-77');" >
<input id="comm9-77" type="text" class="command" style="width: 14em;" value="T := REGSET(R,E,V,P)" />
</form>
<span id="commSav9-77" class="commSav" >T := REGSET(R,E,V,P)</span>
<div id="mathAns9-77" ></div>
</div>


<div class="math">
<table>
<tr><td>
<math xmlns="&mathml;" mathsize="big" display="block"><mstyle><mrow><mtable><mtr><mtd><mrow><mtext>RegularTriangularSet(Integer,</mtext></mrow></mtd></mtr><mtr><mtd><mrow><mtext>IndexedExponentsOrderedVariableList[x,y,z,t],</mtext></mrow></mtd></mtr><mtr><mtd><mrow><mtext>OrderedVariableList[x,y,z,t],</mtext></mrow></mtd></mtr><mtr><mtd><mrow><mtext>NewSparseMultivariatePolynomial(Integer,</mtext></mrow></mtd></mtr><mtr><mtd><mrow><mtext>OrderedVariableList[x,y,z,t]))</mtext></mrow></mtd></mtr></mtable></mrow></mstyle></math>
</td></tr>
</table>
</div>




<div class="returnType">
Type: Domain
</div>



<p>and compute:
</p>




<div id="spadComm9-78" class="spadComm" >
<form id="formComm9-78" action="javascript:makeRequest('9-78');" >
<input id="comm9-78" type="text" class="command" style="width: 21em;" value="lts := zeroSetSplit(lp,false)$T" />
</form>
<span id="commSav9-78" class="commSav" >lts := zeroSetSplit(lp,false)$T</span>
<div id="mathAns9-78" ></div>
</div>


<div class="math">
<table>
<tr><td>
<math xmlns="&mathml;" mathsize="big" display="block"><mstyle><mrow><mtable><mtr><mtd><mo>[</mo><mrow><mo>{</mo><mrow><mrow><msup><mi>z</mi><mn>5</mn></msup></mrow><mo>-</mo><mrow><msup><mi>t</mi><mn>4</mn></msup></mrow></mrow><mo>,</mo><mrow><mrow><mi>t</mi><mspace width="0.5 em" /><mi>z</mi><mspace width="0.5 em" /><mrow><msup><mi>y</mi><mn>2</mn></msup></mrow></mrow><mo>+</mo><mrow><mn>2</mn><mspace width="0.5 em" /><mrow><msup><mi>z</mi><mn>3</mn></msup></mrow><mspace width="0.5 em" /><mi>y</mi></mrow><mo>-</mo><mrow><msup><mi>t</mi><mn>8</mn></msup></mrow><mo>+</mo><mrow><mn>2</mn><mspace width="0.5 em" /><mrow><msup><mi>t</mi><mn>5</mn></msup></mrow></mrow><mo>+</mo><mrow><msup><mi>t</mi><mn>3</mn></msup></mrow><mo>-</mo><mrow><msup><mi>t</mi><mn>2</mn></msup></mrow></mrow><mo>,</mo><mrow><mrow><mrow><mo>(</mo><mrow><msup><mi>t</mi><mn>4</mn></msup></mrow><mo>-</mo><mi>t</mi><mo>)</mo></mrow><mspace width="0.5 em" /><mi>x</mi></mrow><mo>-</mo><mrow><mi>t</mi><mspace width="0.5 em" /><mi>y</mi></mrow><mo>-</mo><mrow><msup><mi>z</mi><mn>2</mn></msup></mrow></mrow><mo>}</mo></mrow><mo>,</mo></mtd></mtr><mtr><mtd></mtd></mtr><mtr><mtd><mrow><mo>{</mo><mrow><mrow><msup><mi>t</mi><mn>3</mn></msup></mrow><mo>-</mo><mn>1</mn></mrow><mo>,</mo><mrow><mrow><msup><mi>z</mi><mn>5</mn></msup></mrow><mo>-</mo><mi>t</mi></mrow><mo>,</mo><mrow><mrow><mi>t</mi><mspace width="0.5 em" /><mi>z</mi><mspace width="0.5 em" /><mrow><msup><mi>y</mi><mn>2</mn></msup></mrow></mrow><mo>+</mo><mrow><mn>2</mn><mspace width="0.5 em" /><mrow><msup><mi>z</mi><mn>3</mn></msup></mrow><mspace width="0.5 em" /><mi>y</mi></mrow><mo>+</mo><mn>1</mn></mrow><mo>,</mo><mrow><mrow><mi>z</mi><mspace width="0.5 em" /><mrow><msup><mi>x</mi><mn>2</mn></msup></mrow></mrow><mo>-</mo><mi>t</mi></mrow><mo>}</mo></mrow><mo>,</mo><mrow><mo>{</mo><mi>t</mi><mo>,</mo><mi>z</mi><mo>,</mo><mi>y</mi><mo>,</mo><mi>x</mi><mo>}</mo></mrow><mo>]</mo></mtd></mtr></mtable></mrow></mstyle></math>
</td></tr>
</table>
</div>




<div class="returnType">
Type: 
List RegularTriangularSet(Integer,
IndexedExponents OrderedVariableList [x,y,z,t],
OrderedVariableList [x,y,z,t],
NewSparseMultivariatePolynomial(Integer,
OrderedVariableList [x,y,z,t]))
</div>



<p>If you look at the second set in both decompositions in the sense of Lazard,
you will see that the polynomial with main variable <span style="font-weight: bold;"> y</span> is not the same.
</p>


<p>Let us understand what has happened.
</p>


<p>We define:
</p>




<div id="spadComm9-79" class="spadComm" >
<form id="formComm9-79" action="javascript:makeRequest('9-79');" >
<input id="comm9-79" type="text" class="command" style="width: 8em;" value="ts := lts.2" />
</form>
<span id="commSav9-79" class="commSav" >ts := lts.2</span>
<div id="mathAns9-79" ></div>
</div>


<div class="math">
<table>
<tr><td>
<math xmlns="&mathml;" mathsize="big" display="block"><mstyle><mrow><mo>{</mo><mrow><mrow><msup><mi>t</mi><mn>3</mn></msup></mrow><mo>-</mo><mn>1</mn></mrow><mo>,</mo><mrow><mrow><msup><mi>z</mi><mn>5</mn></msup></mrow><mo>-</mo><mi>t</mi></mrow><mo>,</mo><mrow><mrow><mi>t</mi><mspace width="0.5 em" /><mi>z</mi><mspace width="0.5 em" /><mrow><msup><mi>y</mi><mn>2</mn></msup></mrow></mrow><mo>+</mo><mrow><mn>2</mn><mspace width="0.5 em" /><mrow><msup><mi>z</mi><mn>3</mn></msup></mrow><mspace width="0.5 em" /><mi>y</mi></mrow><mo>+</mo><mn>1</mn></mrow><mo>,</mo><mrow><mrow><mi>z</mi><mspace width="0.5 em" /><mrow><msup><mi>x</mi><mn>2</mn></msup></mrow></mrow><mo>-</mo><mi>t</mi></mrow><mo>}</mo></mrow></mstyle></math>
</td></tr>
</table>
</div>




<div class="returnType">
Type: 
RegularTriangularSet(Integer,
IndexedExponents OrderedVariableList [x,y,z,t],
OrderedVariableList [x,y,z,t],
NewSparseMultivariatePolynomial(Integer,
OrderedVariableList [x,y,z,t]))
</div>





<div id="spadComm9-80" class="spadComm" >
<form id="formComm9-80" action="javascript:makeRequest('9-80');" >
<input id="comm9-80" type="text" class="command" style="width: 15em;" value="pol := select(ts,'y)$T" />
</form>
<span id="commSav9-80" class="commSav" >pol := select(ts,'y)$T</span>
<div id="mathAns9-80" ></div>
</div>


<div class="math">
<table>
<tr><td>
<math xmlns="&mathml;" mathsize="big" display="block"><mstyle><mrow><mrow><mi>t</mi><mspace width="0.5 em" /><mi>z</mi><mspace width="0.5 em" /><mrow><msup><mi>y</mi><mn>2</mn></msup></mrow></mrow><mo>+</mo><mrow><mn>2</mn><mspace width="0.5 em" /><mrow><msup><mi>z</mi><mn>3</mn></msup></mrow><mspace width="0.5 em" /><mi>y</mi></mrow><mo>+</mo><mn>1</mn></mrow></mstyle></math>
</td></tr>
</table>
</div>




<div class="returnType">
Type: 
Union(
NewSparseMultivariatePolynomial(Integer,
OrderedVariableList [x,y,z,t]),...)
</div>





<div id="spadComm9-81" class="spadComm" >
<form id="formComm9-81" action="javascript:makeRequest('9-81');" >
<input id="comm9-81" type="text" class="command" style="width: 20em;" value="tower := collectUnder(ts,'y)$T" />
</form>
<span id="commSav9-81" class="commSav" >tower := collectUnder(ts,'y)$T</span>
<div id="mathAns9-81" ></div>
</div>


<div class="math">
<table>
<tr><td>
<math xmlns="&mathml;" mathsize="big" display="block"><mstyle><mrow><mo>{</mo><mrow><mrow><msup><mi>t</mi><mn>3</mn></msup></mrow><mo>-</mo><mn>1</mn></mrow><mo>,</mo><mrow><mrow><msup><mi>z</mi><mn>5</mn></msup></mrow><mo>-</mo><mi>t</mi></mrow><mo>}</mo></mrow></mstyle></math>
</td></tr>
</table>
</div>




<div class="returnType">
Type: 
RegularTriangularSet(Integer,
IndexedExponents OrderedVariableList [x,y,z,t],
OrderedVariableList [x,y,z,t],
NewSparseMultivariatePolynomial(Integer,
OrderedVariableList [x,y,z,t]))
</div>





<div id="spadComm9-82" class="spadComm" >
<form id="formComm9-82" action="javascript:makeRequest('9-82');" >
<input id="comm9-82" type="text" class="command" style="width: 33em;" value="pack := RegularTriangularSetGcdPackage(R,E,V,P,T)" />
</form>
<span id="commSav9-82" class="commSav" >pack := RegularTriangularSetGcdPackage(R,E,V,P,T)</span>
<div id="mathAns9-82" ></div>
</div>


<div class="math">
<table>
<tr><td>
<math xmlns="&mathml;" mathsize="big" display="block"><mstyle><mrow><mtable><mtr><mtd><mrow><mtext>RegularTriangularSetGcdPackage(Integer,</mtext></mrow></mtd></mtr><mtr><mtd><mrow><mtext>&nbsp;&nbsp;IndexedExponentsOrderedVariableList[x,y,z,t],</mtext></mrow></mtd></mtr><mtr><mtd><mrow><mtext>&nbsp;&nbsp;OrderedVariableList[x,y,z,t],</mtext></mrow></mtd></mtr><mtr><mtd><mrow><mtext>&nbsp;&nbsp;NewSparseMultivariatePolynomial(Integer,</mtext></mrow></mtd></mtr><mtr><mtd><mrow><mtext>&nbsp;&nbsp;OrderedVariableList[x,y,z,t]),</mtext></mrow></mtd></mtr><mtr><mtd><mrow><mtext>&nbsp;&nbsp;RegularTriangularSet(Integer,</mtext></mrow></mtd></mtr><mtr><mtd><mrow><mtext>&nbsp;&nbsp;IndexedExponentsOrderedVariableList[x,y,z,t],</mtext></mrow></mtd></mtr><mtr><mtd><mrow><mtext>&nbsp;&nbsp;OrderedVariableList[x,y,z,t],</mtext></mrow></mtd></mtr><mtr><mtd><mrow><mtext>&nbsp;&nbsp;NewSparseMultivariatePolynomial(Integer,</mtext></mrow></mtd></mtr><mtr><mtd><mrow><mtext>&nbsp;&nbsp;OrderedVariableList[x,y,z,t])))</mtext></mrow></mtd></mtr></mtable></mrow></mstyle></math>
</td></tr>
</table>
</div>




<div class="returnType">
Type: Domain
</div>



<p>Then we compute:
</p>




<div id="spadComm9-83" class="spadComm" >
<form id="formComm9-83" action="javascript:makeRequest('9-83');" >
<input id="comm9-83" type="text" class="command" style="width: 23em;" value="toseSquareFreePart(pol,tower)$pack" />
</form>
<span id="commSav9-83" class="commSav" >toseSquareFreePart(pol,tower)$pack</span>
<div id="mathAns9-83" ></div>
</div>


<div class="math">
<table>
<tr><td>
<math xmlns="&mathml;" mathsize="big" display="block"><mstyle><mrow><mo>[</mo><mrow><mo>[</mo><mrow><mi>val</mi><mo>=</mo><mrow><mrow><mi>t</mi><mspace width="0.5 em" /><mi>y</mi></mrow><mo>+</mo><mrow><msup><mi>z</mi><mn>2</mn></msup></mrow></mrow></mrow><mo>,</mo><mrow><mi>tower</mi><mo>=</mo><mrow><mo>{</mo><mrow><mrow><msup><mi>t</mi><mn>3</mn></msup></mrow><mo>-</mo><mn>1</mn></mrow><mo>,</mo><mrow><mrow><msup><mi>z</mi><mn>5</mn></msup></mrow><mo>-</mo><mi>t</mi></mrow><mo>}</mo></mrow></mrow><mo>]</mo></mrow><mo>]</mo></mrow></mstyle></math>
</td></tr>
</table>
</div>




<div class="returnType">
Type: 
List Record(val: 
NewSparseMultivariatePolynomial(Integer,
OrderedVariableList [x,y,z,t]),
tower: RegularTriangularSet(Integer,
IndexedExponents OrderedVariableList [x,y,z,t],
OrderedVariableList [x,y,z,t],
NewSparseMultivariatePolynomial(Integer,
OrderedVariableList [x,y,z,t])))
</div>





</div><a href="book-contents.xhtml" style="margin-right: 10px;">Book Contents</a>
<a href="section-9.74.xhtml" style="margin-right: 10px;">Previous Section 9.74 SquareMatrix</a><a href="section-9.76.xhtml" style="margin-right: 10px;">Next Section 9.76 Stream</a>
<a href="book-index.xhtml">Book Index</a></body>
</html>