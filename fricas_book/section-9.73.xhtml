<?xml version="1.0" encoding="UTF-8" ?>

<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.1 plus MathML 2.0//EN"
"http://www.w3.org/TR/MathML2/dtd/xhtml-math11-f.dtd" [
<!ENTITY mathml "http://www.w3.org/1998/Math/MathML">
]>

<html xmlns="http://www.w3.org/1999/xhtml"
      xmlns:xlink="http://www.w3.org/1999/xlink" >


  <head>
    <title>Section9.73</title>
    <link rel="stylesheet" type="text/css" href="graphicstyle.css" />
    <script type="text/javascript" src="bookax1.js" />
  </head>

  <body>
<a href="book-contents.xhtml" style="margin-right: 10px;">Book Contents</a><a href="section-9.72.xhtml" style="margin-right: 10px;">Previous Section 9.72 SingleInteger</a><a href="section-9.74.xhtml" style="margin-right: 10px;">Next Section 9.74 SquareMatrix</a>
<a href="book-index.xhtml">Book Index</a><div class="section"  id="sec-9.73">
<h2 class="sectiontitle">9.73  SparseTable</h2>


<a name="SparseTableXmpPage" class="label"/>


<p>The <span class="teletype">SparseTable</span> domain provides a general purpose table type
with default entries.
</p>


<p>Here we create a table to save strings under integer keys.  The value
<span class="teletype">"Try again!"</span> is returned if no other value has been stored for a
key.
</p>




<div id="spadComm9-48" class="spadComm" >
<form id="formComm9-48" action="javascript:makeRequest('9-48');" >
<input id="comm9-48" type="text" class="command" style="width: 38em;" value='t: SparseTable(Integer, String, "Try again!") := table() ' />
</form>
<span id="commSav9-48" class="commSav" >t: SparseTable(Integer, String, "Try again!") := table() </span>
<div id="mathAns9-48" ></div>
</div>


<div class="math">
<table>
<tr><td>
<math xmlns="&mathml;" mathsize="big" display="block"><mstyle><mrow><mi>table</mi><mo>(</mo><mo>)</mo></mrow></mstyle></math>
</td></tr>
</table>
</div>




<div class="returnType">
Type: SparseTable(Integer,String,Try again!)
</div>



<p>Entries can be stored in the table.
</p>




<div id="spadComm9-49" class="spadComm" >
<form id="formComm9-49" action="javascript:makeRequest('9-49');" >
<input id="comm9-49" type="text" class="command" style="width: 15em;" value='t.3 := "Number three" ' />
</form>
<span id="commSav9-49" class="commSav" >t.3 := "Number three" </span>
<div id="mathAns9-49" ></div>
</div>


<div class="math">
<table>
<tr><td>
<math xmlns="&mathml;" mathsize="big" display="block"><mstyle><mrow><mtext><mrow><mtext mathvariant='monospace'>"<mspace width="0.5em"/>Number<mspace width="0.5em"/>three<mspace width="0.5em"/>"<mspace width="0.5em"/></mtext></mrow></mtext></mrow></mstyle></math>
</td></tr>
</table>
</div>




<div class="returnType">
Type: String
</div>





<div id="spadComm9-50" class="spadComm" >
<form id="formComm9-50" action="javascript:makeRequest('9-50');" >
<input id="comm9-50" type="text" class="command" style="width: 14em;" value='t.4 := "Number four" ' />
</form>
<span id="commSav9-50" class="commSav" >t.4 := "Number four" </span>
<div id="mathAns9-50" ></div>
</div>


<div class="math">
<table>
<tr><td>
<math xmlns="&mathml;" mathsize="big" display="block"><mstyle><mrow><mtext><mrow><mtext mathvariant='monospace'>"<mspace width="0.5em"/>Number<mspace width="0.5em"/>four<mspace width="0.5em"/>"<mspace width="0.5em"/></mtext></mrow></mtext></mrow></mstyle></math>
</td></tr>
</table>
</div>




<div class="returnType">
Type: String
</div>



<p>These values can be retrieved as usual, but if a look up fails the
default entry will be returned.
</p>




<div id="spadComm9-51" class="spadComm" >
<form id="formComm9-51" action="javascript:makeRequest('9-51');" >
<input id="comm9-51" type="text" class="command" style="width: 3em;" value="t.3 " />
</form>
<span id="commSav9-51" class="commSav" >t.3 </span>
<div id="mathAns9-51" ></div>
</div>


<div class="math">
<table>
<tr><td>
<math xmlns="&mathml;" mathsize="big" display="block"><mstyle><mrow><mtext><mrow><mtext mathvariant='monospace'>"<mspace width="0.5em"/>Number<mspace width="0.5em"/>three<mspace width="0.5em"/>"<mspace width="0.5em"/></mtext></mrow></mtext></mrow></mstyle></math>
</td></tr>
</table>
</div>




<div class="returnType">
Type: String
</div>





<div id="spadComm9-52" class="spadComm" >
<form id="formComm9-52" action="javascript:makeRequest('9-52');" >
<input id="comm9-52" type="text" class="command" style="width: 3em;" value="t.2 " />
</form>
<span id="commSav9-52" class="commSav" >t.2 </span>
<div id="mathAns9-52" ></div>
</div>


<div class="math">
<table>
<tr><td>
<math xmlns="&mathml;" mathsize="big" display="block"><mstyle><mrow><mtext><mrow><mtext mathvariant='monospace'>"<mspace width="0.5em"/>Try<mspace width="0.5em"/>again<mspace width="0.5em"/>!<mspace width="0.5em"/>"<mspace width="0.5em"/></mtext></mrow></mtext></mrow></mstyle></math>
</td></tr>
</table>
</div>




<div class="returnType">
Type: String
</div>



<p>To see which values are explicitly stored, the
<span class="spadfunFrom" >keys</span><span class="index">keys</span><a name="chapter-9-46"/><span class="index">SparseTable</span><a name="chapter-9-47"/> and <span class="spadfunFrom" >entries</span><span class="index">entries</span><a name="chapter-9-48"/><span class="index">SparseTable</span><a name="chapter-9-49"/>
functions can be used.
</p>




<div id="spadComm9-53" class="spadComm" >
<form id="formComm9-53" action="javascript:makeRequest('9-53');" >
<input id="comm9-53" type="text" class="command" style="width: 5em;" value="keys t " />
</form>
<span id="commSav9-53" class="commSav" >keys t </span>
<div id="mathAns9-53" ></div>
</div>


<div class="math">
<table>
<tr><td>
<math xmlns="&mathml;" mathsize="big" display="block"><mstyle><mrow><mo>[</mo><mn>4</mn><mo>,</mo><mn>3</mn><mo>]</mo></mrow></mstyle></math>
</td></tr>
</table>
</div>




<div class="returnType">
Type: List Integer
</div>





<div id="spadComm9-54" class="spadComm" >
<form id="formComm9-54" action="javascript:makeRequest('9-54');" >
<input id="comm9-54" type="text" class="command" style="width: 7em;" value="entries t " />
</form>
<span id="commSav9-54" class="commSav" >entries t </span>
<div id="mathAns9-54" ></div>
</div>


<div class="math">
<table>
<tr><td>
<math xmlns="&mathml;" mathsize="big" display="block"><mstyle><mrow><mo>[</mo><mtext><mrow><mtext mathvariant='monospace'>"<mspace width="0.5em"/>Number<mspace width="0.5em"/>four<mspace width="0.5em"/>"<mspace width="0.5em"/></mtext></mrow></mtext><mo>,</mo><mtext><mrow><mtext mathvariant='monospace'>"<mspace width="0.5em"/>Number<mspace width="0.5em"/>three<mspace width="0.5em"/>"<mspace width="0.5em"/></mtext></mrow></mtext><mo>]</mo></mrow></mstyle></math>
</td></tr>
</table>
</div>




<div class="returnType">
Type: List String
</div>



<p>If a specific table representation is required, the 
<span class="teletype">GeneralSparseTable</span> constructor should be used.  The domain 
<span class="teletype">SparseTable(K, E, dflt)</span> is equivalent to 
<span class="teletype">GeneralSparseTable(K,E,Table(K,E), dflt)</span>.  
For more information, see 
<a href="section-9.18.xhtml#EqTableXmpPage" class="ref" >TableXmpPage</a>  and 
<a href="section-9.30.xhtml#GeneralSparseTableXmpPage" class="ref" >GeneralSparseTableXmpPage</a> .
</p>




</div><a href="book-contents.xhtml" style="margin-right: 10px;">Book Contents</a>
<a href="section-9.72.xhtml" style="margin-right: 10px;">Previous Section 9.72 SingleInteger</a><a href="section-9.74.xhtml" style="margin-right: 10px;">Next Section 9.74 SquareMatrix</a>
<a href="book-index.xhtml">Book Index</a></body>
</html>