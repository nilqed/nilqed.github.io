<?xml version="1.0" encoding="UTF-8" ?>

<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.1 plus MathML 2.0//EN"
"http://www.w3.org/TR/MathML2/dtd/xhtml-math11-f.dtd" [
<!ENTITY mathml "http://www.w3.org/1998/Math/MathML">
]>

<html xmlns="http://www.w3.org/1999/xhtml"
      xmlns:xlink="http://www.w3.org/1999/xlink" >


  <head>
    <title>Section6.8</title>
    <link rel="stylesheet" type="text/css" href="graphicstyle.css" />
    <script type="text/javascript" src="bookax1.js" />
  </head>

  <body>
<a href="book-contents.xhtml" style="margin-right: 10px;">Book Contents</a><a href="section-6.7.xhtml" style="margin-right: 10px;">Previous Section 6.7 Functions vs. Operations</a><a href="section-6.9.xhtml" style="margin-right: 10px;">Next Section 6.9 How FriCAS Determines What Function to Use</a>
<a href="book-index.xhtml">Book Index</a><div class="section"  id="sec-6.8">
<h2 class="sectiontitle">6.8  Delayed Assignments vs. Functions with No Arguments</h2>


<a name="ugUserDelay" class="label"/>


<p>In <a href="section-5.1.xhtml#ugLangAssign" class="ref" >ugLangAssign</a>  we discussed the
difference between immediate and <span class="index">function:with no arguments</span><a name="chapter-6-13"/>
delayed assignments.  In this section we show the difference between
delayed assignments and functions of no arguments.
</p>


<p>A function of no arguments is sometimes called a <span class="italic">nullary function.</span>
</p>



<div id="spadComm6-44" class="spadComm" >
<form id="formComm6-44" action="javascript:makeRequest('6-44');" >
<input id="comm6-44" type="text" class="command" style="width: 14em;" value="sin24() == sin(24.0)" />
</form>
<span id="commSav6-44" class="commSav" >sin24() == sin(24.0)</span>
<div id="mathAns6-44" ></div>
</div>




<div class="returnType">
Type: Void
</div>



<p>You must use the parentheses <span class="italic"><span class="teletype">()</span></span> to evaluate it.  Like a
delayed assignment, the right-hand-side of a function evaluation is
not evaluated until the left-hand-side is used.
</p>



<div id="spadComm6-45" class="spadComm" >
<form id="formComm6-45" action="javascript:makeRequest('6-45');" >
<input id="comm6-45" type="text" class="command" style="width: 5em;" value="sin24()" />
</form>
<span id="commSav6-45" class="commSav" >sin24()</span>
<div id="mathAns6-45" ></div>
</div>




<div class="verbatim"><br />
&nbsp;&nbsp;&nbsp;Compiling&nbsp;function&nbsp;sin24&nbsp;with&nbsp;type&nbsp;()&nbsp;-&gt;&nbsp;Float&nbsp;<br />
</div>


<div class="math">
<table>
<tr><td>
<math xmlns="&mathml;" mathsize="big" display="block"><mstyle><mrow><mo>-</mo><mrow><mn>0</mn><mo>.</mo><mn>9055783620</mn><mo></mo><mn>0662384514</mn></mrow></mrow></mstyle></math>
</td></tr>
</table>
</div>




<div class="returnType">
Type: Float
</div>



<p>If you omit the parentheses, you just get the function definition.
</p>



<div id="spadComm6-46" class="spadComm" >
<form id="formComm6-46" action="javascript:makeRequest('6-46');" >
<input id="comm6-46" type="text" class="command" style="width: 4em;" value="sin24" />
</form>
<span id="commSav6-46" class="commSav" >sin24</span>
<div id="mathAns6-46" ></div>
</div>


<div class="math">
<table>
<tr><td>
<math xmlns="&mathml;" mathsize="big" display="block"><mstyle><mrow><mi>sin24</mi><mo></mo><mrow><mo>(</mo><mo>)</mo></mrow><mo></mo><mo>=</mo><mo>=</mo><mo></mo><mrow><mo>sin</mo><mo>(</mo><mrow><mn>24</mn><mo>.</mo><mn>0</mn></mrow><mo>)</mo></mrow></mrow></mstyle></math>
</td></tr>
</table>
</div>




<div class="returnType">
Type: FunctionCalled sin24
</div>



<p>You do not use the parentheses <span class="italic"><span class="teletype">()</span></span> in a delayed assignment...
</p>




<div id="spadComm6-47" class="spadComm" >
<form id="formComm6-47" action="javascript:makeRequest('6-47');" >
<input id="comm6-47" type="text" class="command" style="width: 12em;" value="cos24 == cos(24.0)" />
</form>
<span id="commSav6-47" class="commSav" >cos24 == cos(24.0)</span>
<div id="mathAns6-47" ></div>
</div>




<div class="returnType">
Type: Void
</div>



<p>nor in the evaluation.
</p>




<div id="spadComm6-48" class="spadComm" >
<form id="formComm6-48" action="javascript:makeRequest('6-48');" >
<input id="comm6-48" type="text" class="command" style="width: 4em;" value="cos24" />
</form>
<span id="commSav6-48" class="commSav" >cos24</span>
<div id="mathAns6-48" ></div>
</div>




<div class="verbatim"><br />
&nbsp;&nbsp;&nbsp;Compiling&nbsp;body&nbsp;of&nbsp;rule&nbsp;cos24&nbsp;to&nbsp;compute&nbsp;value&nbsp;of&nbsp;type&nbsp;Float&nbsp;<br />
</div>


<div class="math">
<table>
<tr><td>
<math xmlns="&mathml;" mathsize="big" display="block"><mstyle><mrow><mn>0</mn><mo>.</mo><mn>4241790073</mn><mo></mo><mn>3699697594</mn></mrow></mstyle></math>
</td></tr>
</table>
</div>




<div class="returnType">
Type: Float
</div>



<p>The only syntactic difference between delayed assignments
and nullary functions is that you use <span class="italic"><span class="teletype">()</span></span> in the latter case.
</p>




</div><a href="book-contents.xhtml" style="margin-right: 10px;">Book Contents</a>
<a href="section-6.7.xhtml" style="margin-right: 10px;">Previous Section 6.7 Functions vs. Operations</a><a href="section-6.9.xhtml" style="margin-right: 10px;">Next Section 6.9 How FriCAS Determines What Function to Use</a>
<a href="book-index.xhtml">Book Index</a></body>
</html>